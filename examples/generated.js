// Generated by psc version 0.5.6.2
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = {
        create: function (value) {
            return value;
        }
    };
    function LT() {

    };
    LT.value = new LT();
    function GT() {

    };
    GT.value = new GT();
    function EQ() {

    };
    EQ.value = new EQ();
    function Semigroupoid($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    function Show(show) {
        this.show = show;
    };
    function Functor($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    function Applicative(__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    function Num($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    function Eq($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    function Ord(__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    function Bits($amp, $up, complement, shl, shr, zshr, $bar) {
        this["&"] = $amp;
        this["^"] = $up;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
        this["|"] = $bar;
    };
    function BoolLike($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    function Semigroup($less$greater) {
        this["<>"] = $less$greater;
    };
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
    function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
    function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
    function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
    function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
    function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
    function numComplement(n) {  return ~n;};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $bar = function (dict) {
        return dict["|"];
    };
    var $up = function (dict) {
        return dict["^"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_1) {
        return $less$greater(__dict_Semigroup_1);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $amp = function (dict) {
        return dict["&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var zshr = function (dict) {
        return dict.zshr;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var shr = function (dict) {
        return dict.shr;
    };
    var showUnit = function () {
        return new Show(function (_9) {
            return "Unit {}";
        });
    };
    var showString = function () {
        return new Show(showStringImpl);
    };
    var showOrdering = function () {
        return new Show(function (_17) {
            if (_17 instanceof LT) {
                return "LT";
            };
            if (_17 instanceof GT) {
                return "GT";
            };
            if (_17 instanceof EQ) {
                return "EQ";
            };
            throw new Error("Failed pattern match");
        });
    };
    var showNumber = function () {
        return new Show(showNumberImpl);
    };
    var showBoolean = function () {
        return new Show(function (_10) {
            if (_10) {
                return "true";
            };
            if (!_10) {
                return "false";
            };
            throw new Error("Failed pattern match");
        });
    };
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_2) {
        return new Show(showArrayImpl(show(__dict_Show_2)));
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semigroupoidArr = function () {
        return new Semigroupoid(function (f) {
            return function (g) {
                return function (x) {
                    return f(g(x));
                };
            };
        });
    };
    var semigroupUnit = function () {
        return new Semigroup(function (_24) {
            return function (_25) {
                return {};
            };
        });
    };
    var semigroupString = function () {
        return new Semigroup(concatString);
    };
    var semigroupArr = function (__dict_Semigroup_3) {
        return new Semigroup(function (f) {
            return function (g) {
                return function (x) {
                    return $less$greater(__dict_Semigroup_3)(f(x))(g(x));
                };
            };
        });
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_4) {
        return pure(__dict_Monad_4["__superclass_Prelude.Applicative_0"]());
    };
    var numNumber = function () {
        return new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    };
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftM1 = function (__dict_Monad_5) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_5["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_5)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_6) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_6["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_6)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = function () {
        return new Functor($less$less$less(semigroupoidArr()));
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqUnit = function () {
        return new Eq(function (_13) {
            return function (_14) {
                return false;
            };
        }, function (_11) {
            return function (_12) {
                return true;
            };
        });
    };
    var ordUnit = function () {
        return new Ord(eqUnit, function (_18) {
            return function (_19) {
                return EQ.value;
            };
        });
    };
    var eqString = function () {
        return new Eq(refIneq, refEq);
    };
    var ordString = function () {
        return new Ord(eqString, unsafeCompare);
    };
    var eqNumber = function () {
        return new Eq(refIneq, refEq);
    };
    var ordNumber = function () {
        return new Ord(eqNumber, unsafeCompare);
    };
    var eqBoolean = function () {
        return new Eq(refIneq, refEq);
    };
    var ordBoolean = function () {
        return new Ord(eqBoolean, function (_20) {
            return function (_21) {
                if (!_20 && !_21) {
                    return EQ.value;
                };
                if (!_20 && _21) {
                    return LT.value;
                };
                if (_20 && _21) {
                    return EQ.value;
                };
                if (_20 && !_21) {
                    return GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var $$const = function (_5) {
        return function (_6) {
            return _5;
        };
    };
    var $$void = function (__dict_Functor_8) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_8)($$const(unit))(fa);
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_10) {
        return function (a1) {
            return function (a2) {
                var _273 = compare(__dict_Ord_10)(a1)(a2);
                if (_273 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _274 = compare(__dict_Ord_11)(a1)(a2);
                if (_274 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _275 = compare(__dict_Ord_12)(a1)(a2);
                if (_275 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _276 = compare(__dict_Ord_13)(a1)(a2);
                if (_276 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = function () {
        return new Category(semigroupoidArr, function (x) {
            return x;
        });
    };
    var boolLikeBoolean = function () {
        return new BoolLike(boolAnd, boolNot, boolOr);
    };
    var eqArray = function (__dict_Eq_7) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean())($eq$eq(eqArray(__dict_Eq_7))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_7))(xs)(ys);
            };
        });
    };
    var ordArray = function (__dict_Ord_9) {
        return new Ord(function () {
            return eqArray(__dict_Ord_9["__superclass_Prelude.Eq_0"]());
        }, function (_22) {
            return function (_23) {
                if (_22.length === 0 && _23.length === 0) {
                    return EQ.value;
                };
                if (_22.length === 0) {
                    return LT.value;
                };
                if (_23.length === 0) {
                    return GT.value;
                };
                if (_22.length >= 1) {
                    var _283 = _22.slice(1);
                    if (_23.length >= 1) {
                        var _281 = _23.slice(1);
                        var _279 = compare(__dict_Ord_9)(_22[0])(_23[0]);
                        if (_279 instanceof EQ) {
                            return compare(ordArray(__dict_Ord_9))(_283)(_281);
                        };
                        return _279;
                    };
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqOrdering = function () {
        return new Eq(function (x) {
            return function (y) {
                return not(boolLikeBoolean())($eq$eq(eqOrdering())(x)(y));
            };
        }, function (_15) {
            return function (_16) {
                if (_15 instanceof LT && _16 instanceof LT) {
                    return true;
                };
                if (_15 instanceof GT && _16 instanceof GT) {
                    return true;
                };
                if (_15 instanceof EQ && _16 instanceof EQ) {
                    return true;
                };
                return false;
            };
        });
    };
    var bitsNumber = function () {
        return new Bits(numAnd, numXor, numComplement, numShl, numShr, numZshr, numOr);
    };
    var asTypeOf = function (_7) {
        return function (_8) {
            return _7;
        };
    };
    var applyArr = function () {
        return new Apply(function (f) {
            return function (g) {
                return function (x) {
                    return f(x)(g(x));
                };
            };
        }, functorArr);
    };
    var bindArr = function () {
        return new Bind(function (m) {
            return function (f) {
                return function (x) {
                    return f(m(x))(x);
                };
            };
        }, applyArr);
    };
    var applicativeArr = function () {
        return new Applicative(applyArr, $$const);
    };
    var monadArr = function () {
        return new Monad(applicativeArr, bindArr);
    };
    var ap = function (__dict_Monad_14) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_14)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Bits: Bits, 
        Ord: Ord, 
        Eq: Eq, 
        Num: Num, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "||": $bar$bar, 
        "&&": $amp$amp, 
        complement: complement, 
        zshr: zshr, 
        shr: shr, 
        shl: shl, 
        "^": $up, 
        "|": $bar, 
        "&": $amp, 
        ">=": $greater$eq, 
        "<=": $less$eq, 
        ">": $greater, 
        "<": $less, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        negate: negate, 
        "%": $percent, 
        "/": $div, 
        "*": $times, 
        "-": $minus, 
        "+": $plus, 
        ap: ap, 
        liftM1: liftM1, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "void": $$void, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        asTypeOf: asTypeOf, 
        "const": $$const, 
        flip: flip, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showUnit: showUnit, 
        showString: showString, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showArray: showArray, 
        functorArr: functorArr, 
        applyArr: applyArr, 
        applicativeArr: applicativeArr, 
        bindArr: bindArr, 
        monadArr: monadArr, 
        numNumber: numNumber, 
        eqUnit: eqUnit, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        eqBoolean: eqBoolean, 
        eqArray: eqArray, 
        eqOrdering: eqOrdering, 
        showOrdering: showOrdering, 
        ordUnit: ordUnit, 
        ordBoolean: ordBoolean, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        ordArray: ordArray, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupUnit: semigroupUnit, 
        semigroupString: semigroupString, 
        semigroupArr: semigroupArr
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkFn0(fn) {  return function() {    return fn({});  };};
    function mkFn1(fn) {  return function(a) {    return fn(a);  };};
    function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
    function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
    function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
    function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
    function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
    function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
    function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
    function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
    function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
    function runFn0(fn) {  return fn();};
    function runFn1(fn) {  return function(a) {    return fn(a);  };};
    function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
    function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
    function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
    function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
    function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
    function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
    function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
    function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
    function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        runFn10: runFn10, 
        runFn9: runFn9, 
        runFn8: runFn8, 
        runFn7: runFn7, 
        runFn6: runFn6, 
        runFn5: runFn5, 
        runFn4: runFn4, 
        runFn3: runFn3, 
        runFn2: runFn2, 
        runFn1: runFn1, 
        runFn0: runFn0, 
        mkFn10: mkFn10, 
        mkFn9: mkFn9, 
        mkFn8: mkFn8, 
        mkFn7: mkFn7, 
        mkFn6: mkFn6, 
        mkFn5: mkFn5, 
        mkFn4: mkFn4, 
        mkFn3: mkFn3, 
        mkFn2: mkFn2, 
        mkFn1: mkFn1, 
        mkFn0: mkFn0, 
        on: on
    };
})();
var PS = PS || {};
PS.Data_Eq = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Ref = {
        create: function (value) {
            return value;
        }
    };
    var liftRef = function (_26) {
        return function (_27) {
            return function (_28) {
                return _26(_27)(_28);
            };
        };
    };
    var functorRef = function () {
        return new Prelude.Functor(function (_29) {
            return function (_30) {
                return _29(_30);
            };
        });
    };
    var eqRef = function () {
        return new Prelude.Eq(liftRef(Prelude.refIneq), liftRef(Prelude.refEq));
    };
    return {
        Ref: Ref, 
        liftRef: liftRef, 
        eqRef: eqRef, 
        functorRef: functorRef
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    function runPure(f) {  return f();};
    function untilE(f) {  return function() {    while (!f());    return {};  };};
    function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
    function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
    function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
    var applicativeEff = function () {
        return new Prelude.Applicative(applyEff, returnE);
    };
    var applyEff = function () {
        return new Prelude.Apply(Prelude.ap(monadEff()), functorEff);
    };
    var monadEff = function () {
        return new Prelude.Monad(applicativeEff, bindEff);
    };
    var bindEff = function () {
        return new Prelude.Bind(bindE, applyEff);
    };
    var functorEff = function () {
        return new Prelude.Functor(Prelude.liftA1(applicativeEff()));
    };
    return {
        foreachE: foreachE, 
        forE: forE, 
        whileE: whileE, 
        untilE: untilE, 
        runPure: runPure, 
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeInterleaveEff(f) {  return f;};
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function newSTRef(val) {  return function() {    return { value: val };  };};
    function readSTRef(ref) {  return function() {    return ref.value;  };};
    function modifySTRef(ref) {  return function(f) {    return function() {      return ref.value = f(ref.value);    };  };};
    function writeSTRef(ref) {  return function(a) {    return function() {      return ref.value = a;    };  };};
    function newSTArray(len) {  return function(a) {    return function() {      var arr = [];      for (var i = 0; i < len; i++) {        arr[i] = a;      };      return arr;    };  };};
    function peekSTArray(arr) {  return function(i) {    return function() {      return arr[i];    };  };};
    function pokeSTArray(arr) {  return function(i) {    return function(a) {      return function() {        return arr[i] = a;      };    };  };};
    function runST(f) {  return f;};
    function runSTArray(f) {  return f;};
    return {
        runSTArray: runSTArray, 
        runST: runST, 
        pokeSTArray: pokeSTArray, 
        peekSTArray: peekSTArray, 
        newSTArray: newSTArray, 
        writeSTRef: writeSTRef, 
        modifySTRef: modifySTRef, 
        readSTRef: readSTRef, 
        newSTRef: newSTRef
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function trace(s) {  return function() {    console.log(s);    return {};  };};
    var print = function (__dict_Show_15) {
        return function (o) {
            return trace(Prelude.show(__dict_Show_15)(o));
        };
    };
    return {
        print: print, 
        trace: trace
    };
})();
var PS = PS || {};
PS.Control_Monad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var when = function (__dict_Monad_16) {
        return function (_36) {
            return function (_37) {
                if (_36) {
                    return _37;
                };
                if (!_36) {
                    return Prelude["return"](__dict_Monad_16)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unless = function (__dict_Monad_17) {
        return function (_38) {
            return function (_39) {
                if (!_38) {
                    return _39;
                };
                if (_38) {
                    return Prelude["return"](__dict_Monad_17)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var replicateM = function (__dict_Monad_18) {
        return function (_31) {
            return function (_32) {
                if (_31 === 0) {
                    return Prelude["return"](__dict_Monad_18)([  ]);
                };
                return Prelude[">>="](__dict_Monad_18["__superclass_Prelude.Bind_1"]())(_32)(function (_4) {
                    return Prelude[">>="](__dict_Monad_18["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_18)(_31 - 1)(_32))(function (_3) {
                        return Prelude["return"](__dict_Monad_18)(Prelude[":"](_4)(_3));
                    });
                });
            };
        };
    };
    var foldM = function (__dict_Monad_19) {
        return function (_33) {
            return function (_34) {
                return function (_35) {
                    if (_35.length === 0) {
                        return Prelude["return"](__dict_Monad_19)(_34);
                    };
                    if (_35.length >= 1) {
                        var _307 = _35.slice(1);
                        return Prelude[">>="](__dict_Monad_19["__superclass_Prelude.Bind_1"]())(_33(_34)(_35[0]))(function (a$prime) {
                            return foldM(__dict_Monad_19)(_33)(a$prime)(_307);
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        unless: unless, 
        when: when, 
        foldM: foldM, 
        replicateM: replicateM
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Lazy(defer) {
        this.defer = defer;
    };
    function Lazy1(defer1) {
        this.defer1 = defer1;
    };
    function Lazy2(defer2) {
        this.defer2 = defer2;
    };
    var defer2 = function (dict) {
        return dict.defer2;
    };
    var fix2 = function (__dict_Lazy2_20) {
        return function (f) {
            return defer2(__dict_Lazy2_20)(function (_) {
                return f(fix2(__dict_Lazy2_20)(f));
            });
        };
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_21) {
        return function (f) {
            return defer1(__dict_Lazy1_21)(function (_) {
                return f(fix1(__dict_Lazy1_21)(f));
            });
        };
    };
    var defer = function (dict) {
        return dict.defer;
    };
    var fix = function (__dict_Lazy_22) {
        return function (f) {
            return defer(__dict_Lazy_22)(function (_) {
                return f(fix(__dict_Lazy_22)(f));
            });
        };
    };
    return {
        Lazy2: Lazy2, 
        Lazy1: Lazy1, 
        Lazy: Lazy, 
        fix2: fix2, 
        fix1: fix1, 
        fix: fix, 
        defer2: defer2, 
        defer1: defer1, 
        defer: defer
    };
})();
var PS = PS || {};
PS.Control_Extend = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Extend($less$less$eq, __superclass_Prelude$dotFunctor_0) {
        this["<<="] = $less$less$eq;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$less$eq = function (dict) {
        return dict["<<="];
    };
    var $eq$less$eq = function (__dict_Extend_23) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return f($less$less$eq(__dict_Extend_23)(g)(w));
                };
            };
        };
    };
    var $eq$greater$eq = function (__dict_Extend_24) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return g($less$less$eq(__dict_Extend_24)(f)(w));
                };
            };
        };
    };
    var $eq$greater$greater = function (__dict_Extend_25) {
        return function (w) {
            return function (f) {
                return $less$less$eq(__dict_Extend_25)(f)(w);
            };
        };
    };
    var extendArr = function (__dict_Semigroup_26) {
        return new Extend(function (f) {
            return function (g) {
                return function (w) {
                    return f(function (w$prime) {
                        return g(Prelude["<>"](__dict_Semigroup_26)(w)(w$prime));
                    });
                };
            };
        }, Prelude.functorArr);
    };
    var duplicate = function (__dict_Extend_27) {
        return function (w) {
            return $less$less$eq(__dict_Extend_27)(Prelude.id(Prelude.categoryArr()))(w);
        };
    };
    return {
        Extend: Extend, 
        duplicate: duplicate, 
        "=<=": $eq$less$eq, 
        "=>=": $eq$greater$eq, 
        "=>>": $eq$greater$greater, 
        "<<=": $less$less$eq, 
        extendArr: extendArr
    };
})();
var PS = PS || {};
PS.Control_Comonad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Comonad(__superclass_Control$dotExtend$dotExtend_0, extract) {
        this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
        this.extract = extract;
    };
    var extract = function (dict) {
        return dict.extract;
    };
    return {
        Comonad: Comonad, 
        extract: extract
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $greater$eq$greater = function (__dict_Bind_28) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return Prelude[">>="](__dict_Bind_28)(f(a))(g);
                };
            };
        };
    };
    var $eq$less$less = function (__dict_Bind_29) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_29)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_30) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_30)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_31) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_31)(m)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var ifM = function (__dict_Bind_32) {
        return function (cond) {
            return function (t) {
                return function (f) {
                    return Prelude[">>="](__dict_Bind_32)(cond)(function (cond$prime) {
                        return cond$prime ? t : f;
                    });
                };
            };
        };
    };
    return {
        ifM: ifM, 
        join: join, 
        "<=<": $less$eq$less, 
        ">=>": $greater$eq$greater, 
        "=<<": $eq$less$less
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_33) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_33)(Prelude["<$>"](__dict_Apply_33["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_34) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_34)(Prelude["<$>"](__dict_Apply_34["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr())))(a))(b);
            };
        };
    };
    var lift5 = function (__dict_Apply_35) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return function (e) {
                                return Prelude["<*>"](__dict_Apply_35)(Prelude["<*>"](__dict_Apply_35)(Prelude["<*>"](__dict_Apply_35)(Prelude["<*>"](__dict_Apply_35)(Prelude["<$>"](__dict_Apply_35["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                            };
                        };
                    };
                };
            };
        };
    };
    var lift4 = function (__dict_Apply_36) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return Prelude["<*>"](__dict_Apply_36)(Prelude["<*>"](__dict_Apply_36)(Prelude["<*>"](__dict_Apply_36)(Prelude["<$>"](__dict_Apply_36["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                        };
                    };
                };
            };
        };
    };
    var lift3 = function (__dict_Apply_37) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return Prelude["<*>"](__dict_Apply_37)(Prelude["<*>"](__dict_Apply_37)(Prelude["<$>"](__dict_Apply_37["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                    };
                };
            };
        };
    };
    var lift2 = function (__dict_Apply_38) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](__dict_Apply_38)(Prelude["<$>"](__dict_Apply_38["__superclass_Prelude.Functor_0"]())(f)(a))(b);
                };
            };
        };
    };
    var forever = function (__dict_Apply_39) {
        return function (a) {
            return $times$greater(__dict_Apply_39)(a)(forever(__dict_Apply_39)(a));
        };
    };
    return {
        forever: forever, 
        lift5: lift5, 
        lift4: lift4, 
        lift3: lift3, 
        lift2: lift2, 
        "*>": $times$greater, 
        "<*": $less$times
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Alt($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Lazy = PS.Control_Lazy;
    function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var many = function (__dict_Alternative_40) {
        return function (__dict_Lazy1_41) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_40["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_40)(__dict_Lazy1_41)(v))(Prelude.pure(__dict_Alternative_40["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    var some = function (__dict_Alternative_42) {
        return function (__dict_Lazy1_43) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_42["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_42["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_43)(function (_) {
                    return many(__dict_Alternative_42)(__dict_Lazy1_43)(v);
                }));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    function MonadPlus(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_44) {
        return function (_40) {
            if (_40) {
                return Prelude["return"](__dict_MonadPlus_44["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_40) {
                return Control_Plus.empty((__dict_MonadPlus_44["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    var showEither = function (__dict_Show_45) {
        return function (__dict_Show_46) {
            return new Prelude.Show(function (_50) {
                if (_50 instanceof Left) {
                    return "Left (" + (Prelude.show(__dict_Show_45)(_50.value0) + ")");
                };
                if (_50 instanceof Right) {
                    return "Right (" + (Prelude.show(__dict_Show_46)(_50.value0) + ")");
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var functorEither = function () {
        return new Prelude.Functor(function (_44) {
            return function (_45) {
                if (_45 instanceof Left) {
                    return new Left(_45.value0);
                };
                if (_45 instanceof Right) {
                    return new Right(_44(_45.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqEither = function (__dict_Eq_49) {
        return function (__dict_Eq_50) {
            return new Prelude.Eq(function (a) {
                return function (b) {
                    return !Prelude["=="](eqEither(__dict_Eq_49)(__dict_Eq_50))(a)(b);
                };
            }, function (_51) {
                return function (_52) {
                    if (_51 instanceof Left && _52 instanceof Left) {
                        return Prelude["=="](__dict_Eq_49)(_51.value0)(_52.value0);
                    };
                    if (_51 instanceof Right && _52 instanceof Right) {
                        return Prelude["=="](__dict_Eq_50)(_51.value0)(_52.value0);
                    };
                    return false;
                };
            });
        };
    };
    var ordEither = function (__dict_Ord_47) {
        return function (__dict_Ord_48) {
            return new Prelude.Ord(function () {
                return eqEither(__dict_Ord_47["__superclass_Prelude.Eq_0"]())(__dict_Ord_48["__superclass_Prelude.Eq_0"]());
            }, function (_53) {
                return function (_54) {
                    if (_53 instanceof Left && _54 instanceof Left) {
                        return Prelude.compare(__dict_Ord_47)(_53.value0)(_54.value0);
                    };
                    if (_53 instanceof Right && _54 instanceof Right) {
                        return Prelude.compare(__dict_Ord_48)(_53.value0)(_54.value0);
                    };
                    if (_53 instanceof Left) {
                        return Prelude.LT.value;
                    };
                    if (_54 instanceof Left) {
                        return Prelude.GT.value;
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    var either = function (_41) {
        return function (_42) {
            return function (_43) {
                if (_43 instanceof Left) {
                    return _41(_43.value0);
                };
                if (_43 instanceof Right) {
                    return _42(_43.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var isRight = either(Prelude["const"](false))(Prelude["const"](true));
    var applyEither = function () {
        return new Prelude.Apply(function (_46) {
            return function (_47) {
                if (_46 instanceof Left) {
                    return new Left(_46.value0);
                };
                if (_46 instanceof Right) {
                    return Prelude["<$>"](functorEither())(_46.value0)(_47);
                };
                throw new Error("Failed pattern match");
            };
        }, functorEither);
    };
    var bindEither = function () {
        return new Prelude.Bind(either(function (e) {
            return function (_) {
                return new Left(e);
            };
        })(function (a) {
            return function (f) {
                return f(a);
            };
        }), applyEither);
    };
    var applicativeEither = function () {
        return new Prelude.Applicative(applyEither, Right.create);
    };
    var monadEither = function () {
        return new Prelude.Monad(applicativeEither, bindEither);
    };
    var altEither = function () {
        return new Control_Alt.Alt(function (_48) {
            return function (_49) {
                if (_48 instanceof Left) {
                    return _49;
                };
                return _48;
            };
        }, functorEither);
    };
    return {
        Left: Left, 
        Right: Right, 
        isRight: isRight, 
        isLeft: isLeft, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        altEither: altEither, 
        bindEither: bindEither, 
        monadEither: monadEither, 
        showEither: showEither, 
        eqEither: eqEither, 
        ordEither: ordEither
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function Nothing() {

    };
    Nothing.value = new Nothing();
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    var showMaybe = function (__dict_Show_51) {
        return new Prelude.Show(function (_70) {
            if (_70 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_51)(_70.value0) + ")");
            };
            if (_70 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupMaybe = function (__dict_Semigroup_52) {
        return new Prelude.Semigroup(function (_68) {
            return function (_69) {
                if (_68 instanceof Nothing) {
                    return _69;
                };
                if (_69 instanceof Nothing) {
                    return _68;
                };
                if (_68 instanceof Just && _69 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_52)(_68.value0)(_69.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_55) {
        return function (_56) {
            return function (_57) {
                if (_57 instanceof Nothing) {
                    return _55;
                };
                if (_57 instanceof Just) {
                    return _56(_57.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isNothing = maybe(true)(Prelude["const"](false));
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = function () {
        return new Prelude.Functor(function (_58) {
            return function (_59) {
                if (_59 instanceof Just) {
                    return new Just(_58(_59.value0));
                };
                return Nothing.value;
            };
        });
    };
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr()));
    };
    var extendMaybe = function () {
        return new Control_Extend.Extend(function (_66) {
            return function (_67) {
                if (_67 instanceof Nothing) {
                    return Nothing.value;
                };
                return Just.create(_66(_67));
            };
        }, functorMaybe);
    };
    var eqMaybe = function (__dict_Eq_54) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_54))(a)(b);
            };
        }, function (_71) {
            return function (_72) {
                if (_71 instanceof Nothing && _72 instanceof Nothing) {
                    return true;
                };
                if (_71 instanceof Just && _72 instanceof Just) {
                    return Prelude["=="](__dict_Eq_54)(_71.value0)(_72.value0);
                };
                return false;
            };
        });
    };
    var ordMaybe = function (__dict_Ord_53) {
        return new Prelude.Ord(function () {
            return eqMaybe(__dict_Ord_53["__superclass_Prelude.Eq_0"]());
        }, function (_73) {
            return function (_74) {
                if (_73 instanceof Just && _74 instanceof Just) {
                    return Prelude.compare(__dict_Ord_53)(_73.value0)(_74.value0);
                };
                if (_73 instanceof Nothing && _74 instanceof Nothing) {
                    return Prelude.EQ.value;
                };
                if (_73 instanceof Nothing) {
                    return Prelude.LT.value;
                };
                if (_74 instanceof Nothing) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var applyMaybe = function () {
        return new Prelude.Apply(function (_60) {
            return function (_61) {
                if (_60 instanceof Just) {
                    return Prelude["<$>"](functorMaybe())(_60.value0)(_61);
                };
                if (_60 instanceof Nothing) {
                    return Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        }, functorMaybe);
    };
    var bindMaybe = function () {
        return new Prelude.Bind(function (_64) {
            return function (_65) {
                if (_64 instanceof Just) {
                    return _65(_64.value0);
                };
                if (_64 instanceof Nothing) {
                    return Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        }, applyMaybe);
    };
    var applicativeMaybe = function () {
        return new Prelude.Applicative(applyMaybe, Just.create);
    };
    var monadMaybe = function () {
        return new Prelude.Monad(applicativeMaybe, bindMaybe);
    };
    var altMaybe = function () {
        return new Control_Alt.Alt(function (_62) {
            return function (_63) {
                if (_62 instanceof Nothing) {
                    return _63;
                };
                return _62;
            };
        }, functorMaybe);
    };
    var plusMaybe = function () {
        return new Control_Plus.Plus(altMaybe, Nothing.value);
    };
    var alternativeMaybe = function () {
        return new Control_Alternative.Alternative(plusMaybe, applicativeMaybe);
    };
    var monadPlusMaybe = function () {
        return new Control_MonadPlus.MonadPlus(alternativeMaybe, monadMaybe);
    };
    return {
        Nothing: Nothing, 
        Just: Just, 
        isNothing: isNothing, 
        isJust: isJust, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        applicativeMaybe: applicativeMaybe, 
        altMaybe: altMaybe, 
        plusMaybe: plusMaybe, 
        alternativeMaybe: alternativeMaybe, 
        bindMaybe: bindMaybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        extendMaybe: extendMaybe, 
        semigroupMaybe: semigroupMaybe, 
        showMaybe: showMaybe, 
        eqMaybe: eqMaybe, 
        ordMaybe: ordMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            return n < 0 || (n >= length(xs) || isInt(n)) ? Data_Maybe.Nothing.value : new Data_Maybe.Just(xs[n]);
        };
    };
    var take = function (n) {
        return slice(0)(n);
    };
    var tail = function (_77) {
        if (_77.length >= 1) {
            var _375 = _77.slice(1);
            return new Data_Maybe.Just(_375);
        };
        return Data_Maybe.Nothing.value;
    };
    var span = (function () {
        var go = function (__copy__93) {
            return function (__copy__94) {
                return function (__copy__95) {
                    var _93 = __copy__93;
                    var _94 = __copy__94;
                    var _95 = __copy__95;
                    tco: while (true) {
                        if (_95.length >= 1) {
                            var _380 = _95.slice(1);
                            if (_94(_95[0])) {
                                var __tco__93 = Prelude[":"](_95[0])(_93);
                                var __tco__94 = _94;
                                _93 = __tco__93;
                                _94 = __tco__94;
                                _95 = _380;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_93), 
                            rest: _95
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _381 = comp(x)(y);
                    if (_381 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_381 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_381 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_55) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_55))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = function () {
        return new Prelude.Semigroup(append);
    };
    var $$null = function (_79) {
        if (_79.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_86) {
        return function (_87) {
            if (_87.length === 0) {
                return [  ];
            };
            if (_87.length >= 1) {
                var _386 = _87.slice(1);
                return Prelude[":"](_87[0])(nubBy(_86)(filter(function (y) {
                    return !_86(_87[0])(y);
                })(_386)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_56) {
        return nubBy(Prelude["=="](__dict_Eq_56));
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var last = function (__copy__76) {
        var _76 = __copy__76;
        tco: while (true) {
            if (_76.length >= 1) {
                var _389 = _76.slice(1);
                if (_389.length === 0) {
                    return new Data_Maybe.Just(_76[0]);
                };
            };
            if (_76.length >= 1) {
                var _391 = _76.slice(1);
                _76 = _391;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var intersectBy = function (_83) {
        return function (_84) {
            return function (_85) {
                if (_84.length === 0) {
                    return [  ];
                };
                if (_85.length === 0) {
                    return [  ];
                };
                var el = function (x) {
                    return findIndex(_83(x))(_85) >= 0;
                };
                return filter(el)(_84);
            };
        };
    };
    var intersect = function (__dict_Eq_57) {
        return intersectBy(Prelude["=="](__dict_Eq_57));
    };
    var init = function (_78) {
        if (_78.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_78) - 1)(_78));
    };
    var head = function (_75) {
        if (_75.length >= 1) {
            var _398 = _75.slice(1);
            return new Data_Maybe.Just(_75[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__90) {
            return function (__copy__91) {
                return function (__copy__92) {
                    var _90 = __copy__90;
                    var _91 = __copy__91;
                    var _92 = __copy__92;
                    tco: while (true) {
                        if (_92.length === 0) {
                            return reverse(_90);
                        };
                        if (_92.length >= 1) {
                            var _403 = _92.slice(1);
                            var sp = span(_91(_92[0]))(_403);
                            var __tco__90 = Prelude[":"](Prelude[":"](_92[0])(sp.init))(_90);
                            var __tco__91 = _91;
                            _90 = __tco__90;
                            _91 = __tco__91;
                            _92 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    var group = function (__dict_Eq_58) {
        return function (xs) {
            return groupBy(Prelude["=="](__dict_Eq_58))(xs);
        };
    };
    var group$prime = function (__dict_Ord_59) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(group(__dict_Ord_59["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_59));
    };
    var functorArray = function () {
        return new Prelude.Functor(map);
    };
    var elemLastIndex = function (__dict_Eq_60) {
        return function (x) {
            return findLastIndex(Prelude["=="](__dict_Eq_60)(x));
        };
    };
    var elemIndex = function (__dict_Eq_61) {
        return function (x) {
            return findIndex(Prelude["=="](__dict_Eq_61)(x));
        };
    };
    var deleteBy = function (_80) {
        return function (_81) {
            return function (_82) {
                if (_82.length === 0) {
                    return [  ];
                };
                var _407 = findIndex(_80(_81))(_82);
                if (_407 < 0) {
                    return _82;
                };
                return deleteAt(_407)(1)(_82);
            };
        };
    };
    var $$delete = function (__dict_Eq_62) {
        return deleteBy(Prelude["=="](__dict_Eq_62));
    };
    var $bslash$bslash = function (__dict_Eq_63) {
        return function (xs) {
            return function (ys) {
                var go = function (__copy__88) {
                    return function (__copy__89) {
                        var _88 = __copy__88;
                        var _89 = __copy__89;
                        tco: while (true) {
                            if (_89.length === 0) {
                                return _88;
                            };
                            if (_88.length === 0) {
                                return [  ];
                            };
                            if (_89.length >= 1) {
                                var _411 = _89.slice(1);
                                var __tco__88 = $$delete(__dict_Eq_63)(_89[0])(_88);
                                _88 = __tco__88;
                                _89 = _411;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return go(xs)(ys);
            };
        };
    };
    var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
    var applicativeArray = function () {
        return new Prelude.Applicative(applyArray, singleton);
    };
    var applyArray = function () {
        return new Prelude.Apply(Prelude.ap(monadArray()), functorArray);
    };
    var monadArray = function () {
        return new Prelude.Monad(applicativeArray, bindArray);
    };
    var bindArray = function () {
        return new Prelude.Bind(Prelude.flip(concatMap), applyArray);
    };
    var altArray = function () {
        return new Control_Alt.Alt(append, functorArray);
    };
    var plusArray = function () {
        return new Control_Plus.Plus(altArray, [  ]);
    };
    var alternativeArray = function () {
        return new Control_Alternative.Alternative(plusArray, applicativeArray);
    };
    var monadPlusArray = function () {
        return new Control_MonadPlus.MonadPlus(alternativeArray, monadArray);
    };
    return {
        span: span, 
        groupBy: groupBy, 
        "group'": group$prime, 
        group: group, 
        sortBy: sortBy, 
        sort: sort, 
        nubBy: nubBy, 
        nub: nub, 
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        concatMap: concatMap, 
        intersect: intersect, 
        intersectBy: intersectBy, 
        "\\\\": $bslash$bslash, 
        "delete": $$delete, 
        deleteBy: deleteBy, 
        updateAt: updateAt, 
        deleteAt: deleteAt, 
        insertAt: insertAt, 
        take: take, 
        drop: drop, 
        reverse: reverse, 
        concat: concat, 
        append: append, 
        elemLastIndex: elemLastIndex, 
        elemIndex: elemIndex, 
        findLastIndex: findLastIndex, 
        findIndex: findIndex, 
        length: length, 
        catMaybes: catMaybes, 
        mapMaybe: mapMaybe, 
        map: map, 
        "null": $$null, 
        init: init, 
        tail: tail, 
        last: last, 
        head: head, 
        singleton: singleton, 
        snoc: snoc, 
        "..": $dot$dot, 
        "!!": $bang$bang, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray, 
        altArray: altArray, 
        plusArray: plusArray, 
        alternativeArray: alternativeArray, 
        monadPlusArray: monadPlusArray
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Function = PS.Data_Function;
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    function parseJSONImpl(left, right, str) {  try {    return right(JSON.parse(str));  } catch (e) {    return left(e.toString());  } };
    function toForeign(value) {  return value;};
    function unsafeFromForeign(value) {  return value;};
    function typeOf(value) {  return typeof value;};
    function tagOf(value) {  return Object.prototype.toString.call(value).slice(8, -1);};
    function isNull(value) {  return value === null;};
    function isUndefined(value) {  return value === undefined;};
    function isArray(value) {  return Array.isArray(value);};
    var unsafeReadPrim = function (_96) {
        return function (_97) {
            if (tagOf(_97) === _96) {
                return Prelude.pure(Data_Either.applicativeEither())(unsafeFromForeign(_97));
            };
            return new Data_Either.Left(new TypeMismatch(_96, tagOf(_97)));
        };
    };
    var showForeignError = function () {
        return new Prelude.Show(function (_99) {
            if (_99 instanceof TypeMismatch) {
                return "Type mismatch: expected " + (_99.value0 + (", found " + _99.value1));
            };
            if (_99 instanceof ErrorAtIndex) {
                return "Error at array index " + (Prelude.show(Prelude.showNumber())(_99.value0) + (": " + Prelude.show(showForeignError())(_99.value1)));
            };
            if (_99 instanceof ErrorAtProperty) {
                return "Error at property " + (Prelude.show(Prelude.showString())(_99.value0) + (": " + Prelude.show(showForeignError())(_99.value1)));
            };
            if (_99 instanceof JSONError) {
                return "JSON error: " + _99.value0;
            };
            throw new Error("Failed pattern match");
        });
    };
    var readString = unsafeReadPrim("String");
    var readNumber = unsafeReadPrim("Number");
    var readBoolean = unsafeReadPrim("Boolean");
    var readArray = function (_98) {
        if (isArray(_98)) {
            return Prelude.pure(Data_Either.applicativeEither())(unsafeFromForeign(_98));
        };
        return new Data_Either.Left(new TypeMismatch("array", tagOf(_98)));
    };
    var parseJSON = function (json) {
        return parseJSONImpl(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Either.Left.create)(JSONError.create), Data_Either.Right.create, json);
    };
    return {
        TypeMismatch: TypeMismatch, 
        ErrorAtIndex: ErrorAtIndex, 
        ErrorAtProperty: ErrorAtProperty, 
        JSONError: JSONError, 
        readArray: readArray, 
        readNumber: readNumber, 
        readBoolean: readBoolean, 
        readString: readString, 
        isArray: isArray, 
        isUndefined: isUndefined, 
        isNull: isNull, 
        tagOf: tagOf, 
        typeOf: typeOf, 
        unsafeFromForeign: unsafeFromForeign, 
        toForeign: toForeign, 
        parseJSON: parseJSON, 
        showForeignError: showForeignError
    };
})();
var PS = PS || {};
PS.Control_Monad_JQuery = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function ready(func) {   return function () {     jQuery(document).ready(func);   }; };
    function select(selector) {   return function () {     return jQuery(selector);   }; };
    function create(html) {   return function () {     return jQuery(html);   }; };
    function setAttr(attr) {   return function(val) {     return function(ob) {       return function () {         return ob.attr(attr, val);      };     };   }; };
    function attr(attrs) {   return function(ob) {     return function () {       return ob.attr(attrs);    };   }; };
    function css(props) {   return function(ob) {     return function () {       return ob.css(props);     };   }; };
    function addClass(cls) {   return function(ob) {     return function () {       return ob.addClass(cls);     };   }; };
    function removeClass(cls) {   return function(ob) {     return function () {       return ob.removeClass(cls);     };   }; };
    function setProp(p) {   return function(val) {     return function(ob) {       return function () {         return ob.prop(p, val);      };     };   }; };
    function getProp(p) {   return function(ob) {     return function () {       return ob.prop(p);    };   }; };
    function append(ob1) {   return function(ob) {     return function () {       return ob.append(ob1);     };   }; };
    function appendAtIndex(i) {   return function(ob1) {     return function(ob) {       return function () {         var children = ob.children();        if (children.length > 0) {          if (i <= 0) {             ob.prepend(ob1);          } else if (i >= children.length) {             ob.append(ob1);          } else {             ob1.insertBefore(jQuery(children[i]));          }          return ob;        } else {          return ob.append(ob1);         }      };     };   }; };
    function remove(ob) {   return function () {     return ob.remove();   }; };
    function clear(ob) {   return function () {     return ob.empty();   }; };
    function before(ob) {   return function(ob1) {     return function () {       return ob1.before(ob);     };   }; };
    function appendText(s) {   return function(ob) {     return function () {       return ob.append(s);     };   }; };
    function body() {   return jQuery(document.body); };
    function getText(ob) {   return function() {     return ob.text();   }; };
    function setText(text) {   return function(ob) {     return function() {       return ob.text(text);     };  };};
    function getValue(ob) {   return function() {     return ob.val();   }; };
    function setValue(val) {   return function(ob) {     return function() {       return ob.val(val);     };   }; };
    function on(evt) {   return function(act) {     return function(ob) {       return function() {         return ob.on(evt, function(e) {           act(e)(jQuery(this))();         });       };     };   }; };
    function on$prime(evt) {   return function(sel) {     return function(act) {       return function(ob) {         return function() {           return ob.on(evt, function(e) {             act(e)(jQuery(this))();           });         };       };     };   }; };
    function preventDefault(e) {   return function() {     e.preventDefault();  } };
    function stopPropagation(e) {   return function() {     e.stopPropagation();  } };
    function stopImmediatePropagation(e) {   return function() {     e.stopImmediatePropagation();  } };
    return {
        stopImmediatePropagation: stopImmediatePropagation, 
        stopPropagation: stopPropagation, 
        preventDefault: preventDefault, 
        "on'": on$prime, 
        on: on, 
        setValue: setValue, 
        getValue: getValue, 
        setText: setText, 
        getText: getText, 
        body: body, 
        appendText: appendText, 
        before: before, 
        clear: clear, 
        remove: remove, 
        appendAtIndex: appendAtIndex, 
        append: append, 
        getProp: getProp, 
        setProp: setProp, 
        removeClass: removeClass, 
        addClass: addClass, 
        css: css, 
        attr: attr, 
        setAttr: setAttr, 
        create: create, 
        select: select, 
        ready: ready
    };
})();
var PS = PS || {};
PS.Data_Foreign_Index = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Either = PS.Data_Either;
    var Data_Foreign = PS.Data_Foreign;
    function Index($bang, errorAt, hasOwnProperty, hasProperty) {
        this["!"] = $bang;
        this.errorAt = errorAt;
        this.hasOwnProperty = hasOwnProperty;
        this.hasProperty = hasProperty;
    };
    function unsafeReadPropImpl(f, s, key, value) {   if (value && typeof value === 'object') {    return s(value[key]);  } else {    return f;  }};
    function unsafeHasOwnProperty(prop, value) {  return value.hasOwnProperty(prop);};
    function unsafeHasProperty(prop, value) {  return prop in value;};
    var $bang = function (dict) {
        return dict["!"];
    };
    var unsafeReadProp = function (k) {
        return function (value) {
            return unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither()), k, value);
        };
    };
    var prop = unsafeReadProp;
    var index = unsafeReadProp;
    var hasPropertyImpl = function (_102) {
        return function (_103) {
            if (Data_Foreign.isNull(_103)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_103)) {
                return false;
            };
            if (Data_Foreign.typeOf(_103) === "object" || Data_Foreign.typeOf(_103) === "function") {
                return unsafeHasProperty(_102, _103);
            };
            return false;
        };
    };
    var hasProperty = function (dict) {
        return dict.hasProperty;
    };
    var hasOwnPropertyImpl = function (_100) {
        return function (_101) {
            if (Data_Foreign.isNull(_101)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_101)) {
                return false;
            };
            if (Data_Foreign.typeOf(_101) === "object" || Data_Foreign.typeOf(_101) === "function") {
                return unsafeHasOwnProperty(_100, _101);
            };
            return false;
        };
    };
    var indexNumber = function () {
        return new Index(Prelude.flip(index), Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl);
    };
    var indexString = function () {
        return new Index(Prelude.flip(prop), Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl);
    };
    var hasOwnProperty = function (dict) {
        return dict.hasOwnProperty;
    };
    var errorAt = function (dict) {
        return dict.errorAt;
    };
    return {
        Index: Index, 
        errorAt: errorAt, 
        hasOwnProperty: hasOwnProperty, 
        hasProperty: hasProperty, 
        "!": $bang, 
        index: index, 
        prop: prop, 
        indexString: indexString, 
        indexNumber: indexNumber
    };
})();
var PS = PS || {};
PS.Data_Foreign_Keys = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    function unsafeKeys(value) {   return Object.keys(value);};
    var keys = function (_104) {
        if (Data_Foreign.isNull(_104)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "null"));
        };
        if (Data_Foreign.isUndefined(_104)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "undefined"));
        };
        if (Data_Foreign.typeOf(_104) === "object") {
            return Data_Either.Right.create(unsafeKeys(_104));
        };
        return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(_104)));
    };
    return {
        keys: keys
    };
})();
var PS = PS || {};
PS.Data_Foreign_Null = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Null = {
        create: function (value) {
            return value;
        }
    };
    var runNull = function (_105) {
        return _105;
    };
    var readNull = function (_106) {
        return function (_107) {
            if (Data_Foreign.isNull(_107)) {
                return Prelude.pure(Data_Either.applicativeEither())(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither())(Prelude["<<<"](Prelude.semigroupoidArr())(Null.create)(Data_Maybe.Just.create))(_106(_107));
        };
    };
    return {
        Null: Null, 
        readNull: readNull, 
        runNull: runNull
    };
})();
var PS = PS || {};
PS.Data_Foreign_NullOrUndefined = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var NullOrUndefined = {
        create: function (value) {
            return value;
        }
    };
    var runNullOrUndefined = function (_108) {
        return _108;
    };
    var readNullOrUndefined = function (_109) {
        return function (_110) {
            if (Data_Foreign.isNull(_110) || Data_Foreign.isUndefined(_110)) {
                return Prelude.pure(Data_Either.applicativeEither())(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither())(Prelude["<<<"](Prelude.semigroupoidArr())(NullOrUndefined.create)(Data_Maybe.Just.create))(_109(_110));
        };
    };
    return {
        NullOrUndefined: NullOrUndefined, 
        readNullOrUndefined: readNullOrUndefined, 
        runNullOrUndefined: runNullOrUndefined
    };
})();
var PS = PS || {};
PS.Data_Foreign_Undefined = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Undefined = {
        create: function (value) {
            return value;
        }
    };
    var runUndefined = function (_111) {
        return _111;
    };
    var readUndefined = function (_112) {
        return function (_113) {
            if (Data_Foreign.isUndefined(_113)) {
                return Prelude.pure(Data_Either.applicativeEither())(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither())(Prelude["<<<"](Prelude.semigroupoidArr())(Undefined.create)(Data_Maybe.Just.create))(_112(_113));
        };
    };
    return {
        Undefined: Undefined, 
        readUndefined: readUndefined, 
        runUndefined: runUndefined
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_114) {
        if (_114 instanceof Data_Maybe.Just) {
            return _114.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var tail = function (_116) {
        if (_116.length >= 1) {
            var _441 = _116.slice(1);
            return _441;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr())(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    var head = function (_115) {
        if (_115.length >= 1) {
            var _444 = _115.slice(1);
            return _115[0];
        };
        throw new Error("Failed pattern match");
    };
    return {
        init: init, 
        last: last, 
        tail: tail, 
        head: head
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidUnit = function () {
        return new Monoid(Prelude.semigroupUnit, Prelude.unit);
    };
    var monoidString = function () {
        return new Monoid(Prelude.semigroupString, "");
    };
    var monoidMaybe = function (__dict_Semigroup_64) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_64);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = function () {
        return new Monoid(Data_Array.semigroupArray, [  ]);
    };
    var mempty = function (dict) {
        return dict.mempty;
    };
    var monoidArr = function (__dict_Monoid_65) {
        return new Monoid(function () {
            return Prelude.semigroupArr(__dict_Monoid_65["__superclass_Prelude.Semigroup_0"]());
        }, Prelude["const"](mempty(__dict_Monoid_65)));
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidString: monoidString, 
        monoidArray: monoidArray, 
        monoidUnit: monoidUnit, 
        monoidArr: monoidArr, 
        monoidMaybe: monoidMaybe
    };
})();
var PS = PS || {};
PS.Data_Monoid_All = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var All = {
        create: function (value) {
            return value;
        }
    };
    var showAll = function () {
        return new Prelude.Show(function (_122) {
            return "All (" + (Prelude.show(Prelude.showBoolean())(_122) + ")");
        });
    };
    var semigroupAll = function () {
        return new Prelude.Semigroup(function (_123) {
            return function (_124) {
                return _123 && _124;
            };
        });
    };
    var runAll = function (_117) {
        return _117;
    };
    var monoidAll = function () {
        return new Data_Monoid.Monoid(semigroupAll, true);
    };
    var eqAll = function () {
        return new Prelude.Eq(function (_120) {
            return function (_121) {
                return _120 !== _121;
            };
        }, function (_118) {
            return function (_119) {
                return _118 === _119;
            };
        });
    };
    return {
        All: All, 
        runAll: runAll, 
        eqAll: eqAll, 
        showAll: showAll, 
        semigroupAll: semigroupAll, 
        monoidAll: monoidAll
    };
})();
var PS = PS || {};
PS.Data_Monoid_Any = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Any = {
        create: function (value) {
            return value;
        }
    };
    var showAny = function () {
        return new Prelude.Show(function (_130) {
            return "Any (" + (Prelude.show(Prelude.showBoolean())(_130) + ")");
        });
    };
    var semigroupAny = function () {
        return new Prelude.Semigroup(function (_131) {
            return function (_132) {
                return _131 || _132;
            };
        });
    };
    var runAny = function (_125) {
        return _125;
    };
    var monoidAny = function () {
        return new Data_Monoid.Monoid(semigroupAny, false);
    };
    var eqAny = function () {
        return new Prelude.Eq(function (_128) {
            return function (_129) {
                return _128 !== _129;
            };
        }, function (_126) {
            return function (_127) {
                return _126 === _127;
            };
        });
    };
    return {
        Any: Any, 
        runAny: runAny, 
        eqAny: eqAny, 
        showAny: showAny, 
        semigroupAny: semigroupAny, 
        monoidAny: monoidAny
    };
})();
var PS = PS || {};
PS.Data_Monoid_Dual = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Dual = {
        create: function (value) {
            return value;
        }
    };
    var showDual = function (__dict_Show_66) {
        return new Prelude.Show(function (_140) {
            return "Dual (" + (Prelude.show(__dict_Show_66)(_140) + ")");
        });
    };
    var semigroupDual = function (__dict_Semigroup_67) {
        return new Prelude.Semigroup(function (_141) {
            return function (_142) {
                return Prelude["<>"](__dict_Semigroup_67)(_142)(_141);
            };
        });
    };
    var runDual = function (_133) {
        return _133;
    };
    var monoidDual = function (__dict_Monoid_69) {
        return new Data_Monoid.Monoid(function () {
            return semigroupDual(__dict_Monoid_69["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_69));
    };
    var eqDual = function (__dict_Eq_70) {
        return new Prelude.Eq(function (_136) {
            return function (_137) {
                return Prelude["/="](__dict_Eq_70)(_136)(_137);
            };
        }, function (_134) {
            return function (_135) {
                return Prelude["=="](__dict_Eq_70)(_134)(_135);
            };
        });
    };
    var ordDual = function (__dict_Ord_68) {
        return new Prelude.Ord(function () {
            return eqDual(__dict_Ord_68["__superclass_Prelude.Eq_0"]());
        }, function (_138) {
            return function (_139) {
                return Prelude.compare(__dict_Ord_68)(_138)(_139);
            };
        });
    };
    return {
        Dual: Dual, 
        runDual: runDual, 
        eqDual: eqDual, 
        ordDual: ordDual, 
        showDual: showDual, 
        semigroupDual: semigroupDual, 
        monoidDual: monoidDual
    };
})();
var PS = PS || {};
PS.Data_Monoid_Endo = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Endo = {
        create: function (value) {
            return value;
        }
    };
    var semigroupEndo = function () {
        return new Prelude.Semigroup(function (_144) {
            return function (_145) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(_144)(_145);
            };
        });
    };
    var runEndo = function (_143) {
        return _143;
    };
    var monoidEndo = function () {
        return new Data_Monoid.Monoid(semigroupEndo, Prelude.id(Prelude.categoryArr()));
    };
    return {
        Endo: Endo, 
        runEndo: runEndo, 
        semigroupEndo: semigroupEndo, 
        monoidEndo: monoidEndo
    };
})();
var PS = PS || {};
PS.Data_Monoid_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Product = {
        create: function (value) {
            return value;
        }
    };
    var showProduct = function () {
        return new Prelude.Show(function (_153) {
            return "Product (" + (Prelude.show(Prelude.showNumber())(_153) + ")");
        });
    };
    var semigroupProduct = function () {
        return new Prelude.Semigroup(function (_154) {
            return function (_155) {
                return _154 * _155;
            };
        });
    };
    var runProduct = function (_146) {
        return _146;
    };
    var monoidProduct = function () {
        return new Data_Monoid.Monoid(semigroupProduct, 1);
    };
    var eqProduct = function () {
        return new Prelude.Eq(function (_149) {
            return function (_150) {
                return _149 !== _150;
            };
        }, function (_147) {
            return function (_148) {
                return _147 === _148;
            };
        });
    };
    var ordProduct = function () {
        return new Prelude.Ord(eqProduct, function (_151) {
            return function (_152) {
                return Prelude.compare(Prelude.ordNumber())(_151)(_152);
            };
        });
    };
    return {
        Product: Product, 
        runProduct: runProduct, 
        eqProduct: eqProduct, 
        ordProduct: ordProduct, 
        showProduct: showProduct, 
        semigroupProduct: semigroupProduct, 
        monoidProduct: monoidProduct
    };
})();
var PS = PS || {};
PS.Data_Monoid_Sum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Sum = {
        create: function (value) {
            return value;
        }
    };
    var showSum = function () {
        return new Prelude.Show(function (_163) {
            return "Sum (" + (Prelude.show(Prelude.showNumber())(_163) + ")");
        });
    };
    var semigroupSum = function () {
        return new Prelude.Semigroup(function (_164) {
            return function (_165) {
                return _164 + _165;
            };
        });
    };
    var runSum = function (_156) {
        return _156;
    };
    var monoidSum = function () {
        return new Data_Monoid.Monoid(semigroupSum, 0);
    };
    var eqSum = function () {
        return new Prelude.Eq(function (_159) {
            return function (_160) {
                return _159 !== _160;
            };
        }, function (_157) {
            return function (_158) {
                return _157 === _158;
            };
        });
    };
    var ordSum = function () {
        return new Prelude.Ord(eqSum, function (_161) {
            return function (_162) {
                return Prelude.compare(Prelude.ordNumber())(_161)(_162);
            };
        });
    };
    return {
        Sum: Sum, 
        runSum: runSum, 
        eqSum: eqSum, 
        ordSum: ordSum, 
        showSum: showSum, 
        semigroupSum: semigroupSum, 
        monoidSum: monoidSum
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    var zip = Data_Array.zipWith(Tuple.create);
    var unzip = function (_170) {
        if (_170.length >= 1) {
            var _501 = _170.slice(1);
            var _495 = unzip(_501);
            return new Tuple(Prelude[":"]((_170[0]).value0)(_495.value0), Prelude[":"]((_170[0]).value1)(_495.value1));
        };
        if (_170.length === 0) {
            return new Tuple([  ], [  ]);
        };
        throw new Error("Failed pattern match");
    };
    var uncurry = function (_168) {
        return function (_169) {
            return _168(_169.value0)(_169.value1);
        };
    };
    var swap = function (_171) {
        return new Tuple(_171.value1, _171.value0);
    };
    var snd = function (_167) {
        return _167.value1;
    };
    var showTuple = function (__dict_Show_71) {
        return function (__dict_Show_72) {
            return new Prelude.Show(function (_172) {
                return "Tuple (" + (Prelude.show(__dict_Show_71)(_172.value0) + (") (" + (Prelude.show(__dict_Show_72)(_172.value1) + ")")));
            });
        };
    };
    var semigroupoidTuple = function () {
        return new Prelude.Semigroupoid(function (_177) {
            return function (_178) {
                return new Tuple(_178.value0, _177.value1);
            };
        });
    };
    var semigroupTuple = function (__dict_Semigroup_73) {
        return function (__dict_Semigroup_74) {
            return new Prelude.Semigroup(function (_179) {
                return function (_180) {
                    return new Tuple(Prelude["<>"](__dict_Semigroup_73)(_179.value0)(_180.value0), Prelude["<>"](__dict_Semigroup_74)(_179.value1)(_180.value1));
                };
            });
        };
    };
    var monoidTuple = function (__dict_Monoid_77) {
        return function (__dict_Monoid_78) {
            return new Data_Monoid.Monoid(function () {
                return semigroupTuple(__dict_Monoid_77["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_78["__superclass_Prelude.Semigroup_0"]());
            }, new Tuple(Data_Monoid.mempty(__dict_Monoid_77), Data_Monoid.mempty(__dict_Monoid_78)));
        };
    };
    var functorTuple = function () {
        return new Prelude.Functor(function (_181) {
            return function (_182) {
                return new Tuple(_182.value0, _181(_182.value1));
            };
        });
    };
    var fst = function (_166) {
        return _166.value0;
    };
    var lazyLazy1Tuple = function (__dict_Lazy1_80) {
        return function (__dict_Lazy1_81) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer1(__dict_Lazy1_80)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer1(__dict_Lazy1_81)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyLazy2Tuple = function (__dict_Lazy2_82) {
        return function (__dict_Lazy2_83) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer2(__dict_Lazy2_82)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer2(__dict_Lazy2_83)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyTuple = function (__dict_Lazy_84) {
        return function (__dict_Lazy_85) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer(__dict_Lazy_84)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer(__dict_Lazy_85)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var extendTuple = function () {
        return new Control_Extend.Extend(function (_187) {
            return function (_188) {
                return new Tuple(_188.value0, _187(_188));
            };
        }, functorTuple);
    };
    var eqTuple = function (__dict_Eq_86) {
        return function (__dict_Eq_87) {
            return new Prelude.Eq(function (t1) {
                return function (t2) {
                    return !Prelude["=="](eqTuple(__dict_Eq_86)(__dict_Eq_87))(t1)(t2);
                };
            }, function (_173) {
                return function (_174) {
                    return Prelude["=="](__dict_Eq_86)(_173.value0)(_174.value0) && Prelude["=="](__dict_Eq_87)(_173.value1)(_174.value1);
                };
            });
        };
    };
    var ordTuple = function (__dict_Ord_75) {
        return function (__dict_Ord_76) {
            return new Prelude.Ord(function () {
                return eqTuple(__dict_Ord_75["__superclass_Prelude.Eq_0"]())(__dict_Ord_76["__superclass_Prelude.Eq_0"]());
            }, function (_175) {
                return function (_176) {
                    var _546 = Prelude.compare(__dict_Ord_75)(_175.value0)(_176.value0);
                    if (_546 instanceof Prelude.EQ) {
                        return Prelude.compare(__dict_Ord_76)(_175.value1)(_176.value1);
                    };
                    return _546;
                };
            });
        };
    };
    var curry = function (f) {
        return function (a) {
            return function (b) {
                return f(new Tuple(a, b));
            };
        };
    };
    var comonadTuple = function () {
        return new Control_Comonad.Comonad(extendTuple, snd);
    };
    var applyTuple = function (__dict_Semigroup_89) {
        return new Prelude.Apply(function (_183) {
            return function (_184) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_89)(_183.value0)(_184.value0), _183.value1(_184.value1));
            };
        }, functorTuple);
    };
    var bindTuple = function (__dict_Semigroup_88) {
        return new Prelude.Bind(function (_185) {
            return function (_186) {
                var _559 = _186(_185.value1);
                return new Tuple(Prelude["<>"](__dict_Semigroup_88)(_185.value0)(_559.value0), _559.value1);
            };
        }, function () {
            return applyTuple(__dict_Semigroup_88);
        });
    };
    var applicativeTuple = function (__dict_Monoid_90) {
        return new Prelude.Applicative(function () {
            return applyTuple(__dict_Monoid_90["__superclass_Prelude.Semigroup_0"]());
        }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_90)));
    };
    var monadTuple = function (__dict_Monoid_79) {
        return new Prelude.Monad(function () {
            return applicativeTuple(__dict_Monoid_79);
        }, function () {
            return bindTuple(__dict_Monoid_79["__superclass_Prelude.Semigroup_0"]());
        });
    };
    return {
        Tuple: Tuple, 
        swap: swap, 
        unzip: unzip, 
        zip: zip, 
        uncurry: uncurry, 
        curry: curry, 
        snd: snd, 
        fst: fst, 
        showTuple: showTuple, 
        eqTuple: eqTuple, 
        ordTuple: ordTuple, 
        semigroupoidTuple: semigroupoidTuple, 
        semigroupTuple: semigroupTuple, 
        monoidTuple: monoidTuple, 
        functorTuple: functorTuple, 
        applyTuple: applyTuple, 
        applicativeTuple: applicativeTuple, 
        bindTuple: bindTuple, 
        monadTuple: monadTuple, 
        extendTuple: extendTuple, 
        comonadTuple: comonadTuple, 
        lazyTuple: lazyTuple, 
        lazyLazy1Tuple: lazyLazy1Tuple, 
        lazyLazy2Tuple: lazyLazy2Tuple
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = {
        create: function (value) {
            return value;
        }
    };
    var showFirst = function (__dict_Show_91) {
        return new Prelude.Show(function (_196) {
            return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_91))(_196) + ")");
        });
    };
    var semigroupFirst = function () {
        return new Prelude.Semigroup(function (_197) {
            return function (_198) {
                if (_197 instanceof Data_Maybe.Just) {
                    return _197;
                };
                return _198;
            };
        });
    };
    var runFirst = function (_189) {
        return _189;
    };
    var monoidFirst = function () {
        return new Data_Monoid.Monoid(semigroupFirst, Data_Maybe.Nothing.value);
    };
    var eqFirst = function (__dict_Eq_93) {
        return new Prelude.Eq(function (_192) {
            return function (_193) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_93))(_192)(_193);
            };
        }, function (_190) {
            return function (_191) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_93))(_190)(_191);
            };
        });
    };
    var ordFirst = function (__dict_Ord_92) {
        return new Prelude.Ord(function () {
            return eqFirst(__dict_Ord_92["__superclass_Prelude.Eq_0"]());
        }, function (_194) {
            return function (_195) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_92))(_194)(_195);
            };
        });
    };
    return {
        First: First, 
        runFirst: runFirst, 
        eqFirst: eqFirst, 
        ordFirst: ordFirst, 
        showFirst: showFirst, 
        semigroupFirst: semigroupFirst, 
        monoidFirst: monoidFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Monoid_First = PS.Data_Monoid_First;
    function Foldable(foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    function foldrArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = xs.length - 1; i >= 0; --i) {        acc = f(xs[i])(acc);      }      return acc;    }  }};
    function foldlArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = 0, len = xs.length; i < len; ++i) {        acc = f(acc)(xs[i]);      }      return acc;    }  }};
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_94) {
        return function (__dict_Foldable_95) {
            return function (f) {
                return foldr(__dict_Foldable_95)(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Apply["*>"](__dict_Applicative_94["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_94)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_96) {
        return function (__dict_Foldable_97) {
            return Prelude.flip(traverse_(__dict_Applicative_96)(__dict_Foldable_97));
        };
    };
    var sequence_ = function (__dict_Applicative_98) {
        return function (__dict_Foldable_99) {
            return traverse_(__dict_Applicative_98)(__dict_Foldable_99)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var mconcat = function (__dict_Foldable_100) {
        return function (__dict_Monoid_101) {
            return foldl(__dict_Foldable_100)(Prelude["<>"](__dict_Monoid_101["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_101));
        };
    };
    var or = function (__dict_Foldable_102) {
        return foldl(__dict_Foldable_102)(Prelude["||"](Prelude.boolLikeBoolean()))(false);
    };
    var product = function (__dict_Foldable_103) {
        return foldl(__dict_Foldable_103)(Prelude["*"](Prelude.numNumber()))(1);
    };
    var sum = function (__dict_Foldable_104) {
        return foldl(__dict_Foldable_104)(Prelude["+"](Prelude.numNumber()))(0);
    };
    var foldableTuple = function () {
        return new Foldable(function (__dict_Monoid_105) {
            return function (_230) {
                return function (_231) {
                    return _230(_231.value1);
                };
            };
        }, function (_227) {
            return function (_228) {
                return function (_229) {
                    return _227(_228)(_229.value1);
                };
            };
        }, function (_224) {
            return function (_225) {
                return function (_226) {
                    return _224(_226.value1)(_225);
                };
            };
        });
    };
    var foldableRef = function () {
        return new Foldable(function (__dict_Monoid_106) {
            return function (_222) {
                return function (_223) {
                    return _222(_223);
                };
            };
        }, function (_219) {
            return function (_220) {
                return function (_221) {
                    return _219(_220)(_221);
                };
            };
        }, function (_216) {
            return function (_217) {
                return function (_218) {
                    return _216(_218)(_217);
                };
            };
        });
    };
    var foldableMaybe = function () {
        return new Foldable(function (__dict_Monoid_107) {
            return function (_214) {
                return function (_215) {
                    if (_215 instanceof Data_Maybe.Nothing) {
                        return Data_Monoid.mempty(__dict_Monoid_107);
                    };
                    if (_215 instanceof Data_Maybe.Just) {
                        return _214(_215.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_211) {
            return function (_212) {
                return function (_213) {
                    if (_213 instanceof Data_Maybe.Nothing) {
                        return _212;
                    };
                    if (_213 instanceof Data_Maybe.Just) {
                        return _211(_212)(_213.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_208) {
            return function (_209) {
                return function (_210) {
                    if (_210 instanceof Data_Maybe.Nothing) {
                        return _209;
                    };
                    if (_210 instanceof Data_Maybe.Just) {
                        return _208(_210.value0)(_209);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var foldableEither = function () {
        return new Foldable(function (__dict_Monoid_108) {
            return function (_206) {
                return function (_207) {
                    if (_207 instanceof Data_Either.Left) {
                        return Data_Monoid.mempty(__dict_Monoid_108);
                    };
                    if (_207 instanceof Data_Either.Right) {
                        return _206(_207.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_203) {
            return function (_204) {
                return function (_205) {
                    if (_205 instanceof Data_Either.Left) {
                        return _204;
                    };
                    if (_205 instanceof Data_Either.Right) {
                        return _203(_204)(_205.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_200) {
            return function (_201) {
                return function (_202) {
                    if (_202 instanceof Data_Either.Left) {
                        return _201;
                    };
                    if (_202 instanceof Data_Either.Right) {
                        return _200(_202.value0)(_201);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var foldableArray = function () {
        return new Foldable(function (__dict_Monoid_109) {
            return function (f) {
                return function (xs) {
                    return foldr(foldableArray())(function (x) {
                        return function (acc) {
                            return Prelude["<>"](__dict_Monoid_109["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                        };
                    })(Data_Monoid.mempty(__dict_Monoid_109))(xs);
                };
            };
        }, function (f) {
            return function (z) {
                return function (xs) {
                    return foldlArray(f)(z)(xs);
                };
            };
        }, function (f) {
            return function (z) {
                return function (xs) {
                    return foldrArray(f)(z)(xs);
                };
            };
        });
    };
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_110) {
        return function (__dict_Foldable_111) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_111)(Data_Monoid_First.monoidFirst())(function (_199) {
                        return Prelude["=="](__dict_Eq_110)(a)(_199.value0) ? new Data_Maybe.Just(_199.value1) : Data_Maybe.Nothing.value;
                    })(f));
                };
            };
        };
    };
    var fold = function (__dict_Foldable_112) {
        return function (__dict_Monoid_113) {
            return foldMap(__dict_Foldable_112)(__dict_Monoid_113)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var find = function (__dict_Foldable_114) {
        return function (p) {
            return function (f) {
                var _625 = foldMap(__dict_Foldable_114)(Data_Monoid.monoidArray())(function (x) {
                    return p(x) ? [ x ] : [  ];
                })(f);
                if (_625.length >= 1) {
                    var _627 = _625.slice(1);
                    return new Data_Maybe.Just(_625[0]);
                };
                if (_625.length === 0) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var any = function (__dict_Foldable_115) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(or(foldableArray()))(foldMap(__dict_Foldable_115)(Data_Monoid.monoidArray())(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_116) {
        return function (__dict_Foldable_117) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(any(__dict_Foldable_117))(Prelude["=="](__dict_Eq_116));
        };
    };
    var notElem = function (__dict_Eq_118) {
        return function (__dict_Foldable_119) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.not(Prelude.boolLikeBoolean()))(elem(__dict_Eq_118)(__dict_Foldable_119)(x));
            };
        };
    };
    var and = function (__dict_Foldable_120) {
        return foldl(__dict_Foldable_120)(Prelude["&&"](Prelude.boolLikeBoolean()))(true);
    };
    var all = function (__dict_Foldable_121) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(and(foldableArray()))(foldMap(__dict_Foldable_121)(Data_Monoid.monoidArray())(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        lookup: lookup, 
        find: find, 
        notElem: notElem, 
        elem: elem, 
        product: product, 
        sum: sum, 
        all: all, 
        any: any, 
        or: or, 
        and: and, 
        mconcat: mconcat, 
        sequence_: sequence_, 
        for_: for_, 
        traverse_: traverse_, 
        fold: fold, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe, 
        foldableRef: foldableRef, 
        foldableTuple: foldableTuple
    };
})();
var PS = PS || {};
PS.Data_Monoid_Last = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Last = {
        create: function (value) {
            return value;
        }
    };
    var showLast = function (__dict_Show_122) {
        return new Prelude.Show(function (_239) {
            return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_122))(_239) + ")");
        });
    };
    var semigroupLast = function () {
        return new Prelude.Semigroup(function (_240) {
            return function (_241) {
                if (_241 instanceof Data_Maybe.Just) {
                    return _241;
                };
                if (_241 instanceof Data_Maybe.Nothing) {
                    return _240;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var runLast = function (_232) {
        return _232;
    };
    var monoidLast = function () {
        return new Data_Monoid.Monoid(semigroupLast, Data_Maybe.Nothing.value);
    };
    var eqLast = function (__dict_Eq_124) {
        return new Prelude.Eq(function (_235) {
            return function (_236) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_124))(_235)(_236);
            };
        }, function (_233) {
            return function (_234) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_124))(_233)(_234);
            };
        });
    };
    var ordLast = function (__dict_Ord_123) {
        return new Prelude.Ord(function () {
            return eqLast(__dict_Ord_123["__superclass_Prelude.Eq_0"]());
        }, function (_237) {
            return function (_238) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_123))(_237)(_238);
            };
        });
    };
    return {
        Last: Last, 
        runLast: runLast, 
        eqLast: eqLast, 
        ordLast: ordLast, 
        showLast: showLast, 
        semigroupLast: semigroupLast, 
        monoidLast: monoidLast
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Array = PS.Data_Array;
    function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableTuple = function () {
        return new Traversable(Data_Foldable.foldableTuple, Data_Tuple.functorTuple, function (__dict_Applicative_126) {
            return function (_256) {
                return Prelude["<$>"]((__dict_Applicative_126["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_256.value0))(_256.value1);
            };
        }, function (__dict_Applicative_125) {
            return function (_254) {
                return function (_255) {
                    return Prelude["<$>"]((__dict_Applicative_125["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_255.value0))(_254(_255.value1));
                };
            };
        });
    };
    var traversableRef = function () {
        return new Traversable(Data_Foldable.foldableRef, Data_Eq.functorRef, function (__dict_Applicative_128) {
            return function (_250) {
                return Prelude["<$>"]((__dict_Applicative_128["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_250);
            };
        }, function (__dict_Applicative_127) {
            return function (_248) {
                return function (_249) {
                    return Prelude["<$>"]((__dict_Applicative_127["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_248(_249));
                };
            };
        });
    };
    var traversableMaybe = function () {
        return new Traversable(Data_Foldable.foldableMaybe, Data_Maybe.functorMaybe, function (__dict_Applicative_130) {
            return function (_253) {
                if (_253 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_130)(Data_Maybe.Nothing.value);
                };
                if (_253 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_130["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_253.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, function (__dict_Applicative_129) {
            return function (_251) {
                return function (_252) {
                    if (_252 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(__dict_Applicative_129)(Data_Maybe.Nothing.value);
                    };
                    if (_252 instanceof Data_Maybe.Just) {
                        return Prelude["<$>"]((__dict_Applicative_129["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_251(_252.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var traversableEither = function () {
        return new Traversable(Data_Foldable.foldableEither, Data_Either.functorEither, function (__dict_Applicative_132) {
            return function (_247) {
                if (_247 instanceof Data_Either.Left) {
                    return Prelude.pure(__dict_Applicative_132)(new Data_Either.Left(_247.value0));
                };
                if (_247 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_132["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_247.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, function (__dict_Applicative_131) {
            return function (_245) {
                return function (_246) {
                    if (_246 instanceof Data_Either.Left) {
                        return Prelude.pure(__dict_Applicative_131)(new Data_Either.Left(_246.value0));
                    };
                    if (_246 instanceof Data_Either.Right) {
                        return Prelude["<$>"]((__dict_Applicative_131["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_245(_246.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = function () {
        return new Traversable(Data_Foldable.foldableArray, Data_Array.functorArray, function (__dict_Applicative_134) {
            return function (_244) {
                if (_244.length === 0) {
                    return Prelude.pure(__dict_Applicative_134)([  ]);
                };
                if (_244.length >= 1) {
                    var _663 = _244.slice(1);
                    return Prelude["<*>"](__dict_Applicative_134["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_134["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_244[0]))(sequence(traversableArray())(__dict_Applicative_134)(_663));
                };
                throw new Error("Failed pattern match");
            };
        }, function (__dict_Applicative_133) {
            return function (_242) {
                return function (_243) {
                    if (_243.length === 0) {
                        return Prelude.pure(__dict_Applicative_133)([  ]);
                    };
                    if (_243.length >= 1) {
                        var _667 = _243.slice(1);
                        return Prelude["<*>"](__dict_Applicative_133["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_133["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_242(_243[0])))(traverse(traversableArray())(__dict_Applicative_133)(_242)(_667));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var zipWithA = function (__dict_Applicative_135) {
        return function (f) {
            return function (xs) {
                return function (ys) {
                    return sequence(traversableArray())(__dict_Applicative_135)(Data_Array.zipWith(f)(xs)(ys));
                };
            };
        };
    };
    var $$for = function (__dict_Applicative_136) {
        return function (__dict_Traversable_137) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_137)(__dict_Applicative_136)(f)(x);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        zipWithA: zipWithA, 
        "for": $$for, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray, 
        traversableEither: traversableEither, 
        traversableRef: traversableRef, 
        traversableMaybe: traversableMaybe, 
        traversableTuple: traversableTuple
    };
})();
var PS = PS || {};
PS.Data_Foreign_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    var Data_Foreign_Undefined = PS.Data_Foreign_Undefined;
    var Data_Foreign_NullOrUndefined = PS.Data_Foreign_NullOrUndefined;
    var Data_Foreign_Null = PS.Data_Foreign_Null;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    function IsForeign(read) {
        this.read = read;
    };
    var stringIsForeign = function () {
        return new IsForeign(Data_Foreign.readString);
    };
    var read = function (dict) {
        return dict.read;
    };
    var readJSON = function (__dict_IsForeign_138) {
        return function (json) {
            return Prelude[">>="](Data_Either.bindEither())(Data_Foreign.parseJSON(json))(read(__dict_IsForeign_138));
        };
    };
    var readWith = function (__dict_IsForeign_139) {
        return function (f) {
            return function (value) {
                return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_139)(value));
            };
        };
    };
    var readProp = function (__dict_IsForeign_140) {
        return function (__dict_Index_141) {
            return function (prop) {
                return function (value) {
                    return Prelude[">>="](Data_Either.bindEither())(Data_Foreign_Index["!"](__dict_Index_141)(value)(prop))(readWith(__dict_IsForeign_140)(Data_Foreign_Index.errorAt(__dict_Index_141)(prop)));
                };
            };
        };
    };
    var undefinedIsForeign = function (__dict_IsForeign_142) {
        return new IsForeign(Data_Foreign_Undefined.readUndefined(read(__dict_IsForeign_142)));
    };
    var numberIsForeign = function () {
        return new IsForeign(Data_Foreign.readNumber);
    };
    var nullOrUndefinedIsForeign = function (__dict_IsForeign_143) {
        return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(__dict_IsForeign_143)));
    };
    var nullIsForeign = function (__dict_IsForeign_144) {
        return new IsForeign(Data_Foreign_Null.readNull(read(__dict_IsForeign_144)));
    };
    var booleanIsForeign = function () {
        return new IsForeign(Data_Foreign.readBoolean);
    };
    var arrayIsForeign = function (__dict_IsForeign_145) {
        return new IsForeign(function (value) {
            var readElement = function (i) {
                return function (value_1) {
                    return readWith(__dict_IsForeign_145)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
                };
            };
            var readElements = function (arr) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray())(Data_Either.applicativeEither())(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
            };
            return Prelude[">>="](Data_Either.bindEither())(Data_Foreign.readArray(value))(readElements);
        });
    };
    return {
        IsForeign: IsForeign, 
        readProp: readProp, 
        readWith: readWith, 
        readJSON: readJSON, 
        read: read, 
        stringIsForeign: stringIsForeign, 
        booleanIsForeign: booleanIsForeign, 
        numberIsForeign: numberIsForeign, 
        arrayIsForeign: arrayIsForeign, 
        nullIsForeign: nullIsForeign, 
        undefinedIsForeign: undefinedIsForeign, 
        nullOrUndefinedIsForeign: nullOrUndefinedIsForeign
    };
})();
