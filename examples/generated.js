// Generated by psc version 0.5.6.2
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = {
        create: function (value) {
            return value;
        }
    };
    function LT() {

    };
    LT.value = new LT();
    function GT() {

    };
    GT.value = new GT();
    function EQ() {

    };
    EQ.value = new EQ();
    function Semigroupoid($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    function Show(show) {
        this.show = show;
    };
    function Functor($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    function Applicative(__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    function Num($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    function Eq($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    function Ord(__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    function Bits($amp, $up, complement, shl, shr, zshr, $bar) {
        this["&"] = $amp;
        this["^"] = $up;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
        this["|"] = $bar;
    };
    function BoolLike($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    function Semigroup($less$greater) {
        this["<>"] = $less$greater;
    };
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
    function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
    function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
    function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
    function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
    function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
    function numComplement(n) {  return ~n;};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $bar = function (dict) {
        return dict["|"];
    };
    var $up = function (dict) {
        return dict["^"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_1) {
        return $less$greater(__dict_Semigroup_1);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $amp = function (dict) {
        return dict["&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var zshr = function (dict) {
        return dict.zshr;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var shr = function (dict) {
        return dict.shr;
    };
    var showUnit = function () {
        return new Show(function (_67) {
            return "Unit {}";
        });
    };
    var showString = function () {
        return new Show(showStringImpl);
    };
    var showOrdering = function () {
        return new Show(function (_75) {
            if (_75 instanceof LT) {
                return "LT";
            };
            if (_75 instanceof GT) {
                return "GT";
            };
            if (_75 instanceof EQ) {
                return "EQ";
            };
            throw new Error("Failed pattern match");
        });
    };
    var showNumber = function () {
        return new Show(showNumberImpl);
    };
    var showBoolean = function () {
        return new Show(function (_68) {
            if (_68) {
                return "true";
            };
            if (!_68) {
                return "false";
            };
            throw new Error("Failed pattern match");
        });
    };
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_2) {
        return new Show(showArrayImpl(show(__dict_Show_2)));
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semigroupoidArr = function () {
        return new Semigroupoid(function (f) {
            return function (g) {
                return function (x) {
                    return f(g(x));
                };
            };
        });
    };
    var semigroupUnit = function () {
        return new Semigroup(function (_82) {
            return function (_83) {
                return {};
            };
        });
    };
    var semigroupString = function () {
        return new Semigroup(concatString);
    };
    var semigroupArr = function (__dict_Semigroup_3) {
        return new Semigroup(function (f) {
            return function (g) {
                return function (x) {
                    return $less$greater(__dict_Semigroup_3)(f(x))(g(x));
                };
            };
        });
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_4) {
        return pure(__dict_Monad_4["__superclass_Prelude.Applicative_0"]());
    };
    var numNumber = function () {
        return new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    };
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftM1 = function (__dict_Monad_5) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_5["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_5)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_6) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_6["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_6)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = function () {
        return new Functor($less$less$less(semigroupoidArr()));
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqUnit = function () {
        return new Eq(function (_71) {
            return function (_72) {
                return false;
            };
        }, function (_69) {
            return function (_70) {
                return true;
            };
        });
    };
    var ordUnit = function () {
        return new Ord(eqUnit, function (_76) {
            return function (_77) {
                return EQ.value;
            };
        });
    };
    var eqString = function () {
        return new Eq(refIneq, refEq);
    };
    var ordString = function () {
        return new Ord(eqString, unsafeCompare);
    };
    var eqNumber = function () {
        return new Eq(refIneq, refEq);
    };
    var ordNumber = function () {
        return new Ord(eqNumber, unsafeCompare);
    };
    var eqBoolean = function () {
        return new Eq(refIneq, refEq);
    };
    var ordBoolean = function () {
        return new Ord(eqBoolean, function (_78) {
            return function (_79) {
                if (!_78 && !_79) {
                    return EQ.value;
                };
                if (!_78 && _79) {
                    return LT.value;
                };
                if (_78 && _79) {
                    return EQ.value;
                };
                if (_78 && !_79) {
                    return GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var $$const = function (_63) {
        return function (_64) {
            return _63;
        };
    };
    var $$void = function (__dict_Functor_8) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_8)($$const(unit))(fa);
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_10) {
        return function (a1) {
            return function (a2) {
                var _623 = compare(__dict_Ord_10)(a1)(a2);
                if (_623 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _624 = compare(__dict_Ord_11)(a1)(a2);
                if (_624 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _625 = compare(__dict_Ord_12)(a1)(a2);
                if (_625 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _626 = compare(__dict_Ord_13)(a1)(a2);
                if (_626 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = function () {
        return new Category(semigroupoidArr, function (x) {
            return x;
        });
    };
    var boolLikeBoolean = function () {
        return new BoolLike(boolAnd, boolNot, boolOr);
    };
    var eqArray = function (__dict_Eq_7) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean())($eq$eq(eqArray(__dict_Eq_7))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_7))(xs)(ys);
            };
        });
    };
    var ordArray = function (__dict_Ord_9) {
        return new Ord(function () {
            return eqArray(__dict_Ord_9["__superclass_Prelude.Eq_0"]());
        }, function (_80) {
            return function (_81) {
                if (_80.length === 0 && _81.length === 0) {
                    return EQ.value;
                };
                if (_80.length === 0) {
                    return LT.value;
                };
                if (_81.length === 0) {
                    return GT.value;
                };
                if (_80.length >= 1) {
                    var _633 = _80.slice(1);
                    if (_81.length >= 1) {
                        var _631 = _81.slice(1);
                        var _629 = compare(__dict_Ord_9)(_80[0])(_81[0]);
                        if (_629 instanceof EQ) {
                            return compare(ordArray(__dict_Ord_9))(_633)(_631);
                        };
                        return _629;
                    };
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqOrdering = function () {
        return new Eq(function (x) {
            return function (y) {
                return not(boolLikeBoolean())($eq$eq(eqOrdering())(x)(y));
            };
        }, function (_73) {
            return function (_74) {
                if (_73 instanceof LT && _74 instanceof LT) {
                    return true;
                };
                if (_73 instanceof GT && _74 instanceof GT) {
                    return true;
                };
                if (_73 instanceof EQ && _74 instanceof EQ) {
                    return true;
                };
                return false;
            };
        });
    };
    var bitsNumber = function () {
        return new Bits(numAnd, numXor, numComplement, numShl, numShr, numZshr, numOr);
    };
    var asTypeOf = function (_65) {
        return function (_66) {
            return _65;
        };
    };
    var applyArr = function () {
        return new Apply(function (f) {
            return function (g) {
                return function (x) {
                    return f(x)(g(x));
                };
            };
        }, functorArr);
    };
    var bindArr = function () {
        return new Bind(function (m) {
            return function (f) {
                return function (x) {
                    return f(m(x))(x);
                };
            };
        }, applyArr);
    };
    var applicativeArr = function () {
        return new Applicative(applyArr, $$const);
    };
    var monadArr = function () {
        return new Monad(applicativeArr, bindArr);
    };
    var ap = function (__dict_Monad_14) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_14)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Bits: Bits, 
        Ord: Ord, 
        Eq: Eq, 
        Num: Num, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "||": $bar$bar, 
        "&&": $amp$amp, 
        complement: complement, 
        zshr: zshr, 
        shr: shr, 
        shl: shl, 
        "^": $up, 
        "|": $bar, 
        "&": $amp, 
        ">=": $greater$eq, 
        "<=": $less$eq, 
        ">": $greater, 
        "<": $less, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        negate: negate, 
        "%": $percent, 
        "/": $div, 
        "*": $times, 
        "-": $minus, 
        "+": $plus, 
        ap: ap, 
        liftM1: liftM1, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "void": $$void, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        asTypeOf: asTypeOf, 
        "const": $$const, 
        flip: flip, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showUnit: showUnit, 
        showString: showString, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showArray: showArray, 
        functorArr: functorArr, 
        applyArr: applyArr, 
        applicativeArr: applicativeArr, 
        bindArr: bindArr, 
        monadArr: monadArr, 
        numNumber: numNumber, 
        eqUnit: eqUnit, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        eqBoolean: eqBoolean, 
        eqArray: eqArray, 
        eqOrdering: eqOrdering, 
        showOrdering: showOrdering, 
        ordUnit: ordUnit, 
        ordBoolean: ordBoolean, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        ordArray: ordArray, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupUnit: semigroupUnit, 
        semigroupString: semigroupString, 
        semigroupArr: semigroupArr
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var abs = Math.abs;;
    var acos = Math.acos;;
    var asin = Math.asin;;
    var atan = Math.atan;;
    function atan2(y){  return function (x) {    return Math.atan2(y, x);  };};
    var ceil = Math.ceil;;
    var cos = Math.cos;;
    var exp = Math.exp;;
    var floor = Math.floor;;
    var log = Math.log;;
    function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
    function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
    function pow(n){  return function(p) {    return Math.pow(n, p);  }};
    var round = Math.round;;
    var sin = Math.sin;;
    var sqrt = Math.sqrt;;
    var tan = Math.tan;;
    var e       = Math.E;;
    var ln2     = Math.LN2;;
    var ln10    = Math.LN10;;
    var log2e   = Math.LOG2E;;
    var log10e  = Math.LOG10E;;
    var pi      = Math.PI;;
    var sqrt1_2 = Math.SQRT1_2;;
    var sqrt2   = Math.SQRT2;;
    return {
        sqrt2: sqrt2, 
        sqrt1_2: sqrt1_2, 
        pi: pi, 
        log10e: log10e, 
        log2e: log2e, 
        ln10: ln10, 
        ln2: ln2, 
        e: e, 
        tan: tan, 
        sqrt: sqrt, 
        sin: sin, 
        round: round, 
        pow: pow, 
        min: min, 
        max: max, 
        log: log, 
        floor: floor, 
        exp: exp, 
        cos: cos, 
        ceil: ceil, 
        atan2: atan2, 
        atan: atan, 
        asin: asin, 
        acos: acos, 
        abs: abs
    };
})();
var PS = PS || {};
PS.Data_Profunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Profunctor(dimap) {
        this.dimap = dimap;
    };
    var profunctorArr = function () {
        return new Profunctor(function (a2b) {
            return function (c2d) {
                return function (b2c) {
                    return Prelude[">>>"](Prelude.semigroupoidArr())(a2b)(Prelude[">>>"](Prelude.semigroupoidArr())(b2c)(c2d));
                };
            };
        });
    };
    var dimap = function (dict) {
        return dict.dimap;
    };
    var lmap = function (__dict_Profunctor_15) {
        return function (a2b) {
            return dimap(__dict_Profunctor_15)(a2b)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var rmap = function (__dict_Profunctor_16) {
        return function (b2c) {
            return dimap(__dict_Profunctor_16)(Prelude.id(Prelude.categoryArr()))(b2c);
        };
    };
    return {
        Profunctor: Profunctor, 
        rmap: rmap, 
        lmap: lmap, 
        dimap: dimap, 
        profunctorArr: profunctorArr
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkFn0(fn) {  return function() {    return fn({});  };};
    function mkFn1(fn) {  return function(a) {    return fn(a);  };};
    function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
    function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
    function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
    function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
    function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
    function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
    function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
    function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
    function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
    function runFn0(fn) {  return fn();};
    function runFn1(fn) {  return function(a) {    return fn(a);  };};
    function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
    function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
    function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
    function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
    function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
    function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
    function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
    function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
    function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        runFn10: runFn10, 
        runFn9: runFn9, 
        runFn8: runFn8, 
        runFn7: runFn7, 
        runFn6: runFn6, 
        runFn5: runFn5, 
        runFn4: runFn4, 
        runFn3: runFn3, 
        runFn2: runFn2, 
        runFn1: runFn1, 
        runFn0: runFn0, 
        mkFn10: mkFn10, 
        mkFn9: mkFn9, 
        mkFn8: mkFn8, 
        mkFn7: mkFn7, 
        mkFn6: mkFn6, 
        mkFn5: mkFn5, 
        mkFn4: mkFn4, 
        mkFn3: mkFn3, 
        mkFn2: mkFn2, 
        mkFn1: mkFn1, 
        mkFn0: mkFn0, 
        on: on
    };
})();
var PS = PS || {};
PS.Data_Exists = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkExists(fa) {  return fa;};
    function runExists(f) {  return function(fa) {    return f(fa);  };};
    return {
        runExists: runExists, 
        mkExists: mkExists
    };
})();
var PS = PS || {};
PS.Data_Eq = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Ref = {
        create: function (value) {
            return value;
        }
    };
    var liftRef = function (_84) {
        return function (_85) {
            return function (_86) {
                return _84(_85)(_86);
            };
        };
    };
    var functorRef = function () {
        return new Prelude.Functor(function (_87) {
            return function (_88) {
                return _87(_88);
            };
        });
    };
    var eqRef = function () {
        return new Prelude.Eq(liftRef(Prelude.refIneq), liftRef(Prelude.refEq));
    };
    return {
        Ref: Ref, 
        liftRef: liftRef, 
        eqRef: eqRef, 
        functorRef: functorRef
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Char = {
        create: function (value) {
            return value;
        }
    };
    function toCharCode(c){  return c.charCodeAt(0);};
    function fromCharCode(c){   return String.fromCharCode(c);};
    var charString = function (_89) {
        return _89;
    };
    return {
        toCharCode: toCharCode, 
        fromCharCode: fromCharCode, 
        charString: charString
    };
})();
var PS = PS || {};
PS.Control_Monad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function MonadTrans(lift) {
        this.lift = lift;
    };
    var lift = function (dict) {
        return dict.lift;
    };
    return {
        MonadTrans: MonadTrans, 
        lift: lift
    };
})();
var PS = PS || {};
PS.Control_Monad_Error = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Error(noMsg, strMsg) {
        this.noMsg = noMsg;
        this.strMsg = strMsg;
    };
    var strMsg = function (dict) {
        return dict.strMsg;
    };
    var noMsg = function (dict) {
        return dict.noMsg;
    };
    var errorString = function () {
        return new Error("", Prelude.id(Prelude.categoryArr()));
    };
    return {
        Error: Error, 
        strMsg: strMsg, 
        noMsg: noMsg, 
        errorString: errorString
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    function runPure(f) {  return f();};
    function untilE(f) {  return function() {    while (!f());    return {};  };};
    function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
    function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
    function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
    var applicativeEff = function () {
        return new Prelude.Applicative(applyEff, returnE);
    };
    var applyEff = function () {
        return new Prelude.Apply(Prelude.ap(monadEff()), functorEff);
    };
    var monadEff = function () {
        return new Prelude.Monad(applicativeEff, bindEff);
    };
    var bindEff = function () {
        return new Prelude.Bind(bindE, applyEff);
    };
    var functorEff = function () {
        return new Prelude.Functor(Prelude.liftA1(applicativeEff()));
    };
    return {
        foreachE: foreachE, 
        forE: forE, 
        whileE: whileE, 
        untilE: untilE, 
        runPure: runPure, 
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Exception = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function showErrorImpl(err) {  return err.stack ? err.stack : err.toString();};
    function error(msg) {  return new Error(msg);};;
    function message(e) {  return e.message;};
    function throwException(e) {  return function() {    throw e;  };};
    function catchException(c) {  return function(t) {    return function() {      try {        return t();      } catch(e) {        if (e instanceof Error || {}.toString.call(e) === '[object Error]') {          return c(e)();        } else {          return c(new Error(e.toString()))();        }      }    };  };};
    var showError = function () {
        return new Prelude.Show(showErrorImpl);
    };
    return {
        catchException: catchException, 
        throwException: throwException, 
        message: message, 
        error: error, 
        showErrorImpl: showErrorImpl, 
        showError: showError
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Random = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function random() {  return Math.random();};
    return {
        random: random
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeInterleaveEff(f) {  return f;};
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function newSTRef(val) {  return function() {    return { value: val };  };};
    function readSTRef(ref) {  return function() {    return ref.value;  };};
    function modifySTRef(ref) {  return function(f) {    return function() {      return ref.value = f(ref.value);    };  };};
    function writeSTRef(ref) {  return function(a) {    return function() {      return ref.value = a;    };  };};
    function newSTArray(len) {  return function(a) {    return function() {      var arr = [];      for (var i = 0; i < len; i++) {        arr[i] = a;      };      return arr;    };  };};
    function peekSTArray(arr) {  return function(i) {    return function() {      return arr[i];    };  };};
    function pokeSTArray(arr) {  return function(i) {    return function(a) {      return function() {        return arr[i] = a;      };    };  };};
    function runST(f) {  return f;};
    function runSTArray(f) {  return f;};
    return {
        runSTArray: runSTArray, 
        runST: runST, 
        pokeSTArray: pokeSTArray, 
        peekSTArray: peekSTArray, 
        newSTArray: newSTArray, 
        writeSTRef: writeSTRef, 
        modifySTRef: modifySTRef, 
        readSTRef: readSTRef, 
        newSTRef: newSTRef
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function trace(s) {  return function() {    console.log(s);    return {};  };};
    var print = function (__dict_Show_17) {
        return function (o) {
            return trace(Prelude.show(__dict_Show_17)(o));
        };
    };
    return {
        print: print, 
        trace: trace
    };
})();
var PS = PS || {};
PS.Sammy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function sammy(selector){return function() { return Sammy(selector, function(app){ return app;});};};
    function runApp(app){ return function(route){ return function (){ app.run(route);};};};
    function get(smy){return function(path){return function(fn){ return function(){smy.get(path,function(s){fn(s)();});};};};};
    function post(smy){return function(path){return function(fn){ return function(){smy.post(path,function(s){fn(s)();});};};};};
    function put(smy){return function(path){return function(fn){ return function(){smy.put(path,function(s){fn(s)();});};};};};
    function del(smy){return function(path){return function(fn){ return function(){smy.route('delete',path,function(s){fn(s)();});};};};};
    function params(smy){return function(paramName){ return function(){var p = smy.params[paramName];if($.type(p) === 'string'){return [p];}else if($.type(p) === 'undefined'){return [];}else{return p;}};};};
    function trigger(smy){ return function(evt){ return function(){smy.trigger(evt);};};};
    function bindEvent(smy){ return function(evt){ return function(fn){ return function(){smy.bind(evt,function(s){fn(s)()});};};};};
    return {
        runApp: runApp, 
        del: del, 
        post: post, 
        put: put, 
        get: get, 
        sammy: sammy, 
        params: params, 
        trigger: trigger, 
        bindEvent: bindEvent
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var ContT = {
        create: function (value) {
            return value;
        }
    };
    var runContT = function (_90) {
        return function (_91) {
            return _90(_91);
        };
    };
    var withContT = function (f) {
        return function (m) {
            return function (k) {
                return runContT(m)(f(k));
            };
        };
    };
    var monadTransContT = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_18) {
            return function (m) {
                return function (k) {
                    return Prelude[">>="](__dict_Monad_18["__superclass_Prelude.Bind_1"]())(m)(k);
                };
            };
        });
    };
    var mapContT = function (f) {
        return function (m) {
            return function (k) {
                return f(runContT(m)(k));
            };
        };
    };
    var functorContT = function (__dict_Monad_20) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (k) {
                    return runContT(m)(function (a) {
                        return k(f(a));
                    });
                };
            };
        });
    };
    var callCC = function (f) {
        return function (k) {
            return runContT(f(function (a) {
                return function (_) {
                    return k(a);
                };
            }))(k);
        };
    };
    var applyContT = function (__dict_Functor_22) {
        return function (__dict_Monad_23) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return function (k) {
                        return runContT(f)(function (g) {
                            return runContT(v)(function (a) {
                                return k(g(a));
                            });
                        });
                    };
                };
            }, function () {
                return functorContT(__dict_Monad_23);
            });
        };
    };
    var bindContT = function (__dict_Monad_21) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (k$prime) {
                    return runContT(m)(function (a) {
                        return runContT(k(a))(k$prime);
                    });
                };
            };
        }, function () {
            return applyContT(((__dict_Monad_21["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_21);
        });
    };
    var applicativeContT = function (__dict_Functor_24) {
        return function (__dict_Monad_25) {
            return new Prelude.Applicative(function () {
                return applyContT(__dict_Functor_24)(__dict_Monad_25);
            }, function (a) {
                return function (k) {
                    return k(a);
                };
            });
        };
    };
    var monadContT = function (__dict_Monad_19) {
        return new Prelude.Monad(function () {
            return applicativeContT(((__dict_Monad_19["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_19);
        }, function () {
            return bindContT(__dict_Monad_19);
        });
    };
    return {
        ContT: ContT, 
        callCC: callCC, 
        withContT: withContT, 
        mapContT: mapContT, 
        runContT: runContT, 
        functorContT: functorContT, 
        applyContT: applyContT, 
        applicativeContT: applicativeContT, 
        bindContT: bindContT, 
        monadContT: monadContT, 
        monadTransContT: monadTransContT
    };
})();
var PS = PS || {};
PS.Control_Monad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var when = function (__dict_Monad_26) {
        return function (_97) {
            return function (_98) {
                if (_97) {
                    return _98;
                };
                if (!_97) {
                    return Prelude["return"](__dict_Monad_26)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unless = function (__dict_Monad_27) {
        return function (_99) {
            return function (_100) {
                if (!_99) {
                    return _100;
                };
                if (_99) {
                    return Prelude["return"](__dict_Monad_27)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var replicateM = function (__dict_Monad_28) {
        return function (_92) {
            return function (_93) {
                if (_92 === 0) {
                    return Prelude["return"](__dict_Monad_28)([  ]);
                };
                return Prelude[">>="](__dict_Monad_28["__superclass_Prelude.Bind_1"]())(_93)(function (_4) {
                    return Prelude[">>="](__dict_Monad_28["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_28)(_92 - 1)(_93))(function (_3) {
                        return Prelude["return"](__dict_Monad_28)(Prelude[":"](_4)(_3));
                    });
                });
            };
        };
    };
    var foldM = function (__dict_Monad_29) {
        return function (_94) {
            return function (_95) {
                return function (_96) {
                    if (_96.length === 0) {
                        return Prelude["return"](__dict_Monad_29)(_95);
                    };
                    if (_96.length >= 1) {
                        var _660 = _96.slice(1);
                        return Prelude[">>="](__dict_Monad_29["__superclass_Prelude.Bind_1"]())(_94(_95)(_96[0]))(function (a$prime) {
                            return foldM(__dict_Monad_29)(_94)(a$prime)(_660);
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        unless: unless, 
        when: when, 
        foldM: foldM, 
        replicateM: replicateM
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Lazy(defer) {
        this.defer = defer;
    };
    function Lazy1(defer1) {
        this.defer1 = defer1;
    };
    function Lazy2(defer2) {
        this.defer2 = defer2;
    };
    var defer2 = function (dict) {
        return dict.defer2;
    };
    var fix2 = function (__dict_Lazy2_30) {
        return function (f) {
            return defer2(__dict_Lazy2_30)(function (_) {
                return f(fix2(__dict_Lazy2_30)(f));
            });
        };
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_31) {
        return function (f) {
            return defer1(__dict_Lazy1_31)(function (_) {
                return f(fix1(__dict_Lazy1_31)(f));
            });
        };
    };
    var defer = function (dict) {
        return dict.defer;
    };
    var fix = function (__dict_Lazy_32) {
        return function (f) {
            return defer(__dict_Lazy_32)(function (_) {
                return f(fix(__dict_Lazy_32)(f));
            });
        };
    };
    return {
        Lazy2: Lazy2, 
        Lazy1: Lazy1, 
        Lazy: Lazy, 
        fix2: fix2, 
        fix1: fix1, 
        fix: fix, 
        defer2: defer2, 
        defer1: defer1, 
        defer: defer
    };
})();
var PS = PS || {};
PS.Data_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    function defer(thunk) {    if (this instanceof defer) {      this.thunk = thunk;      return this;    } else {      return new defer(thunk);    }}defer.prototype.force = function () {    var value = this.thunk();    delete this.thunk;    this.force = function () {        return value;    };    return value;};;
    function force(l) {  return l.force();};
    var showLazy = function (__dict_Show_33) {
        return new Prelude.Show(function (x) {
            return "Lazy " + Prelude.show(__dict_Show_33)(force(x));
        });
    };
    var lazy1Lazy = function () {
        return new Control_Lazy.Lazy1(function (f) {
            return defer(function (_) {
                return force(f(Prelude.unit));
            });
        });
    };
    var functorLazy = function () {
        return new Prelude.Functor(function (f) {
            return function (l) {
                return defer(function (_) {
                    return f(force(l));
                });
            };
        });
    };
    var eqLazy = function (__dict_Eq_35) {
        return new Prelude.Eq(function (x) {
            return function (y) {
                return !Prelude["=="](eqLazy(__dict_Eq_35))(x)(y);
            };
        }, function (x) {
            return function (y) {
                return Prelude["=="](__dict_Eq_35)(force(x))(force(y));
            };
        });
    };
    var ordLazy = function (__dict_Ord_34) {
        return new Prelude.Ord(function () {
            return eqLazy(__dict_Ord_34["__superclass_Prelude.Eq_0"]());
        }, function (x) {
            return function (y) {
                return Prelude.compare(__dict_Ord_34)(force(x))(force(y));
            };
        });
    };
    var applyLazy = function () {
        return new Prelude.Apply(function (f) {
            return function (x) {
                return defer(function (_) {
                    return force(f)(force(x));
                });
            };
        }, functorLazy);
    };
    var bindLazy = function () {
        return new Prelude.Bind(function (l) {
            return function (f) {
                return defer(function (_) {
                    return Prelude["<<<"](Prelude.semigroupoidArr())(force)(Prelude["<<<"](Prelude.semigroupoidArr())(f)(force))(l);
                });
            };
        }, applyLazy);
    };
    var applicativeLazy = function () {
        return new Prelude.Applicative(applyLazy, function (a) {
            return defer(function (_) {
                return a;
            });
        });
    };
    var monadLazy = function () {
        return new Prelude.Monad(applicativeLazy, bindLazy);
    };
    return {
        force: force, 
        defer: defer, 
        functorLazy: functorLazy, 
        applyLazy: applyLazy, 
        applicativeLazy: applicativeLazy, 
        bindLazy: bindLazy, 
        monadLazy: monadLazy, 
        eqLazy: eqLazy, 
        ordLazy: ordLazy, 
        showLazy: showLazy, 
        lazy1Lazy: lazy1Lazy
    };
})();
var PS = PS || {};
PS.Control_Extend = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Extend($less$less$eq, __superclass_Prelude$dotFunctor_0) {
        this["<<="] = $less$less$eq;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$less$eq = function (dict) {
        return dict["<<="];
    };
    var $eq$less$eq = function (__dict_Extend_36) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return f($less$less$eq(__dict_Extend_36)(g)(w));
                };
            };
        };
    };
    var $eq$greater$eq = function (__dict_Extend_37) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return g($less$less$eq(__dict_Extend_37)(f)(w));
                };
            };
        };
    };
    var $eq$greater$greater = function (__dict_Extend_38) {
        return function (w) {
            return function (f) {
                return $less$less$eq(__dict_Extend_38)(f)(w);
            };
        };
    };
    var extendArr = function (__dict_Semigroup_39) {
        return new Extend(function (f) {
            return function (g) {
                return function (w) {
                    return f(function (w$prime) {
                        return g(Prelude["<>"](__dict_Semigroup_39)(w)(w$prime));
                    });
                };
            };
        }, Prelude.functorArr);
    };
    var duplicate = function (__dict_Extend_40) {
        return function (w) {
            return $less$less$eq(__dict_Extend_40)(Prelude.id(Prelude.categoryArr()))(w);
        };
    };
    return {
        Extend: Extend, 
        duplicate: duplicate, 
        "=<=": $eq$less$eq, 
        "=>=": $eq$greater$eq, 
        "=>>": $eq$greater$greater, 
        "<<=": $less$less$eq, 
        extendArr: extendArr
    };
})();
var PS = PS || {};
PS.Control_Comonad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Comonad(__superclass_Control$dotExtend$dotExtend_0, extract) {
        this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
        this.extract = extract;
    };
    var extract = function (dict) {
        return dict.extract;
    };
    return {
        Comonad: Comonad, 
        extract: extract
    };
})();
var PS = PS || {};
PS.Control_Monad_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    var Identity = {
        create: function (value) {
            return value;
        }
    };
    var runIdentity = function (_101) {
        return _101;
    };
    var functorIdentity = function () {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return Identity.create(f(runIdentity(m)));
            };
        });
    };
    var extendIdentity = function () {
        return new Control_Extend.Extend(function (f) {
            return function (m) {
                return Identity.create(f(m));
            };
        }, functorIdentity);
    };
    var comonadIdentity = function () {
        return new Control_Comonad.Comonad(extendIdentity, function (_104) {
            return _104;
        });
    };
    var applyIdentity = function () {
        return new Prelude.Apply(function (_102) {
            return function (_103) {
                return Identity.create(_102(_103));
            };
        }, functorIdentity);
    };
    var bindIdentity = function () {
        return new Prelude.Bind(function (m) {
            return function (f) {
                return f(runIdentity(m));
            };
        }, applyIdentity);
    };
    var applicativeIdentity = function () {
        return new Prelude.Applicative(applyIdentity, Identity.create);
    };
    var monadIdentity = function () {
        return new Prelude.Monad(applicativeIdentity, bindIdentity);
    };
    return {
        Identity: Identity, 
        runIdentity: runIdentity, 
        functorIdentity: functorIdentity, 
        applyIdentity: applyIdentity, 
        applicativeIdentity: applicativeIdentity, 
        bindIdentity: bindIdentity, 
        monadIdentity: monadIdentity, 
        extendIdentity: extendIdentity, 
        comonadIdentity: comonadIdentity
    };
})();
var PS = PS || {};
PS.Data_Coyoneda = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Exists = PS.Data_Exists;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    var CoyonedaF = {
        create: function (value) {
            return value;
        }
    };
    var Coyoneda = {
        create: function (value) {
            return value;
        }
    };
    var lowerCoyoneda = function (__dict_Functor_42) {
        return function (_111) {
            return Data_Exists.runExists(function (_109) {
                return Prelude["<$>"](__dict_Functor_42)(_109.k)(_109.fi);
            })(_111);
        };
    };
    var liftCoyoneda = function (fa) {
        return Coyoneda.create(Data_Exists.mkExists({
            k: Prelude.id(Prelude.categoryArr()), 
            fi: fa
        }));
    };
    var monadTransCoyoneda = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_43) {
            return liftCoyoneda;
        });
    };
    var coyoneda = function (k) {
        return function (fi) {
            return Coyoneda.create(Data_Exists.mkExists({
                k: k, 
                fi: fi
            }));
        };
    };
    var functorCoyoneda = function () {
        return new Prelude.Functor(function (_114) {
            return function (_115) {
                return Data_Exists.runExists(function (_105) {
                    return coyoneda(Prelude["<<<"](Prelude.semigroupoidArr())(_114)(_105.k))(_105.fi);
                })(_115);
            };
        });
    };
    var extendCoyoneda = function (__dict_Extend_44) {
        return new Control_Extend.Extend(function (_118) {
            return function (_119) {
                return Data_Exists.runExists(function (_107) {
                    return liftCoyoneda(Control_Extend["<<="](__dict_Extend_44)(Prelude["<<<"](Prelude.semigroupoidArr())(_118)(coyoneda(_107.k)))(_107.fi));
                })(_119);
            };
        }, functorCoyoneda);
    };
    var liftCoyonedaT = function (_112) {
        return function (_113) {
            return Data_Exists.runExists(function (_110) {
                return coyoneda(_110.k)(_112(_110.fi));
            })(_113);
        };
    };
    var liftCoyonedaTF = function (__dict_Functor_45) {
        return function (nat) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(lowerCoyoneda(__dict_Functor_45))(liftCoyonedaT(nat));
        };
    };
    var comonadCoyoneda = function (__dict_Comonad_46) {
        return new Control_Comonad.Comonad(function () {
            return extendCoyoneda(__dict_Comonad_46["__superclass_Control.Extend.Extend_0"]());
        }, function (_120) {
            return Data_Exists.runExists(function (_108) {
                return _108.k(Control_Comonad.extract(__dict_Comonad_46)(_108.fi));
            })(_120);
        });
    };
    var applyCoyoneda = function (__dict_Apply_48) {
        return new Prelude.Apply(function (f) {
            return function (g) {
                return liftCoyoneda(Prelude["<*>"](__dict_Apply_48)(lowerCoyoneda(__dict_Apply_48["__superclass_Prelude.Functor_0"]())(f))(lowerCoyoneda(__dict_Apply_48["__superclass_Prelude.Functor_0"]())(g)));
            };
        }, functorCoyoneda);
    };
    var bindCoyoneda = function (__dict_Bind_47) {
        return new Prelude.Bind(function (_116) {
            return function (_117) {
                return liftCoyoneda(Data_Exists.runExists(function (_106) {
                    return Prelude[">>="](__dict_Bind_47)(_106.fi)(Prelude["<<<"](Prelude.semigroupoidArr())(lowerCoyoneda((__dict_Bind_47["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude["<<<"](Prelude.semigroupoidArr())(_117)(_106.k)));
                })(_116));
            };
        }, function () {
            return applyCoyoneda(__dict_Bind_47["__superclass_Prelude.Apply_0"]());
        });
    };
    var applicativeCoyoneda = function (__dict_Applicative_49) {
        return new Prelude.Applicative(function () {
            return applyCoyoneda(__dict_Applicative_49["__superclass_Prelude.Apply_0"]());
        }, Prelude["<<<"](Prelude.semigroupoidArr())(liftCoyoneda)(Prelude.pure(__dict_Applicative_49)));
    };
    var monadCoyoneda = function (__dict_Monad_41) {
        return new Prelude.Monad(function () {
            return applicativeCoyoneda(__dict_Monad_41["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindCoyoneda(__dict_Monad_41["__superclass_Prelude.Bind_1"]());
        });
    };
    return {
        CoyonedaF: CoyonedaF, 
        Coyoneda: Coyoneda, 
        liftCoyonedaTF: liftCoyonedaTF, 
        liftCoyonedaT: liftCoyonedaT, 
        lowerCoyoneda: lowerCoyoneda, 
        liftCoyoneda: liftCoyoneda, 
        coyoneda: coyoneda, 
        functorCoyoneda: functorCoyoneda, 
        applyCoyoneda: applyCoyoneda, 
        applicativeCoyoneda: applicativeCoyoneda, 
        bindCoyoneda: bindCoyoneda, 
        monadCoyoneda: monadCoyoneda, 
        monadTransCoyoneda: monadTransCoyoneda, 
        extendCoyoneda: extendCoyoneda, 
        comonadCoyoneda: comonadCoyoneda
    };
})();
var PS = PS || {};
PS.Data_Yoneda = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    var Yoneda = {
        create: function (value) {
            return value;
        }
    };
    var runYoneda = function (_121) {
        return function (_122) {
            return _121(_122);
        };
    };
    var lowerYoneda = function (_123) {
        return _123(Prelude.id(Prelude.categoryArr()));
    };
    var liftYoneda = function (__dict_Functor_51) {
        return function (m) {
            return function (k) {
                return Prelude["<$>"](__dict_Functor_51)(k)(m);
            };
        };
    };
    var monadTransYoneda = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_52) {
            return liftYoneda(((__dict_Monad_52["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var functorYoneda = function () {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (k) {
                    return runYoneda(m)(Prelude["<<<"](Prelude.semigroupoidArr())(k)(f));
                };
            };
        });
    };
    var extendYoneda = function (__dict_Extend_53) {
        return new Control_Extend.Extend(function (_128) {
            return function (_129) {
                return function (k) {
                    return Control_Extend["<<="](__dict_Extend_53)(Prelude["<<<"](Prelude.semigroupoidArr())(k)(Prelude["<<<"](Prelude.semigroupoidArr())(_128)(liftYoneda(__dict_Extend_53["__superclass_Prelude.Functor_0"]()))))(_129(Prelude.id(Prelude.categoryArr())));
                };
            };
        }, functorYoneda);
    };
    var comonadYoneda = function (__dict_Comonad_54) {
        return new Control_Comonad.Comonad(function () {
            return extendYoneda(__dict_Comonad_54["__superclass_Control.Extend.Extend_0"]());
        }, Prelude["<<<"](Prelude.semigroupoidArr())(Control_Comonad.extract(__dict_Comonad_54))(lowerYoneda));
    };
    var applyYoneda = function (__dict_Apply_56) {
        return new Prelude.Apply(function (_124) {
            return function (_125) {
                return function (k) {
                    return Prelude["<*>"](__dict_Apply_56)(_124(Prelude["<<<"](Prelude.semigroupoidArr())(k)))(_125(Prelude.id(Prelude.categoryArr())));
                };
            };
        }, functorYoneda);
    };
    var bindCoyoneda = function (__dict_Bind_55) {
        return new Prelude.Bind(function (_126) {
            return function (_127) {
                return function (k) {
                    return Prelude[">>="](__dict_Bind_55)(_126(Prelude.id(Prelude.categoryArr())))(function (a) {
                        return runYoneda(_127(a))(k);
                    });
                };
            };
        }, function () {
            return applyYoneda(__dict_Bind_55["__superclass_Prelude.Apply_0"]());
        });
    };
    var applicativeYoneda = function (__dict_Applicative_57) {
        return new Prelude.Applicative(function () {
            return applyYoneda(__dict_Applicative_57["__superclass_Prelude.Apply_0"]());
        }, Prelude["<<<"](Prelude.semigroupoidArr())(liftYoneda((__dict_Applicative_57["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_57)));
    };
    var monadYoneda = function (__dict_Monad_50) {
        return new Prelude.Monad(function () {
            return applicativeYoneda(__dict_Monad_50["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindCoyoneda(__dict_Monad_50["__superclass_Prelude.Bind_1"]());
        });
    };
    return {
        Yoneda: Yoneda, 
        lowerYoneda: lowerYoneda, 
        liftYoneda: liftYoneda, 
        runYoneda: runYoneda, 
        functorYoneda: functorYoneda, 
        applyYoneda: applyYoneda, 
        applicativeYoneda: applicativeYoneda, 
        bindCoyoneda: bindCoyoneda, 
        monadYoneda: monadYoneda, 
        monadTransYoneda: monadTransYoneda, 
        extendYoneda: extendYoneda, 
        comonadYoneda: comonadYoneda
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $greater$eq$greater = function (__dict_Bind_58) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return Prelude[">>="](__dict_Bind_58)(f(a))(g);
                };
            };
        };
    };
    var $eq$less$less = function (__dict_Bind_59) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_59)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_60) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_60)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_61) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_61)(m)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var ifM = function (__dict_Bind_62) {
        return function (cond) {
            return function (t) {
                return function (f) {
                    return Prelude[">>="](__dict_Bind_62)(cond)(function (cond$prime) {
                        return cond$prime ? t : f;
                    });
                };
            };
        };
    };
    return {
        ifM: ifM, 
        join: join, 
        "<=<": $less$eq$less, 
        ">=>": $greater$eq$greater, 
        "=<<": $eq$less$less
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_63) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_63)(Prelude["<$>"](__dict_Apply_63["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_64) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_64)(Prelude["<$>"](__dict_Apply_64["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr())))(a))(b);
            };
        };
    };
    var lift5 = function (__dict_Apply_65) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return function (e) {
                                return Prelude["<*>"](__dict_Apply_65)(Prelude["<*>"](__dict_Apply_65)(Prelude["<*>"](__dict_Apply_65)(Prelude["<*>"](__dict_Apply_65)(Prelude["<$>"](__dict_Apply_65["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                            };
                        };
                    };
                };
            };
        };
    };
    var lift4 = function (__dict_Apply_66) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return Prelude["<*>"](__dict_Apply_66)(Prelude["<*>"](__dict_Apply_66)(Prelude["<*>"](__dict_Apply_66)(Prelude["<$>"](__dict_Apply_66["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                        };
                    };
                };
            };
        };
    };
    var lift3 = function (__dict_Apply_67) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return Prelude["<*>"](__dict_Apply_67)(Prelude["<*>"](__dict_Apply_67)(Prelude["<$>"](__dict_Apply_67["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                    };
                };
            };
        };
    };
    var lift2 = function (__dict_Apply_68) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](__dict_Apply_68)(Prelude["<$>"](__dict_Apply_68["__superclass_Prelude.Functor_0"]())(f)(a))(b);
                };
            };
        };
    };
    var forever = function (__dict_Apply_69) {
        return function (a) {
            return $times$greater(__dict_Apply_69)(a)(forever(__dict_Apply_69)(a));
        };
    };
    return {
        forever: forever, 
        lift5: lift5, 
        lift4: lift4, 
        lift3: lift3, 
        lift2: lift2, 
        "*>": $times$greater, 
        "<*": $less$times
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Alt($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Lazy = PS.Control_Lazy;
    function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var many = function (__dict_Alternative_70) {
        return function (__dict_Lazy1_71) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_70["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_70)(__dict_Lazy1_71)(v))(Prelude.pure(__dict_Alternative_70["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    var some = function (__dict_Alternative_72) {
        return function (__dict_Lazy1_73) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_72["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_72["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_73)(function (_) {
                    return many(__dict_Alternative_72)(__dict_Lazy1_73)(v);
                }));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    function MonadPlus(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_74) {
        return function (_130) {
            if (_130) {
                return Prelude["return"](__dict_MonadPlus_74["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_130) {
                return Control_Plus.empty((__dict_MonadPlus_74["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ReaderT = {
        create: function (value) {
            return value;
        }
    };
    var runReaderT = function (_131) {
        return _131;
    };
    var withReaderT = function (f) {
        return function (m) {
            return ReaderT.create(Prelude["<<<"](Prelude.semigroupoidArr())(runReaderT(m))(f));
        };
    };
    var mapReaderT = function (f) {
        return function (m) {
            return ReaderT.create(Prelude["<<<"](Prelude.semigroupoidArr())(f)(runReaderT(m)));
        };
    };
    var liftReaderT = function (m) {
        return Prelude["const"](m);
    };
    var monadTransReaderT = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_77) {
            return liftReaderT;
        });
    };
    var liftCatchReader = function ($$catch) {
        return function (m) {
            return function (h) {
                return ReaderT.create(function (r) {
                    return $$catch(runReaderT(m)(r))(function (e) {
                        return runReaderT(h(e))(r);
                    });
                });
            };
        };
    };
    var liftCallCCReader = function (callCC) {
        return function (f) {
            return ReaderT.create(function (r) {
                return callCC(function (c) {
                    return runReaderT(f(function (a) {
                        return ReaderT.create(Prelude["const"](c(a)));
                    }))(r);
                });
            });
        };
    };
    var functorReaderT = function (__dict_Functor_79) {
        return new Prelude.Functor(function (f) {
            return mapReaderT(Prelude["<$>"](__dict_Functor_79)(f));
        });
    };
    var applyReaderT = function (__dict_Applicative_81) {
        return new Prelude.Apply(function (f) {
            return function (v) {
                return function (r) {
                    return Prelude["<*>"](__dict_Applicative_81["__superclass_Prelude.Apply_0"]())(runReaderT(f)(r))(runReaderT(v)(r));
                };
            };
        }, function () {
            return functorReaderT((__dict_Applicative_81["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindReaderT = function (__dict_Monad_80) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (r) {
                    return Prelude[">>="](__dict_Monad_80["__superclass_Prelude.Bind_1"]())(runReaderT(m)(r))(function (_5) {
                        return runReaderT(k(_5))(r);
                    });
                };
            };
        }, function () {
            return applyReaderT(__dict_Monad_80["__superclass_Prelude.Applicative_0"]());
        });
    };
    var applicativeReaderT = function (__dict_Applicative_82) {
        return new Prelude.Applicative(function () {
            return applyReaderT(__dict_Applicative_82);
        }, Prelude["<<<"](Prelude.semigroupoidArr())(liftReaderT)(Prelude.pure(__dict_Applicative_82)));
    };
    var monadReaderT = function (__dict_Monad_75) {
        return new Prelude.Monad(function () {
            return applicativeReaderT(__dict_Monad_75["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindReaderT(__dict_Monad_75);
        });
    };
    var altReaderT = function (__dict_Alt_84) {
        return new Control_Alt.Alt(function (m) {
            return function (n) {
                return function (r) {
                    return Control_Alt["<|>"](__dict_Alt_84)(runReaderT(m)(r))(runReaderT(n)(r));
                };
            };
        }, function () {
            return functorReaderT(__dict_Alt_84["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusReaderT = function (__dict_Plus_78) {
        return new Control_Plus.Plus(function () {
            return altReaderT(__dict_Plus_78["__superclass_Control.Alt.Alt_0"]());
        }, liftReaderT(Control_Plus.empty(__dict_Plus_78)));
    };
    var alternativeReaderT = function (__dict_Alternative_83) {
        return new Control_Alternative.Alternative(function () {
            return plusReaderT(__dict_Alternative_83["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeReaderT(__dict_Alternative_83["__superclass_Prelude.Applicative_0"]());
        });
    };
    var monadPlusReaderT = function (__dict_MonadPlus_76) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeReaderT(__dict_MonadPlus_76["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadReaderT(__dict_MonadPlus_76["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        ReaderT: ReaderT, 
        liftCallCCReader: liftCallCCReader, 
        liftCatchReader: liftCatchReader, 
        liftReaderT: liftReaderT, 
        mapReaderT: mapReaderT, 
        withReaderT: withReaderT, 
        runReaderT: runReaderT, 
        functorReaderT: functorReaderT, 
        applyReaderT: applyReaderT, 
        applicativeReaderT: applicativeReaderT, 
        altReaderT: altReaderT, 
        plusReaderT: plusReaderT, 
        alternativeReaderT: alternativeReaderT, 
        bindReaderT: bindReaderT, 
        monadReaderT: monadReaderT, 
        monadPlusReaderT: monadPlusReaderT, 
        monadTransReaderT: monadTransReaderT
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var withReader = Control_Monad_Reader_Trans.withReaderT;
    var runReader = function (m) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(Control_Monad_Reader_Trans.runReaderT(m));
    };
    var mapReader = function (f) {
        return Control_Monad_Reader_Trans.mapReaderT(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr())(f)(Control_Monad_Identity.runIdentity)));
    };
    return {
        mapReader: mapReader, 
        withReader: withReader, 
        runReader: runReader
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    var showEither = function (__dict_Show_85) {
        return function (__dict_Show_86) {
            return new Prelude.Show(function (_141) {
                if (_141 instanceof Left) {
                    return "Left (" + (Prelude.show(__dict_Show_85)(_141.value0) + ")");
                };
                if (_141 instanceof Right) {
                    return "Right (" + (Prelude.show(__dict_Show_86)(_141.value0) + ")");
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var functorEither = function () {
        return new Prelude.Functor(function (_135) {
            return function (_136) {
                if (_136 instanceof Left) {
                    return new Left(_136.value0);
                };
                if (_136 instanceof Right) {
                    return new Right(_135(_136.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqEither = function (__dict_Eq_89) {
        return function (__dict_Eq_90) {
            return new Prelude.Eq(function (a) {
                return function (b) {
                    return !Prelude["=="](eqEither(__dict_Eq_89)(__dict_Eq_90))(a)(b);
                };
            }, function (_142) {
                return function (_143) {
                    if (_142 instanceof Left && _143 instanceof Left) {
                        return Prelude["=="](__dict_Eq_89)(_142.value0)(_143.value0);
                    };
                    if (_142 instanceof Right && _143 instanceof Right) {
                        return Prelude["=="](__dict_Eq_90)(_142.value0)(_143.value0);
                    };
                    return false;
                };
            });
        };
    };
    var ordEither = function (__dict_Ord_87) {
        return function (__dict_Ord_88) {
            return new Prelude.Ord(function () {
                return eqEither(__dict_Ord_87["__superclass_Prelude.Eq_0"]())(__dict_Ord_88["__superclass_Prelude.Eq_0"]());
            }, function (_144) {
                return function (_145) {
                    if (_144 instanceof Left && _145 instanceof Left) {
                        return Prelude.compare(__dict_Ord_87)(_144.value0)(_145.value0);
                    };
                    if (_144 instanceof Right && _145 instanceof Right) {
                        return Prelude.compare(__dict_Ord_88)(_144.value0)(_145.value0);
                    };
                    if (_144 instanceof Left) {
                        return Prelude.LT.value;
                    };
                    if (_145 instanceof Left) {
                        return Prelude.GT.value;
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    var either = function (_132) {
        return function (_133) {
            return function (_134) {
                if (_134 instanceof Left) {
                    return _132(_134.value0);
                };
                if (_134 instanceof Right) {
                    return _133(_134.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var isRight = either(Prelude["const"](false))(Prelude["const"](true));
    var applyEither = function () {
        return new Prelude.Apply(function (_137) {
            return function (_138) {
                if (_137 instanceof Left) {
                    return new Left(_137.value0);
                };
                if (_137 instanceof Right) {
                    return Prelude["<$>"](functorEither())(_137.value0)(_138);
                };
                throw new Error("Failed pattern match");
            };
        }, functorEither);
    };
    var bindEither = function () {
        return new Prelude.Bind(either(function (e) {
            return function (_) {
                return new Left(e);
            };
        })(function (a) {
            return function (f) {
                return f(a);
            };
        }), applyEither);
    };
    var applicativeEither = function () {
        return new Prelude.Applicative(applyEither, Right.create);
    };
    var monadEither = function () {
        return new Prelude.Monad(applicativeEither, bindEither);
    };
    var altEither = function () {
        return new Control_Alt.Alt(function (_139) {
            return function (_140) {
                if (_139 instanceof Left) {
                    return _140;
                };
                return _139;
            };
        }, functorEither);
    };
    return {
        Left: Left, 
        Right: Right, 
        isRight: isRight, 
        isLeft: isLeft, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        altEither: altEither, 
        bindEither: bindEither, 
        monadEither: monadEither, 
        showEither: showEither, 
        eqEither: eqEither, 
        ordEither: ordEither
    };
})();
var PS = PS || {};
PS.Control_Monad_Free = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Function = PS.Data_Function;
    var Data_Coyoneda = PS.Data_Coyoneda;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function Pure(value0) {
        this.value0 = value0;
    };
    Pure.create = function (value0) {
        return new Pure(value0);
    };
    function Free(value0) {
        this.value0 = value0;
    };
    Free.create = function (value0) {
        return new Free(value0);
    };
    function Gosub(value0) {
        this.value0 = value0;
    };
    Gosub.create = function (value0) {
        return new Gosub(value0);
    };
    function MonadFree(wrap) {
        this.wrap = wrap;
    };
    function resumeImpl(isGosub, isLeft, toEither, fromRight, resumeGosub, value) {  while (true) {    if (!isGosub(value)) return toEither(value);    var x = resumeGosub(value);    if (isLeft(x)) return x;    else value = fromRight(x);  }};
    function goImpl(resume, isRight, fromLeft, fromRight, fn, value) {  while (true) {    var r = resume(value);    if (isRight(r)) return fromRight(r);    value = fn(fromLeft(r));  }};
    function goEffImpl(resume, isRight, fromLeft, fromRight, fn, value) {  return function(){    while (true) {      var r = resume(value);      if (isRight(r)) return fromRight(r);      value = fn(fromLeft(r))();    }  };};
    var wrap = function (dict) {
        return dict.wrap;
    };
    var unsafeRight = function (_152) {
        if (_152 instanceof Data_Either.Right) {
            return _152.value0;
        };
        throw new Error("Failed pattern match");
    };
    var unsafeLeft = function (_151) {
        if (_151 instanceof Data_Either.Left) {
            return _151.value0;
        };
        throw new Error("Failed pattern match");
    };
    var unsafeFreeToEither = function (_150) {
        if (_150 instanceof Pure) {
            return new Data_Either.Right(_150.value0);
        };
        if (_150 instanceof Free) {
            return new Data_Either.Left(_150.value0);
        };
        throw new Error("Failed pattern match");
    };
    var pureF = function (__dict_Applicative_92) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Free.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.pure(__dict_Applicative_92))(Pure.create));
    };
    var monadTransFree = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_93) {
            return function (f) {
                return Free.create(Prelude[">>="](__dict_Monad_93["__superclass_Prelude.Bind_1"]())(f)(function (_6) {
                    return Prelude["return"](__dict_Monad_93)(new Pure(_6));
                }));
            };
        });
    };
    var monadFreeFree = function (__dict_Functor_94) {
        return new MonadFree(Free.create);
    };
    var liftF = function (__dict_Functor_96) {
        return function (__dict_Monad_97) {
            return function (__dict_MonadFree_98) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(wrap(__dict_MonadFree_98))(Prelude["<$>"](__dict_Functor_96)(Prelude["return"](__dict_Monad_97)));
            };
        };
    };
    var iterM = function (__dict_Functor_100) {
        return function (__dict_Monad_101) {
            return function (_146) {
                return function (_147) {
                    if (_147 instanceof Pure) {
                        return Prelude["return"](__dict_Monad_101)(_147.value0);
                    };
                    if (_147 instanceof Free) {
                        return _146(Prelude["<$>"](__dict_Functor_100)(iterM(__dict_Functor_100)(__dict_Monad_101)(_146))(_147.value0));
                    };
                    if (_147 instanceof Gosub) {
                        return _147.value0(function (req) {
                            return function (recv) {
                                return Prelude[">>="](__dict_Monad_101["__superclass_Prelude.Bind_1"]())(iterM(__dict_Functor_100)(__dict_Monad_101)(_146)(req(Prelude.unit)))(Prelude["<<<"](Prelude.semigroupoidArr())(iterM(__dict_Functor_100)(__dict_Monad_101)(_146))(recv));
                            };
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var isGosub = function (_149) {
        if (_149 instanceof Gosub) {
            return true;
        };
        return false;
    };
    var applicativeFree = function (__dict_Functor_111) {
        return new Prelude.Applicative(function () {
            return applyFree(__dict_Functor_111);
        }, Pure.create);
    };
    var applyFree = function (__dict_Functor_110) {
        return new Prelude.Apply(Prelude.ap(monadFree(__dict_Functor_110)), function () {
            return functorFree(__dict_Functor_110);
        });
    };
    var monadFree = function (__dict_Functor_95) {
        return new Prelude.Monad(function () {
            return applicativeFree(__dict_Functor_95);
        }, function () {
            return bindFree(__dict_Functor_95);
        });
    };
    var bindFree = function (__dict_Functor_109) {
        return new Prelude.Bind(function (_155) {
            return function (_156) {
                if (_155 instanceof Gosub) {
                    return new Gosub(function (h) {
                        return _155.value0(function (a) {
                            return function (i) {
                                return h(a)(function (x) {
                                    return new Gosub(function (j) {
                                        return j(Prelude["const"](i(x)))(_156);
                                    });
                                });
                            };
                        });
                    });
                };
                return new Gosub(function (h) {
                    return h(Prelude["const"](_155))(_156);
                });
            };
        }, function () {
            return applyFree(__dict_Functor_109);
        });
    };
    var functorFree = function (__dict_Functor_108) {
        return new Prelude.Functor(function (_153) {
            return function (_154) {
                if (_154 instanceof Pure) {
                    return new Pure(_153(_154.value0));
                };
                return Prelude.liftA1(applicativeFree(__dict_Functor_108))(_153)(_154);
            };
        });
    };
    var resumeGosub = function (__dict_Functor_91) {
        return function (_148) {
            if (_148 instanceof Gosub) {
                return _148.value0(function (a) {
                    return function (g) {
                        var _748 = a(Prelude.unit);
                        if (_748 instanceof Pure) {
                            return new Data_Either.Right(g(_748.value0));
                        };
                        if (_748 instanceof Free) {
                            return new Data_Either.Left(Prelude["<$>"](__dict_Functor_91)(function (h) {
                                return Prelude[">>="](bindFree(__dict_Functor_91))(h)(g);
                            })(_748.value0));
                        };
                        if (_748 instanceof Gosub) {
                            return new Data_Either.Right(_748.value0(function (b) {
                                return function (i) {
                                    return Prelude[">>="](bindFree(__dict_Functor_91))(b(Prelude.unit))(function (x) {
                                        return Prelude[">>="](bindFree(__dict_Functor_91))(i(x))(g);
                                    });
                                };
                            }));
                        };
                        throw new Error("Failed pattern match");
                    };
                });
            };
            throw new Error("Failed pattern match");
        };
    };
    var resume = function (__dict_Functor_102) {
        return function (f) {
            return resumeImpl(isGosub, Data_Either.isLeft, unsafeFreeToEither, unsafeRight, resumeGosub(__dict_Functor_102), f);
        };
    };
    var go = function (__dict_Functor_107) {
        return function (fn) {
            return function (f) {
                return goImpl(resume(__dict_Functor_107), Data_Either.isRight, unsafeLeft, unsafeRight, fn, f);
            };
        };
    };
    var goEff = function (__dict_Functor_106) {
        return function (fn) {
            return function (f) {
                return goEffImpl(resume(__dict_Functor_106), Data_Either.isRight, unsafeLeft, unsafeRight, fn, f);
            };
        };
    };
    var goEffC = function (nat) {
        return goEff(Data_Coyoneda.functorCoyoneda())(Data_Coyoneda.liftCoyonedaTF(Control_Monad_Eff.functorEff())(nat));
    };
    var goM = function (__dict_Functor_103) {
        return function (__dict_Monad_104) {
            return function (k) {
                return function (f) {
                    var _753 = resume(__dict_Functor_103)(f);
                    if (_753 instanceof Data_Either.Left) {
                        return Prelude[">>="](__dict_Monad_104["__superclass_Prelude.Bind_1"]())(k(_753.value0))(goM(__dict_Functor_103)(__dict_Monad_104)(k));
                    };
                    if (_753 instanceof Data_Either.Right) {
                        return Prelude["return"](__dict_Monad_104)(_753.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var goMC = function (__dict_Monad_105) {
        return function (nat) {
            return goM(Data_Coyoneda.functorCoyoneda())(__dict_Monad_105)(Data_Coyoneda.liftCoyonedaTF(((__dict_Monad_105["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(nat));
        };
    };
    var liftFC = Prelude["<<<"](Prelude.semigroupoidArr())(liftF(Data_Coyoneda.functorCoyoneda())(monadFree(Data_Coyoneda.functorCoyoneda()))(monadFreeFree(Data_Coyoneda.functorCoyoneda())))(Data_Coyoneda.liftCoyoneda);
    var pureFC = function (__dict_Applicative_99) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(liftFC)(Prelude.pure(__dict_Applicative_99));
    };
    return {
        Pure: Pure, 
        Free: Free, 
        Gosub: Gosub, 
        MonadFree: MonadFree, 
        goEffC: goEffC, 
        goEff: goEff, 
        go: go, 
        goMC: goMC, 
        goM: goM, 
        iterM: iterM, 
        pureFC: pureFC, 
        pureF: pureF, 
        liftFC: liftFC, 
        liftF: liftF, 
        wrap: wrap, 
        functorFree: functorFree, 
        applyFree: applyFree, 
        applicativeFree: applicativeFree, 
        bindFree: bindFree, 
        monadFree: monadFree, 
        monadTransFree: monadTransFree, 
        monadFreeFree: monadFreeFree
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function Nothing() {

    };
    Nothing.value = new Nothing();
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    var showMaybe = function (__dict_Show_112) {
        return new Prelude.Show(function (_172) {
            if (_172 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_112)(_172.value0) + ")");
            };
            if (_172 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupMaybe = function (__dict_Semigroup_113) {
        return new Prelude.Semigroup(function (_170) {
            return function (_171) {
                if (_170 instanceof Nothing) {
                    return _171;
                };
                if (_171 instanceof Nothing) {
                    return _170;
                };
                if (_170 instanceof Just && _171 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_113)(_170.value0)(_171.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_157) {
        return function (_158) {
            return function (_159) {
                if (_159 instanceof Nothing) {
                    return _157;
                };
                if (_159 instanceof Just) {
                    return _158(_159.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isNothing = maybe(true)(Prelude["const"](false));
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = function () {
        return new Prelude.Functor(function (_160) {
            return function (_161) {
                if (_161 instanceof Just) {
                    return new Just(_160(_161.value0));
                };
                return Nothing.value;
            };
        });
    };
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr()));
    };
    var extendMaybe = function () {
        return new Control_Extend.Extend(function (_168) {
            return function (_169) {
                if (_169 instanceof Nothing) {
                    return Nothing.value;
                };
                return Just.create(_168(_169));
            };
        }, functorMaybe);
    };
    var eqMaybe = function (__dict_Eq_115) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_115))(a)(b);
            };
        }, function (_173) {
            return function (_174) {
                if (_173 instanceof Nothing && _174 instanceof Nothing) {
                    return true;
                };
                if (_173 instanceof Just && _174 instanceof Just) {
                    return Prelude["=="](__dict_Eq_115)(_173.value0)(_174.value0);
                };
                return false;
            };
        });
    };
    var ordMaybe = function (__dict_Ord_114) {
        return new Prelude.Ord(function () {
            return eqMaybe(__dict_Ord_114["__superclass_Prelude.Eq_0"]());
        }, function (_175) {
            return function (_176) {
                if (_175 instanceof Just && _176 instanceof Just) {
                    return Prelude.compare(__dict_Ord_114)(_175.value0)(_176.value0);
                };
                if (_175 instanceof Nothing && _176 instanceof Nothing) {
                    return Prelude.EQ.value;
                };
                if (_175 instanceof Nothing) {
                    return Prelude.LT.value;
                };
                if (_176 instanceof Nothing) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var applyMaybe = function () {
        return new Prelude.Apply(function (_162) {
            return function (_163) {
                if (_162 instanceof Just) {
                    return Prelude["<$>"](functorMaybe())(_162.value0)(_163);
                };
                if (_162 instanceof Nothing) {
                    return Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        }, functorMaybe);
    };
    var bindMaybe = function () {
        return new Prelude.Bind(function (_166) {
            return function (_167) {
                if (_166 instanceof Just) {
                    return _167(_166.value0);
                };
                if (_166 instanceof Nothing) {
                    return Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        }, applyMaybe);
    };
    var applicativeMaybe = function () {
        return new Prelude.Applicative(applyMaybe, Just.create);
    };
    var monadMaybe = function () {
        return new Prelude.Monad(applicativeMaybe, bindMaybe);
    };
    var altMaybe = function () {
        return new Control_Alt.Alt(function (_164) {
            return function (_165) {
                if (_164 instanceof Nothing) {
                    return _165;
                };
                return _164;
            };
        }, functorMaybe);
    };
    var plusMaybe = function () {
        return new Control_Plus.Plus(altMaybe, Nothing.value);
    };
    var alternativeMaybe = function () {
        return new Control_Alternative.Alternative(plusMaybe, applicativeMaybe);
    };
    var monadPlusMaybe = function () {
        return new Control_MonadPlus.MonadPlus(alternativeMaybe, monadMaybe);
    };
    return {
        Nothing: Nothing, 
        Just: Just, 
        isNothing: isNothing, 
        isJust: isJust, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        applicativeMaybe: applicativeMaybe, 
        altMaybe: altMaybe, 
        plusMaybe: plusMaybe, 
        alternativeMaybe: alternativeMaybe, 
        bindMaybe: bindMaybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        extendMaybe: extendMaybe, 
        semigroupMaybe: semigroupMaybe, 
        showMaybe: showMaybe, 
        eqMaybe: eqMaybe, 
        ordMaybe: ordMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            return n < 0 || (n >= length(xs) || isInt(n)) ? Data_Maybe.Nothing.value : new Data_Maybe.Just(xs[n]);
        };
    };
    var take = function (n) {
        return slice(0)(n);
    };
    var tail = function (_179) {
        if (_179.length >= 1) {
            var _789 = _179.slice(1);
            return new Data_Maybe.Just(_789);
        };
        return Data_Maybe.Nothing.value;
    };
    var span = (function () {
        var go = function (__copy__195) {
            return function (__copy__196) {
                return function (__copy__197) {
                    var _195 = __copy__195;
                    var _196 = __copy__196;
                    var _197 = __copy__197;
                    tco: while (true) {
                        if (_197.length >= 1) {
                            var _794 = _197.slice(1);
                            if (_196(_197[0])) {
                                var __tco__195 = Prelude[":"](_197[0])(_195);
                                var __tco__196 = _196;
                                _195 = __tco__195;
                                _196 = __tco__196;
                                _197 = _794;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_195), 
                            rest: _197
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _795 = comp(x)(y);
                    if (_795 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_795 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_795 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_116) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_116))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = function () {
        return new Prelude.Semigroup(append);
    };
    var $$null = function (_181) {
        if (_181.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_188) {
        return function (_189) {
            if (_189.length === 0) {
                return [  ];
            };
            if (_189.length >= 1) {
                var _800 = _189.slice(1);
                return Prelude[":"](_189[0])(nubBy(_188)(filter(function (y) {
                    return !_188(_189[0])(y);
                })(_800)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_117) {
        return nubBy(Prelude["=="](__dict_Eq_117));
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var last = function (__copy__178) {
        var _178 = __copy__178;
        tco: while (true) {
            if (_178.length >= 1) {
                var _803 = _178.slice(1);
                if (_803.length === 0) {
                    return new Data_Maybe.Just(_178[0]);
                };
            };
            if (_178.length >= 1) {
                var _805 = _178.slice(1);
                _178 = _805;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var intersectBy = function (_185) {
        return function (_186) {
            return function (_187) {
                if (_186.length === 0) {
                    return [  ];
                };
                if (_187.length === 0) {
                    return [  ];
                };
                var el = function (x) {
                    return findIndex(_185(x))(_187) >= 0;
                };
                return filter(el)(_186);
            };
        };
    };
    var intersect = function (__dict_Eq_118) {
        return intersectBy(Prelude["=="](__dict_Eq_118));
    };
    var init = function (_180) {
        if (_180.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_180) - 1)(_180));
    };
    var head = function (_177) {
        if (_177.length >= 1) {
            var _812 = _177.slice(1);
            return new Data_Maybe.Just(_177[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__192) {
            return function (__copy__193) {
                return function (__copy__194) {
                    var _192 = __copy__192;
                    var _193 = __copy__193;
                    var _194 = __copy__194;
                    tco: while (true) {
                        if (_194.length === 0) {
                            return reverse(_192);
                        };
                        if (_194.length >= 1) {
                            var _817 = _194.slice(1);
                            var sp = span(_193(_194[0]))(_817);
                            var __tco__192 = Prelude[":"](Prelude[":"](_194[0])(sp.init))(_192);
                            var __tco__193 = _193;
                            _192 = __tco__192;
                            _193 = __tco__193;
                            _194 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    var group = function (__dict_Eq_119) {
        return function (xs) {
            return groupBy(Prelude["=="](__dict_Eq_119))(xs);
        };
    };
    var group$prime = function (__dict_Ord_120) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(group(__dict_Ord_120["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_120));
    };
    var functorArray = function () {
        return new Prelude.Functor(map);
    };
    var elemLastIndex = function (__dict_Eq_121) {
        return function (x) {
            return findLastIndex(Prelude["=="](__dict_Eq_121)(x));
        };
    };
    var elemIndex = function (__dict_Eq_122) {
        return function (x) {
            return findIndex(Prelude["=="](__dict_Eq_122)(x));
        };
    };
    var deleteBy = function (_182) {
        return function (_183) {
            return function (_184) {
                if (_184.length === 0) {
                    return [  ];
                };
                var _821 = findIndex(_182(_183))(_184);
                if (_821 < 0) {
                    return _184;
                };
                return deleteAt(_821)(1)(_184);
            };
        };
    };
    var $$delete = function (__dict_Eq_123) {
        return deleteBy(Prelude["=="](__dict_Eq_123));
    };
    var $bslash$bslash = function (__dict_Eq_124) {
        return function (xs) {
            return function (ys) {
                var go = function (__copy__190) {
                    return function (__copy__191) {
                        var _190 = __copy__190;
                        var _191 = __copy__191;
                        tco: while (true) {
                            if (_191.length === 0) {
                                return _190;
                            };
                            if (_190.length === 0) {
                                return [  ];
                            };
                            if (_191.length >= 1) {
                                var _825 = _191.slice(1);
                                var __tco__190 = $$delete(__dict_Eq_124)(_191[0])(_190);
                                _190 = __tco__190;
                                _191 = _825;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return go(xs)(ys);
            };
        };
    };
    var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
    var applicativeArray = function () {
        return new Prelude.Applicative(applyArray, singleton);
    };
    var applyArray = function () {
        return new Prelude.Apply(Prelude.ap(monadArray()), functorArray);
    };
    var monadArray = function () {
        return new Prelude.Monad(applicativeArray, bindArray);
    };
    var bindArray = function () {
        return new Prelude.Bind(Prelude.flip(concatMap), applyArray);
    };
    var altArray = function () {
        return new Control_Alt.Alt(append, functorArray);
    };
    var plusArray = function () {
        return new Control_Plus.Plus(altArray, [  ]);
    };
    var alternativeArray = function () {
        return new Control_Alternative.Alternative(plusArray, applicativeArray);
    };
    var monadPlusArray = function () {
        return new Control_MonadPlus.MonadPlus(alternativeArray, monadArray);
    };
    return {
        span: span, 
        groupBy: groupBy, 
        "group'": group$prime, 
        group: group, 
        sortBy: sortBy, 
        sort: sort, 
        nubBy: nubBy, 
        nub: nub, 
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        concatMap: concatMap, 
        intersect: intersect, 
        intersectBy: intersectBy, 
        "\\\\": $bslash$bslash, 
        "delete": $$delete, 
        deleteBy: deleteBy, 
        updateAt: updateAt, 
        deleteAt: deleteAt, 
        insertAt: insertAt, 
        take: take, 
        drop: drop, 
        reverse: reverse, 
        concat: concat, 
        append: append, 
        elemLastIndex: elemLastIndex, 
        elemIndex: elemIndex, 
        findLastIndex: findLastIndex, 
        findIndex: findIndex, 
        length: length, 
        catMaybes: catMaybes, 
        mapMaybe: mapMaybe, 
        map: map, 
        "null": $$null, 
        init: init, 
        tail: tail, 
        last: last, 
        head: head, 
        singleton: singleton, 
        snoc: snoc, 
        "..": $dot$dot, 
        "!!": $bang$bang, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray, 
        altArray: altArray, 
        plusArray: plusArray, 
        alternativeArray: alternativeArray, 
        monadPlusArray: monadPlusArray
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Function = PS.Data_Function;
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    function parseJSONImpl(left, right, str) {  try {    return right(JSON.parse(str));  } catch (e) {    return left(e.toString());  } };
    function toForeign(value) {  return value;};
    function unsafeFromForeign(value) {  return value;};
    function typeOf(value) {  return typeof value;};
    function tagOf(value) {  return Object.prototype.toString.call(value).slice(8, -1);};
    function isNull(value) {  return value === null;};
    function isUndefined(value) {  return value === undefined;};
    function isArray(value) {  return Array.isArray(value);};
    var unsafeReadPrim = function (_198) {
        return function (_199) {
            if (tagOf(_199) === _198) {
                return Prelude.pure(Data_Either.applicativeEither())(unsafeFromForeign(_199));
            };
            return new Data_Either.Left(new TypeMismatch(_198, tagOf(_199)));
        };
    };
    var showForeignError = function () {
        return new Prelude.Show(function (_201) {
            if (_201 instanceof TypeMismatch) {
                return "Type mismatch: expected " + (_201.value0 + (", found " + _201.value1));
            };
            if (_201 instanceof ErrorAtIndex) {
                return "Error at array index " + (Prelude.show(Prelude.showNumber())(_201.value0) + (": " + Prelude.show(showForeignError())(_201.value1)));
            };
            if (_201 instanceof ErrorAtProperty) {
                return "Error at property " + (Prelude.show(Prelude.showString())(_201.value0) + (": " + Prelude.show(showForeignError())(_201.value1)));
            };
            if (_201 instanceof JSONError) {
                return "JSON error: " + _201.value0;
            };
            throw new Error("Failed pattern match");
        });
    };
    var readString = unsafeReadPrim("String");
    var readNumber = unsafeReadPrim("Number");
    var readBoolean = unsafeReadPrim("Boolean");
    var readArray = function (_200) {
        if (isArray(_200)) {
            return Prelude.pure(Data_Either.applicativeEither())(unsafeFromForeign(_200));
        };
        return new Data_Either.Left(new TypeMismatch("array", tagOf(_200)));
    };
    var parseJSON = function (json) {
        return parseJSONImpl(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Either.Left.create)(JSONError.create), Data_Either.Right.create, json);
    };
    return {
        TypeMismatch: TypeMismatch, 
        ErrorAtIndex: ErrorAtIndex, 
        ErrorAtProperty: ErrorAtProperty, 
        JSONError: JSONError, 
        readArray: readArray, 
        readNumber: readNumber, 
        readBoolean: readBoolean, 
        readString: readString, 
        isArray: isArray, 
        isUndefined: isUndefined, 
        isNull: isNull, 
        tagOf: tagOf, 
        typeOf: typeOf, 
        unsafeFromForeign: unsafeFromForeign, 
        toForeign: toForeign, 
        parseJSON: parseJSON, 
        showForeignError: showForeignError
    };
})();
var PS = PS || {};
PS.Control_Monad_JQuery = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function ready(func) {   return function () {     jQuery(document).ready(func);   }; };
    function select(selector) {   return function () {     return jQuery(selector);   }; };
    function create(html) {   return function () {     return jQuery(html);   }; };
    function setAttr(attr) {   return function(val) {     return function(ob) {       return function () {         return ob.attr(attr, val);      };     };   }; };
    function attr(attrs) {   return function(ob) {     return function () {       return ob.attr(attrs);    };   }; };
    function css(props) {   return function(ob) {     return function () {       return ob.css(props);     };   }; };
    function addClass(cls) {   return function(ob) {     return function () {       return ob.addClass(cls);     };   }; };
    function removeClass(cls) {   return function(ob) {     return function () {       return ob.removeClass(cls);     };   }; };
    function setProp(p) {   return function(val) {     return function(ob) {       return function () {         return ob.prop(p, val);      };     };   }; };
    function getProp(p) {   return function(ob) {     return function () {       return ob.prop(p);    };   }; };
    function append(ob1) {   return function(ob) {     return function () {       return ob.append(ob1);     };   }; };
    function appendAtIndex(i) {   return function(ob1) {     return function(ob) {       return function () {         var children = ob.children();        if (children.length > 0) {          if (i <= 0) {             ob.prepend(ob1);          } else if (i >= children.length) {             ob.append(ob1);          } else {             ob1.insertBefore(jQuery(children[i]));          }          return ob;        } else {          return ob.append(ob1);         }      };     };   }; };
    function remove(ob) {   return function () {     return ob.remove();   }; };
    function clear(ob) {   return function () {     return ob.empty();   }; };
    function before(ob) {   return function(ob1) {     return function () {       return ob1.before(ob);     };   }; };
    function appendText(s) {   return function(ob) {     return function () {       return ob.append(s);     };   }; };
    function body() {   return jQuery(document.body); };
    function getText(ob) {   return function() {     return ob.text();   }; };
    function setText(text) {   return function(ob) {     return function() {       return ob.text(text);     };  };};
    function getValue(ob) {   return function() {     return ob.val();   }; };
    function setValue(val) {   return function(ob) {     return function() {       return ob.val(val);     };   }; };
    function on(evt) {   return function(act) {     return function(ob) {       return function() {         return ob.on(evt, function(e) {           act(e)(jQuery(this))();         });       };     };   }; };
    function on$prime(evt) {   return function(sel) {     return function(act) {       return function(ob) {         return function() {           return ob.on(evt, function(e) {             act(e)(jQuery(this))();           });         };       };     };   }; };
    function preventDefault(e) {   return function() {     e.preventDefault();  } };
    function stopPropagation(e) {   return function() {     e.stopPropagation();  } };
    function stopImmediatePropagation(e) {   return function() {     e.stopImmediatePropagation();  } };
    return {
        stopImmediatePropagation: stopImmediatePropagation, 
        stopPropagation: stopPropagation, 
        preventDefault: preventDefault, 
        "on'": on$prime, 
        on: on, 
        setValue: setValue, 
        getValue: getValue, 
        setText: setText, 
        getText: getText, 
        body: body, 
        appendText: appendText, 
        before: before, 
        clear: clear, 
        remove: remove, 
        appendAtIndex: appendAtIndex, 
        append: append, 
        getProp: getProp, 
        setProp: setProp, 
        removeClass: removeClass, 
        addClass: addClass, 
        css: css, 
        attr: attr, 
        setAttr: setAttr, 
        create: create, 
        select: select, 
        ready: ready
    };
})();
var PS = PS || {};
PS.Example = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Sammy = PS.Sammy;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_JQuery = PS.Control_Monad_JQuery;
    var postEventR = function (context) {
        return Sammy.trigger(context)("myEvent");
    };
    var myEventHandler1 = function (ctx) {
        return Debug_Trace.trace("myEvent1 triggered by get");
    };
    var myEventHandler = function (ctx) {
        return Debug_Trace.trace("myEvent triggered");
    };
    var getR = function (context) {
        return function __do() {
            var _10 = Sammy.params(context)("foo")();
            var _9 = Control_Monad_JQuery.select("#main")();
            var _8 = Control_Monad_JQuery.create("<div id='my foo'>")();
            Sammy.trigger(context)("myEvent1")();
            Control_Monad_JQuery.appendText(Prelude.show(Prelude.showArray(Prelude.showString()))(_10))(_8)();
            return Control_Monad_JQuery.append(_8)(_9)();
        };
    };
    var main = function __do() {
        var _7 = Sammy.sammy("#main")();
        Sammy.get(_7)("#/")(getR)();
        Sammy.post(_7)("#/event")(postEventR)();
        Sammy.bindEvent(_7)("myEvent")(myEventHandler)();
        Sammy.bindEvent(_7)("myEvent1")(myEventHandler1)();
        return Sammy.runApp(_7)("#/")();
    };
    return {
        main: main
    };
})();
var PS = PS || {};
PS.Data_Foreign_Index = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Either = PS.Data_Either;
    var Data_Foreign = PS.Data_Foreign;
    function Index($bang, errorAt, hasOwnProperty, hasProperty) {
        this["!"] = $bang;
        this.errorAt = errorAt;
        this.hasOwnProperty = hasOwnProperty;
        this.hasProperty = hasProperty;
    };
    function unsafeReadPropImpl(f, s, key, value) {   if (value && typeof value === 'object') {    return s(value[key]);  } else {    return f;  }};
    function unsafeHasOwnProperty(prop, value) {  return value.hasOwnProperty(prop);};
    function unsafeHasProperty(prop, value) {  return prop in value;};
    var $bang = function (dict) {
        return dict["!"];
    };
    var unsafeReadProp = function (k) {
        return function (value) {
            return unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither()), k, value);
        };
    };
    var prop = unsafeReadProp;
    var index = unsafeReadProp;
    var hasPropertyImpl = function (_204) {
        return function (_205) {
            if (Data_Foreign.isNull(_205)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_205)) {
                return false;
            };
            if (Data_Foreign.typeOf(_205) === "object" || Data_Foreign.typeOf(_205) === "function") {
                return unsafeHasProperty(_204, _205);
            };
            return false;
        };
    };
    var hasProperty = function (dict) {
        return dict.hasProperty;
    };
    var hasOwnPropertyImpl = function (_202) {
        return function (_203) {
            if (Data_Foreign.isNull(_203)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_203)) {
                return false;
            };
            if (Data_Foreign.typeOf(_203) === "object" || Data_Foreign.typeOf(_203) === "function") {
                return unsafeHasOwnProperty(_202, _203);
            };
            return false;
        };
    };
    var indexNumber = function () {
        return new Index(Prelude.flip(index), Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl);
    };
    var indexString = function () {
        return new Index(Prelude.flip(prop), Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl);
    };
    var hasOwnProperty = function (dict) {
        return dict.hasOwnProperty;
    };
    var errorAt = function (dict) {
        return dict.errorAt;
    };
    return {
        Index: Index, 
        errorAt: errorAt, 
        hasOwnProperty: hasOwnProperty, 
        hasProperty: hasProperty, 
        "!": $bang, 
        index: index, 
        prop: prop, 
        indexString: indexString, 
        indexNumber: indexNumber
    };
})();
var PS = PS || {};
PS.Data_Foreign_Keys = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    function unsafeKeys(value) {   return Object.keys(value);};
    var keys = function (_206) {
        if (Data_Foreign.isNull(_206)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "null"));
        };
        if (Data_Foreign.isUndefined(_206)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "undefined"));
        };
        if (Data_Foreign.typeOf(_206) === "object") {
            return Data_Either.Right.create(unsafeKeys(_206));
        };
        return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(_206)));
    };
    return {
        keys: keys
    };
})();
var PS = PS || {};
PS.Data_Foreign_Null = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Null = {
        create: function (value) {
            return value;
        }
    };
    var runNull = function (_207) {
        return _207;
    };
    var readNull = function (_208) {
        return function (_209) {
            if (Data_Foreign.isNull(_209)) {
                return Prelude.pure(Data_Either.applicativeEither())(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither())(Prelude["<<<"](Prelude.semigroupoidArr())(Null.create)(Data_Maybe.Just.create))(_208(_209));
        };
    };
    return {
        Null: Null, 
        readNull: readNull, 
        runNull: runNull
    };
})();
var PS = PS || {};
PS.Data_Foreign_NullOrUndefined = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var NullOrUndefined = {
        create: function (value) {
            return value;
        }
    };
    var runNullOrUndefined = function (_210) {
        return _210;
    };
    var readNullOrUndefined = function (_211) {
        return function (_212) {
            if (Data_Foreign.isNull(_212) || Data_Foreign.isUndefined(_212)) {
                return Prelude.pure(Data_Either.applicativeEither())(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither())(Prelude["<<<"](Prelude.semigroupoidArr())(NullOrUndefined.create)(Data_Maybe.Just.create))(_211(_212));
        };
    };
    return {
        NullOrUndefined: NullOrUndefined, 
        readNullOrUndefined: readNullOrUndefined, 
        runNullOrUndefined: runNullOrUndefined
    };
})();
var PS = PS || {};
PS.Data_Foreign_Undefined = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Undefined = {
        create: function (value) {
            return value;
        }
    };
    var runUndefined = function (_213) {
        return _213;
    };
    var readUndefined = function (_214) {
        return function (_215) {
            if (Data_Foreign.isUndefined(_215)) {
                return Prelude.pure(Data_Either.applicativeEither())(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither())(Prelude["<<<"](Prelude.semigroupoidArr())(Undefined.create)(Data_Maybe.Just.create))(_214(_215));
        };
    };
    return {
        Undefined: Undefined, 
        readUndefined: readUndefined, 
        runUndefined: runUndefined
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_216) {
        if (_216 instanceof Data_Maybe.Just) {
            return _216.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var tail = function (_218) {
        if (_218.length >= 1) {
            var _859 = _218.slice(1);
            return _859;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr())(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    var head = function (_217) {
        if (_217.length >= 1) {
            var _862 = _217.slice(1);
            return _217[0];
        };
        throw new Error("Failed pattern match");
    };
    return {
        init: init, 
        last: last, 
        tail: tail, 
        head: head
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidUnit = function () {
        return new Monoid(Prelude.semigroupUnit, Prelude.unit);
    };
    var monoidString = function () {
        return new Monoid(Prelude.semigroupString, "");
    };
    var monoidMaybe = function (__dict_Semigroup_125) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_125);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = function () {
        return new Monoid(Data_Array.semigroupArray, [  ]);
    };
    var mempty = function (dict) {
        return dict.mempty;
    };
    var monoidArr = function (__dict_Monoid_126) {
        return new Monoid(function () {
            return Prelude.semigroupArr(__dict_Monoid_126["__superclass_Prelude.Semigroup_0"]());
        }, Prelude["const"](mempty(__dict_Monoid_126)));
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidString: monoidString, 
        monoidArray: monoidArray, 
        monoidUnit: monoidUnit, 
        monoidArr: monoidArr, 
        monoidMaybe: monoidMaybe
    };
})();
var PS = PS || {};
PS.Data_Monoid_All = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var All = {
        create: function (value) {
            return value;
        }
    };
    var showAll = function () {
        return new Prelude.Show(function (_224) {
            return "All (" + (Prelude.show(Prelude.showBoolean())(_224) + ")");
        });
    };
    var semigroupAll = function () {
        return new Prelude.Semigroup(function (_225) {
            return function (_226) {
                return _225 && _226;
            };
        });
    };
    var runAll = function (_219) {
        return _219;
    };
    var monoidAll = function () {
        return new Data_Monoid.Monoid(semigroupAll, true);
    };
    var eqAll = function () {
        return new Prelude.Eq(function (_222) {
            return function (_223) {
                return _222 !== _223;
            };
        }, function (_220) {
            return function (_221) {
                return _220 === _221;
            };
        });
    };
    return {
        All: All, 
        runAll: runAll, 
        eqAll: eqAll, 
        showAll: showAll, 
        semigroupAll: semigroupAll, 
        monoidAll: monoidAll
    };
})();
var PS = PS || {};
PS.Data_Monoid_Any = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Any = {
        create: function (value) {
            return value;
        }
    };
    var showAny = function () {
        return new Prelude.Show(function (_232) {
            return "Any (" + (Prelude.show(Prelude.showBoolean())(_232) + ")");
        });
    };
    var semigroupAny = function () {
        return new Prelude.Semigroup(function (_233) {
            return function (_234) {
                return _233 || _234;
            };
        });
    };
    var runAny = function (_227) {
        return _227;
    };
    var monoidAny = function () {
        return new Data_Monoid.Monoid(semigroupAny, false);
    };
    var eqAny = function () {
        return new Prelude.Eq(function (_230) {
            return function (_231) {
                return _230 !== _231;
            };
        }, function (_228) {
            return function (_229) {
                return _228 === _229;
            };
        });
    };
    return {
        Any: Any, 
        runAny: runAny, 
        eqAny: eqAny, 
        showAny: showAny, 
        semigroupAny: semigroupAny, 
        monoidAny: monoidAny
    };
})();
var PS = PS || {};
PS.Data_Monoid_Dual = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Dual = {
        create: function (value) {
            return value;
        }
    };
    var showDual = function (__dict_Show_127) {
        return new Prelude.Show(function (_242) {
            return "Dual (" + (Prelude.show(__dict_Show_127)(_242) + ")");
        });
    };
    var semigroupDual = function (__dict_Semigroup_128) {
        return new Prelude.Semigroup(function (_243) {
            return function (_244) {
                return Prelude["<>"](__dict_Semigroup_128)(_244)(_243);
            };
        });
    };
    var runDual = function (_235) {
        return _235;
    };
    var monoidDual = function (__dict_Monoid_130) {
        return new Data_Monoid.Monoid(function () {
            return semigroupDual(__dict_Monoid_130["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_130));
    };
    var eqDual = function (__dict_Eq_131) {
        return new Prelude.Eq(function (_238) {
            return function (_239) {
                return Prelude["/="](__dict_Eq_131)(_238)(_239);
            };
        }, function (_236) {
            return function (_237) {
                return Prelude["=="](__dict_Eq_131)(_236)(_237);
            };
        });
    };
    var ordDual = function (__dict_Ord_129) {
        return new Prelude.Ord(function () {
            return eqDual(__dict_Ord_129["__superclass_Prelude.Eq_0"]());
        }, function (_240) {
            return function (_241) {
                return Prelude.compare(__dict_Ord_129)(_240)(_241);
            };
        });
    };
    return {
        Dual: Dual, 
        runDual: runDual, 
        eqDual: eqDual, 
        ordDual: ordDual, 
        showDual: showDual, 
        semigroupDual: semigroupDual, 
        monoidDual: monoidDual
    };
})();
var PS = PS || {};
PS.Data_Monoid_Endo = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Endo = {
        create: function (value) {
            return value;
        }
    };
    var semigroupEndo = function () {
        return new Prelude.Semigroup(function (_246) {
            return function (_247) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(_246)(_247);
            };
        });
    };
    var runEndo = function (_245) {
        return _245;
    };
    var monoidEndo = function () {
        return new Data_Monoid.Monoid(semigroupEndo, Prelude.id(Prelude.categoryArr()));
    };
    return {
        Endo: Endo, 
        runEndo: runEndo, 
        semigroupEndo: semigroupEndo, 
        monoidEndo: monoidEndo
    };
})();
var PS = PS || {};
PS.Data_Monoid_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Product = {
        create: function (value) {
            return value;
        }
    };
    var showProduct = function () {
        return new Prelude.Show(function (_255) {
            return "Product (" + (Prelude.show(Prelude.showNumber())(_255) + ")");
        });
    };
    var semigroupProduct = function () {
        return new Prelude.Semigroup(function (_256) {
            return function (_257) {
                return _256 * _257;
            };
        });
    };
    var runProduct = function (_248) {
        return _248;
    };
    var monoidProduct = function () {
        return new Data_Monoid.Monoid(semigroupProduct, 1);
    };
    var eqProduct = function () {
        return new Prelude.Eq(function (_251) {
            return function (_252) {
                return _251 !== _252;
            };
        }, function (_249) {
            return function (_250) {
                return _249 === _250;
            };
        });
    };
    var ordProduct = function () {
        return new Prelude.Ord(eqProduct, function (_253) {
            return function (_254) {
                return Prelude.compare(Prelude.ordNumber())(_253)(_254);
            };
        });
    };
    return {
        Product: Product, 
        runProduct: runProduct, 
        eqProduct: eqProduct, 
        ordProduct: ordProduct, 
        showProduct: showProduct, 
        semigroupProduct: semigroupProduct, 
        monoidProduct: monoidProduct
    };
})();
var PS = PS || {};
PS.Data_Monoid_Sum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Sum = {
        create: function (value) {
            return value;
        }
    };
    var showSum = function () {
        return new Prelude.Show(function (_265) {
            return "Sum (" + (Prelude.show(Prelude.showNumber())(_265) + ")");
        });
    };
    var semigroupSum = function () {
        return new Prelude.Semigroup(function (_266) {
            return function (_267) {
                return _266 + _267;
            };
        });
    };
    var runSum = function (_258) {
        return _258;
    };
    var monoidSum = function () {
        return new Data_Monoid.Monoid(semigroupSum, 0);
    };
    var eqSum = function () {
        return new Prelude.Eq(function (_261) {
            return function (_262) {
                return _261 !== _262;
            };
        }, function (_259) {
            return function (_260) {
                return _259 === _260;
            };
        });
    };
    var ordSum = function () {
        return new Prelude.Ord(eqSum, function (_263) {
            return function (_264) {
                return Prelude.compare(Prelude.ordNumber())(_263)(_264);
            };
        });
    };
    return {
        Sum: Sum, 
        runSum: runSum, 
        eqSum: eqSum, 
        ordSum: ordSum, 
        showSum: showSum, 
        semigroupSum: semigroupSum, 
        monoidSum: monoidSum
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    var zip = Data_Array.zipWith(Tuple.create);
    var unzip = function (_272) {
        if (_272.length >= 1) {
            var _919 = _272.slice(1);
            var _913 = unzip(_919);
            return new Tuple(Prelude[":"]((_272[0]).value0)(_913.value0), Prelude[":"]((_272[0]).value1)(_913.value1));
        };
        if (_272.length === 0) {
            return new Tuple([  ], [  ]);
        };
        throw new Error("Failed pattern match");
    };
    var uncurry = function (_270) {
        return function (_271) {
            return _270(_271.value0)(_271.value1);
        };
    };
    var swap = function (_273) {
        return new Tuple(_273.value1, _273.value0);
    };
    var snd = function (_269) {
        return _269.value1;
    };
    var showTuple = function (__dict_Show_132) {
        return function (__dict_Show_133) {
            return new Prelude.Show(function (_274) {
                return "Tuple (" + (Prelude.show(__dict_Show_132)(_274.value0) + (") (" + (Prelude.show(__dict_Show_133)(_274.value1) + ")")));
            });
        };
    };
    var semigroupoidTuple = function () {
        return new Prelude.Semigroupoid(function (_279) {
            return function (_280) {
                return new Tuple(_280.value0, _279.value1);
            };
        });
    };
    var semigroupTuple = function (__dict_Semigroup_134) {
        return function (__dict_Semigroup_135) {
            return new Prelude.Semigroup(function (_281) {
                return function (_282) {
                    return new Tuple(Prelude["<>"](__dict_Semigroup_134)(_281.value0)(_282.value0), Prelude["<>"](__dict_Semigroup_135)(_281.value1)(_282.value1));
                };
            });
        };
    };
    var monoidTuple = function (__dict_Monoid_138) {
        return function (__dict_Monoid_139) {
            return new Data_Monoid.Monoid(function () {
                return semigroupTuple(__dict_Monoid_138["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_139["__superclass_Prelude.Semigroup_0"]());
            }, new Tuple(Data_Monoid.mempty(__dict_Monoid_138), Data_Monoid.mempty(__dict_Monoid_139)));
        };
    };
    var functorTuple = function () {
        return new Prelude.Functor(function (_283) {
            return function (_284) {
                return new Tuple(_284.value0, _283(_284.value1));
            };
        });
    };
    var fst = function (_268) {
        return _268.value0;
    };
    var lazyLazy1Tuple = function (__dict_Lazy1_141) {
        return function (__dict_Lazy1_142) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer1(__dict_Lazy1_141)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer1(__dict_Lazy1_142)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyLazy2Tuple = function (__dict_Lazy2_143) {
        return function (__dict_Lazy2_144) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer2(__dict_Lazy2_143)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer2(__dict_Lazy2_144)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyTuple = function (__dict_Lazy_145) {
        return function (__dict_Lazy_146) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer(__dict_Lazy_145)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer(__dict_Lazy_146)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var extendTuple = function () {
        return new Control_Extend.Extend(function (_289) {
            return function (_290) {
                return new Tuple(_290.value0, _289(_290));
            };
        }, functorTuple);
    };
    var eqTuple = function (__dict_Eq_147) {
        return function (__dict_Eq_148) {
            return new Prelude.Eq(function (t1) {
                return function (t2) {
                    return !Prelude["=="](eqTuple(__dict_Eq_147)(__dict_Eq_148))(t1)(t2);
                };
            }, function (_275) {
                return function (_276) {
                    return Prelude["=="](__dict_Eq_147)(_275.value0)(_276.value0) && Prelude["=="](__dict_Eq_148)(_275.value1)(_276.value1);
                };
            });
        };
    };
    var ordTuple = function (__dict_Ord_136) {
        return function (__dict_Ord_137) {
            return new Prelude.Ord(function () {
                return eqTuple(__dict_Ord_136["__superclass_Prelude.Eq_0"]())(__dict_Ord_137["__superclass_Prelude.Eq_0"]());
            }, function (_277) {
                return function (_278) {
                    var _964 = Prelude.compare(__dict_Ord_136)(_277.value0)(_278.value0);
                    if (_964 instanceof Prelude.EQ) {
                        return Prelude.compare(__dict_Ord_137)(_277.value1)(_278.value1);
                    };
                    return _964;
                };
            });
        };
    };
    var curry = function (f) {
        return function (a) {
            return function (b) {
                return f(new Tuple(a, b));
            };
        };
    };
    var comonadTuple = function () {
        return new Control_Comonad.Comonad(extendTuple, snd);
    };
    var applyTuple = function (__dict_Semigroup_150) {
        return new Prelude.Apply(function (_285) {
            return function (_286) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_150)(_285.value0)(_286.value0), _285.value1(_286.value1));
            };
        }, functorTuple);
    };
    var bindTuple = function (__dict_Semigroup_149) {
        return new Prelude.Bind(function (_287) {
            return function (_288) {
                var _977 = _288(_287.value1);
                return new Tuple(Prelude["<>"](__dict_Semigroup_149)(_287.value0)(_977.value0), _977.value1);
            };
        }, function () {
            return applyTuple(__dict_Semigroup_149);
        });
    };
    var applicativeTuple = function (__dict_Monoid_151) {
        return new Prelude.Applicative(function () {
            return applyTuple(__dict_Monoid_151["__superclass_Prelude.Semigroup_0"]());
        }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_151)));
    };
    var monadTuple = function (__dict_Monoid_140) {
        return new Prelude.Monad(function () {
            return applicativeTuple(__dict_Monoid_140);
        }, function () {
            return bindTuple(__dict_Monoid_140["__superclass_Prelude.Semigroup_0"]());
        });
    };
    return {
        Tuple: Tuple, 
        swap: swap, 
        unzip: unzip, 
        zip: zip, 
        uncurry: uncurry, 
        curry: curry, 
        snd: snd, 
        fst: fst, 
        showTuple: showTuple, 
        eqTuple: eqTuple, 
        ordTuple: ordTuple, 
        semigroupoidTuple: semigroupoidTuple, 
        semigroupTuple: semigroupTuple, 
        monoidTuple: monoidTuple, 
        functorTuple: functorTuple, 
        applyTuple: applyTuple, 
        applicativeTuple: applicativeTuple, 
        bindTuple: bindTuple, 
        monadTuple: monadTuple, 
        extendTuple: extendTuple, 
        comonadTuple: comonadTuple, 
        lazyTuple: lazyTuple, 
        lazyLazy1Tuple: lazyLazy1Tuple, 
        lazyLazy2Tuple: lazyLazy2Tuple
    };
})();
var PS = PS || {};
PS.Control_Arrow = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    function Arrow(__superclass_Prelude$dotCategory_0, arr, first) {
        this["__superclass_Prelude.Category_0"] = __superclass_Prelude$dotCategory_0;
        this.arr = arr;
        this.first = first;
    };
    function ArrowZero(azero) {
        this.azero = azero;
    };
    function ArrowPlus($less$plus$greater) {
        this["<+>"] = $less$plus$greater;
    };
    var $less$plus$greater = function (dict) {
        return dict["<+>"];
    };
    var first = function (dict) {
        return dict.first;
    };
    var azero = function (dict) {
        return dict.azero;
    };
    var arrowFunction = function () {
        return new Arrow(Prelude.categoryArr, function (f) {
            return f;
        }, function (_291) {
            return function (_292) {
                return new Data_Tuple.Tuple(_291(_292.value0), _292.value1);
            };
        });
    };
    var arr = function (dict) {
        return dict.arr;
    };
    var second = function (__dict_Arrow_152) {
        return function (f) {
            return Prelude[">>>"]((__dict_Arrow_152["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(arr(__dict_Arrow_152)(Data_Tuple.swap))(Prelude[">>>"]((__dict_Arrow_152["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(first(__dict_Arrow_152)(f))(arr(__dict_Arrow_152)(Data_Tuple.swap)));
        };
    };
    var $times$times$times = function (__dict_Arrow_153) {
        return function (f) {
            return function (g) {
                return Prelude[">>>"]((__dict_Arrow_153["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(first(__dict_Arrow_153)(f))(second(__dict_Arrow_153)(g));
            };
        };
    };
    var $amp$amp$amp = function (__dict_Arrow_154) {
        return function (f) {
            return function (g) {
                return Prelude[">>>"]((__dict_Arrow_154["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(arr(__dict_Arrow_154)(function (b) {
                    return new Data_Tuple.Tuple(b, b);
                }))($times$times$times(__dict_Arrow_154)(f)(g));
            };
        };
    };
    return {
        ArrowPlus: ArrowPlus, 
        ArrowZero: ArrowZero, 
        Arrow: Arrow, 
        "<+>": $less$plus$greater, 
        azero: azero, 
        "&&&": $amp$amp$amp, 
        "***": $times$times$times, 
        second: second, 
        first: first, 
        arr: arr, 
        arrowFunction: arrowFunction
    };
})();
var PS = PS || {};
PS.Control_Arrow_Kleisli = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Arrow = PS.Control_Arrow;
    var Data_Tuple = PS.Data_Tuple;
    var Kleisli = {
        create: function (value) {
            return value;
        }
    };
    var semigroupoidKleisli = function (__dict_Monad_155) {
        return new Prelude.Semigroupoid(function (_295) {
            return function (_296) {
                return function (b) {
                    return Prelude[">>="](__dict_Monad_155["__superclass_Prelude.Bind_1"]())(_296(b))(_295);
                };
            };
        });
    };
    var runKleisli = function (_294) {
        return _294;
    };
    var categoryKleisli = function (__dict_Monad_156) {
        return new Prelude.Category(function () {
            return semigroupoidKleisli(__dict_Monad_156);
        }, Prelude["return"](__dict_Monad_156));
    };
    var arrowKleisli = function (__dict_Monad_157) {
        return new Control_Arrow.Arrow(function () {
            return categoryKleisli(__dict_Monad_157);
        }, function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["return"](__dict_Monad_157))(f);
        }, function (_297) {
            return function (_293) {
                return Prelude[">>="](__dict_Monad_157["__superclass_Prelude.Bind_1"]())(_297(_293.value0))(function (c) {
                    return Prelude["return"](__dict_Monad_157)(new Data_Tuple.Tuple(c, _293.value1));
                });
            };
        });
    };
    return {
        Kleisli: Kleisli, 
        runKleisli: runKleisli, 
        semigroupoidKleisli: semigroupoidKleisli, 
        categoryKleisli: categoryKleisli, 
        arrowKleisli: arrowKleisli
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Apply = PS.Control_Apply;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ErrorT = {
        create: function (value) {
            return value;
        }
    };
    var runErrorT = function (_298) {
        return _298;
    };
    var monadTransErrorT = function (__dict_Error_160) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_161) {
            return function (m) {
                return ErrorT.create(Prelude[">>="](__dict_Monad_161["__superclass_Prelude.Bind_1"]())(m)(function (_12) {
                    return Prelude["return"](__dict_Monad_161)(new Data_Either.Right(_12));
                }));
            };
        });
    };
    var mapErrorT = function (f) {
        return function (m) {
            return ErrorT.create(f(runErrorT(m)));
        };
    };
    var liftPassError = function (__dict_Monad_166) {
        return function (pass) {
            return mapErrorT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_166["__superclass_Prelude.Bind_1"]())(m)(function (_14) {
                    return Prelude["return"](__dict_Monad_166)((function () {
                        if (_14 instanceof Data_Either.Left) {
                            return new Data_Tuple.Tuple(new Data_Either.Left(_14.value0), Prelude.id(Prelude.categoryArr()));
                        };
                        if (_14 instanceof Data_Either.Right) {
                            return new Data_Tuple.Tuple(new Data_Either.Right(_14.value0.value0), _14.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenError = function (__dict_Monad_167) {
        return function (listen) {
            return mapErrorT(function (m) {
                return Prelude[">>="](__dict_Monad_167["__superclass_Prelude.Bind_1"]())(listen(m))(function (_13) {
                    return Prelude["return"](__dict_Monad_167)(Prelude["<$>"](Data_Either.functorEither())(function (r) {
                        return new Data_Tuple.Tuple(r, _13.value1);
                    })(_13.value0));
                });
            });
        };
    };
    var liftCallCCError = function (callCC) {
        return function (f) {
            return ErrorT.create(callCC(function (c) {
                return runErrorT(f(function (a) {
                    return ErrorT.create(c(new Data_Either.Right(a)));
                }));
            }));
        };
    };
    var functorErrorT = function (__dict_Functor_168) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(ErrorT.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"](__dict_Functor_168)(Prelude["<$>"](Data_Either.functorEither())(f)))(runErrorT));
        });
    };
    var applyErrorT = function (__dict_Apply_171) {
        return new Prelude.Apply(function (_299) {
            return function (_300) {
                return ErrorT.create(Prelude["<*>"](__dict_Apply_171)(Prelude["<$>"](__dict_Apply_171["__superclass_Prelude.Functor_0"]())(Control_Apply.lift2(Data_Either.applyEither())(Prelude["$"]))(_299))(_300));
            };
        }, function () {
            return functorErrorT(__dict_Apply_171["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindErrorT = function (__dict_Monad_169) {
        return function (__dict_Error_170) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return ErrorT.create(Prelude[">>="](__dict_Monad_169["__superclass_Prelude.Bind_1"]())(runErrorT(m))(function (_11) {
                        if (_11 instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_169)(new Data_Either.Left(_11.value0));
                        };
                        if (_11 instanceof Data_Either.Right) {
                            return runErrorT(f(_11.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function () {
                return applyErrorT((__dict_Monad_169["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeErrorT = function (__dict_Applicative_172) {
        return new Prelude.Applicative(function () {
            return applyErrorT(__dict_Applicative_172["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return ErrorT.create(Prelude.pure(__dict_Applicative_172)(new Data_Either.Right(a)));
        });
    };
    var monadErrorT = function (__dict_Monad_164) {
        return function (__dict_Error_165) {
            return new Prelude.Monad(function () {
                return applicativeErrorT(__dict_Monad_164["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindErrorT(__dict_Monad_164)(__dict_Error_165);
            });
        };
    };
    var altErrorT = function (__dict_Monad_175) {
        return function (__dict_Error_176) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return ErrorT.create(Prelude[">>="](__dict_Monad_175["__superclass_Prelude.Bind_1"]())(runErrorT(x))(function (e) {
                        if (e instanceof Data_Either.Left) {
                            return runErrorT(y);
                        };
                        return Prelude["return"](__dict_Monad_175)(e);
                    }));
                };
            }, function () {
                return functorErrorT(((__dict_Monad_175["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusErrorT = function (__dict_Monad_158) {
        return function (__dict_Error_159) {
            return new Control_Plus.Plus(function () {
                return altErrorT(__dict_Monad_158)(__dict_Error_159);
            }, Prelude["return"](__dict_Monad_158)(Data_Either.Left.create(Control_Monad_Error.strMsg(__dict_Error_159)("No alternative"))));
        };
    };
    var alternativeErrorT = function (__dict_Monad_173) {
        return function (__dict_Error_174) {
            return new Control_Alternative.Alternative(function () {
                return plusErrorT(__dict_Monad_173)(__dict_Error_174);
            }, function () {
                return applicativeErrorT(__dict_Monad_173["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusErrorT = function (__dict_Monad_162) {
        return function (__dict_Error_163) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeErrorT(__dict_Monad_162)(__dict_Error_163);
            }, function () {
                return monadErrorT(__dict_Monad_162)(__dict_Error_163);
            });
        };
    };
    return {
        ErrorT: ErrorT, 
        liftCallCCError: liftCallCCError, 
        liftPassError: liftPassError, 
        liftListenError: liftListenError, 
        mapErrorT: mapErrorT, 
        runErrorT: runErrorT, 
        functorErrorT: functorErrorT, 
        applyErrorT: applyErrorT, 
        applicativeErrorT: applicativeErrorT, 
        altErrorT: altErrorT, 
        plusErrorT: plusErrorT, 
        alternativeErrorT: alternativeErrorT, 
        bindErrorT: bindErrorT, 
        monadErrorT: monadErrorT, 
        monadPlusErrorT: monadPlusErrorT, 
        monadTransErrorT: monadTransErrorT
    };
})();
var PS = PS || {};
PS.Control_Monad_Maybe_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var MaybeT = {
        create: function (value) {
            return value;
        }
    };
    var runMaybeT = function (_301) {
        return _301;
    };
    var monadTransMaybeT = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_177) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(MaybeT.create)(Prelude.liftM1(__dict_Monad_177)(Data_Maybe.Just.create));
        });
    };
    var mapMaybeT = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(MaybeT.create)(Prelude["<<<"](Prelude.semigroupoidArr())(f)(runMaybeT));
    };
    var liftPassMaybe = function (__dict_Monad_179) {
        return function (pass) {
            return mapMaybeT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_179["__superclass_Prelude.Bind_1"]())(m)(function (_17) {
                    return Prelude["return"](__dict_Monad_179)((function () {
                        if (_17 instanceof Data_Maybe.Nothing) {
                            return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Prelude.id(Prelude.categoryArr()));
                        };
                        if (_17 instanceof Data_Maybe.Just) {
                            return new Data_Tuple.Tuple(new Data_Maybe.Just(_17.value0.value0), _17.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenMaybe = function (__dict_Monad_180) {
        return function (listen) {
            return mapMaybeT(function (m) {
                return Prelude[">>="](__dict_Monad_180["__superclass_Prelude.Bind_1"]())(listen(m))(function (_16) {
                    return Prelude["return"](__dict_Monad_180)(Prelude["<$>"](Data_Maybe.functorMaybe())(function (r) {
                        return new Data_Tuple.Tuple(r, _16.value1);
                    })(_16.value0));
                });
            });
        };
    };
    var liftCatchMaybe = function ($$catch) {
        return function (m) {
            return function (h) {
                return MaybeT.create($$catch(runMaybeT(m))(Prelude["<<<"](Prelude.semigroupoidArr())(runMaybeT)(h)));
            };
        };
    };
    var liftCallCCMaybe = function (callCC) {
        return function (f) {
            return MaybeT.create(callCC(function (c) {
                return runMaybeT(f(function (a) {
                    return MaybeT.create(c(new Data_Maybe.Just(a)));
                }));
            }));
        };
    };
    var applicativeMaybeT = function (__dict_Monad_184) {
        return new Prelude.Applicative(function () {
            return applyMaybeT(__dict_Monad_184);
        }, Prelude["<<<"](Prelude.semigroupoidArr())(MaybeT.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.pure(__dict_Monad_184["__superclass_Prelude.Applicative_0"]()))(Data_Maybe.Just.create)));
    };
    var applyMaybeT = function (__dict_Monad_183) {
        return new Prelude.Apply(Prelude.ap(monadMaybeT(__dict_Monad_183)), function () {
            return functorMaybeT(__dict_Monad_183);
        });
    };
    var monadMaybeT = function (__dict_Monad_178) {
        return new Prelude.Monad(function () {
            return applicativeMaybeT(__dict_Monad_178);
        }, function () {
            return bindMaybeT(__dict_Monad_178);
        });
    };
    var bindMaybeT = function (__dict_Monad_182) {
        return new Prelude.Bind(function (x) {
            return function (f) {
                return MaybeT.create(Prelude[">>="](__dict_Monad_182["__superclass_Prelude.Bind_1"]())(runMaybeT(x))(function (_15) {
                    if (_15 instanceof Data_Maybe.Nothing) {
                        return Prelude["return"](__dict_Monad_182)(Data_Maybe.Nothing.value);
                    };
                    if (_15 instanceof Data_Maybe.Just) {
                        return runMaybeT(f(_15.value0));
                    };
                    throw new Error("Failed pattern match");
                }));
            };
        }, function () {
            return applyMaybeT(__dict_Monad_182);
        });
    };
    var functorMaybeT = function (__dict_Monad_181) {
        return new Prelude.Functor(Prelude.liftA1(applicativeMaybeT(__dict_Monad_181)));
    };
    return {
        MaybeT: MaybeT, 
        liftCallCCMaybe: liftCallCCMaybe, 
        liftPassMaybe: liftPassMaybe, 
        liftListenMaybe: liftListenMaybe, 
        liftCatchMaybe: liftCatchMaybe, 
        mapMaybeT: mapMaybeT, 
        runMaybeT: runMaybeT, 
        functorMaybeT: functorMaybeT, 
        applyMaybeT: applyMaybeT, 
        applicativeMaybeT: applicativeMaybeT, 
        bindMaybeT: bindMaybeT, 
        monadMaybeT: monadMaybeT, 
        monadTransMaybeT: monadTransMaybeT
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var RWST = {
        create: function (value) {
            return value;
        }
    };
    var runRWST = function (_304) {
        return _304;
    };
    var withRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Data_Tuple.uncurry(runRWST(m))(f(r)(s));
                };
            };
        };
    };
    var mkSee = function (__dict_Monoid_187) {
        return function (s) {
            return function (a) {
                return function (w) {
                    return {
                        state: s, 
                        result: a, 
                        log: w
                    };
                };
            };
        };
    };
    var monadTransRWST = function (__dict_Monoid_188) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_189) {
            return function (m) {
                return function (_) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_189["__superclass_Prelude.Bind_1"]())(m)(function (a) {
                            return Prelude["return"](__dict_Monad_189)(mkSee(__dict_Monoid_188)(s)(a)(Data_Monoid.mempty(__dict_Monoid_188)));
                        });
                    };
                };
            };
        });
    };
    var mapRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return f(runRWST(m)(r)(s));
                };
            };
        };
    };
    var functorRWST = function (__dict_Functor_190) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_190)(function (see) {
                            var _1025 = {};
                            for (var _1026 in see) {
                                if (see.hasOwnProperty(_1026)) {
                                    _1025[_1026] = see[_1026];
                                };
                            };
                            _1025.result = f(see.result);
                            return _1025;
                        })(runRWST(m)(r)(s));
                    };
                };
            };
        });
    };
    var execRWST = function (__dict_Monad_191) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_191["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_191)(new Data_Tuple.Tuple(see.state, see.log));
                    });
                };
            };
        };
    };
    var evalRWST = function (__dict_Monad_192) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_192["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_192)(new Data_Tuple.Tuple(see.result, see.log));
                    });
                };
            };
        };
    };
    var applyRWST = function (__dict_Apply_195) {
        return function (__dict_Semigroup_196) {
            return new Prelude.Apply(function (f) {
                return function (m) {
                    return function (r) {
                        return function (s) {
                            return Prelude["<*>"](__dict_Apply_195)(Prelude["<$>"](__dict_Apply_195["__superclass_Prelude.Functor_0"]())(function (_302) {
                                return function (see) {
                                    var _1028 = {};
                                    for (var _1029 in see) {
                                        if (see.hasOwnProperty(_1029)) {
                                            _1028[_1029] = see[_1029];
                                        };
                                    };
                                    _1028.result = _302.result(see.result);
                                    _1028.log = Prelude["<>"](__dict_Semigroup_196)(_302.log)(see.log);
                                    return _1028;
                                };
                            })(runRWST(f)(r)(s)))(runRWST(m)(r)(s));
                        };
                    };
                };
            }, function () {
                return functorRWST(__dict_Apply_195["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindRWST = function (__dict_Bind_193) {
        return function (__dict_Semigroup_194) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return function (r) {
                        return function (s) {
                            return Prelude[">>="](__dict_Bind_193)(runRWST(m)(r)(s))(function (_303) {
                                return Prelude["<$>"]((__dict_Bind_193["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (see$prime) {
                                    var _1033 = {};
                                    for (var _1034 in see$prime) {
                                        if (see$prime.hasOwnProperty(_1034)) {
                                            _1033[_1034] = see$prime[_1034];
                                        };
                                    };
                                    _1033.log = Prelude["<>"](__dict_Semigroup_194)(_303.log)(see$prime.log);
                                    return _1033;
                                })(runRWST(f(_303.result))(r)(_303.state));
                            });
                        };
                    };
                };
            }, function () {
                return applyRWST(__dict_Bind_193["__superclass_Prelude.Apply_0"]())(__dict_Semigroup_194);
            });
        };
    };
    var applicativeRWST = function (__dict_Applicative_197) {
        return function (__dict_Monoid_198) {
            return new Prelude.Applicative(function () {
                return applyRWST(__dict_Applicative_197["__superclass_Prelude.Apply_0"]())(__dict_Monoid_198["__superclass_Prelude.Semigroup_0"]());
            }, function (a) {
                return function (_) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_197)(mkSee(__dict_Monoid_198)(s)(a)(Data_Monoid.mempty(__dict_Monoid_198)));
                    };
                };
            });
        };
    };
    var monadRWST = function (__dict_Monad_185) {
        return function (__dict_Monoid_186) {
            return new Prelude.Monad(function () {
                return applicativeRWST(__dict_Monad_185["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_186);
            }, function () {
                return bindRWST(__dict_Monad_185["__superclass_Prelude.Bind_1"]())(__dict_Monoid_186["__superclass_Prelude.Semigroup_0"]());
            });
        };
    };
    return {
        RWST: RWST, 
        withRWST: withRWST, 
        mapRWST: mapRWST, 
        execRWST: execRWST, 
        evalRWST: evalRWST, 
        runRWST: runRWST, 
        mkSee: mkSee, 
        functorRWST: functorRWST, 
        applyRWST: applyRWST, 
        bindRWST: bindRWST, 
        applicativeRWST: applicativeRWST, 
        monadRWST: monadRWST, 
        monadTransRWST: monadTransRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var writer = function (__dict_Applicative_199) {
        return function (_308) {
            return function (_) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_199)({
                        state: s, 
                        result: _308.value0, 
                        log: _308.value1
                    });
                };
            };
        };
    };
    var withRWS = Control_Monad_RWS_Trans.withRWST;
    var tell = function (__dict_Applicative_200) {
        return function (w) {
            return writer(__dict_Applicative_200)(new Data_Tuple.Tuple(Prelude.unit, w));
        };
    };
    var state = function (__dict_Applicative_201) {
        return function (__dict_Monoid_202) {
            return function (f) {
                return function (_) {
                    return function (s) {
                        var _1041 = f(s);
                        return Prelude.pure(__dict_Applicative_201)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_202)(_1041.value1)(_1041.value0)(Data_Monoid.mempty(__dict_Monoid_202)));
                    };
                };
            };
        };
    };
    var rws = function (f) {
        return function (r) {
            return function (s) {
                return Prelude["return"](Control_Monad_Identity.monadIdentity())(f(r)(s));
            };
        };
    };
    var runRWS = function (m) {
        return function (r) {
            return function (s) {
                return Control_Monad_Identity.runIdentity(Control_Monad_RWS_Trans.runRWST(m)(r)(s));
            };
        };
    };
    var reader = function (__dict_Applicative_203) {
        return function (__dict_Monoid_204) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_203)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_204)(s)(f(r))(Data_Monoid.mempty(__dict_Monoid_204)));
                    };
                };
            };
        };
    };
    var put = function (__dict_Applicative_205) {
        return function (__dict_Monoid_206) {
            return function (s) {
                return state(__dict_Applicative_205)(__dict_Monoid_206)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var pass = function (__dict_Monad_207) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_207["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_306) {
                        return Prelude.pure(__dict_Monad_207["__superclass_Prelude.Applicative_0"]())({
                            state: _306.state, 
                            result: _306.result.value0, 
                            log: _306.result.value1(_306.log)
                        });
                    });
                };
            };
        };
    };
    var modify = function (__dict_Applicative_208) {
        return function (__dict_Monoid_209) {
            return function (f) {
                return state(__dict_Applicative_208)(__dict_Monoid_209)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var mapRWS = function (f) {
        return Control_Monad_RWS_Trans.mapRWST(Prelude[">>>"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(Prelude[">>>"](Prelude.semigroupoidArr())(f)(Control_Monad_Identity.Identity.create)));
    };
    var local = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Control_Monad_RWS_Trans.runRWST(m)(f(r))(s);
                };
            };
        };
    };
    var listens = function (__dict_Monad_210) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_210["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_307) {
                            return Prelude.pure(__dict_Monad_210["__superclass_Prelude.Applicative_0"]())({
                                state: _307.state, 
                                result: new Data_Tuple.Tuple(_307.result, f(_307.log)), 
                                log: _307.log
                            });
                        });
                    };
                };
            };
        };
    };
    var listen = function (__dict_Monad_211) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_211["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_305) {
                        return Prelude.pure(__dict_Monad_211["__superclass_Prelude.Applicative_0"]())({
                            state: _305.state, 
                            result: new Data_Tuple.Tuple(_305.result, _305.log), 
                            log: _305.log
                        });
                    });
                };
            };
        };
    };
    var gets = function (__dict_Applicative_212) {
        return function (__dict_Monoid_213) {
            return function (f) {
                return state(__dict_Applicative_212)(__dict_Monoid_213)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Applicative_214) {
        return function (__dict_Monoid_215) {
            return state(__dict_Applicative_214)(__dict_Monoid_215)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    var execRWS = function (m) {
        return function (r) {
            return function (s) {
                return Control_Monad_Identity.runIdentity(Control_Monad_RWS_Trans.execRWST(Control_Monad_Identity.monadIdentity())(m)(r)(s));
            };
        };
    };
    var evalRWS = function (m) {
        return function (r) {
            return function (s) {
                return Control_Monad_Identity.runIdentity(Control_Monad_RWS_Trans.evalRWST(Control_Monad_Identity.monadIdentity())(m)(r)(s));
            };
        };
    };
    var censor = function (__dict_Monad_216) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_216["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (see) {
                            return Prelude.pure(__dict_Monad_216["__superclass_Prelude.Applicative_0"]())((function () {
                                var _1058 = {};
                                for (var _1059 in see) {
                                    if (see.hasOwnProperty(_1059)) {
                                        _1058[_1059] = see[_1059];
                                    };
                                };
                                _1058.log = f(see.log);
                                return _1058;
                            })());
                        });
                    };
                };
            };
        };
    };
    var ask = function (__dict_Applicative_217) {
        return function (__dict_Monoid_218) {
            return function (r) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_217)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_218)(s)(r)(Data_Monoid.mempty(__dict_Monoid_218)));
                };
            };
        };
    };
    return {
        modify: modify, 
        put: put, 
        gets: gets, 
        get: get, 
        state: state, 
        censor: censor, 
        listens: listens, 
        tell: tell, 
        pass: pass, 
        listen: listen, 
        writer: writer, 
        reader: reader, 
        local: local, 
        ask: ask, 
        withRWS: withRWS, 
        mapRWS: mapRWS, 
        execRWS: execRWS, 
        evalRWS: evalRWS, 
        runRWS: runRWS, 
        rws: rws
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var StateT = {
        create: function (value) {
            return value;
        }
    };
    var runStateT = function (_311) {
        return _311;
    };
    var withStateT = function (f) {
        return function (s) {
            return StateT.create(Prelude["<<<"](Prelude.semigroupoidArr())(runStateT(s))(f));
        };
    };
    var monadTransStateT = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_221) {
            return function (m) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_221["__superclass_Prelude.Bind_1"]())(m)(function (_19) {
                        return Prelude["return"](__dict_Monad_221)(new Data_Tuple.Tuple(_19, s));
                    });
                };
            };
        });
    };
    var mapStateT = function (f) {
        return function (m) {
            return StateT.create(Prelude["<<<"](Prelude.semigroupoidArr())(f)(runStateT(m)));
        };
    };
    var liftPassState = function (__dict_Monad_224) {
        return function (pass) {
            return function (m) {
                return StateT.create(function (s) {
                    return pass(Prelude[">>="](__dict_Monad_224["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_21) {
                        return Prelude["return"](__dict_Monad_224)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_21.value0.value0, _21.value1), _21.value0.value1));
                    }));
                });
            };
        };
    };
    var liftListenState = function (__dict_Monad_225) {
        return function (listen) {
            return function (m) {
                return StateT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_225["__superclass_Prelude.Bind_1"]())(listen(runStateT(m)(s)))(function (_20) {
                        return Prelude["return"](__dict_Monad_225)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_20.value0.value0, _20.value1), _20.value0.value1));
                    });
                });
            };
        };
    };
    var liftCatchState = function ($$catch) {
        return function (m) {
            return function (h) {
                return StateT.create(function (s) {
                    return $$catch(runStateT(m)(s))(function (e) {
                        return runStateT(h(e))(s);
                    });
                });
            };
        };
    };
    var liftCallCCState$prime = function (callCC) {
        return function (f) {
            return StateT.create(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT.create(function (s$prime) {
                            return c(new Data_Tuple.Tuple(a, s$prime));
                        });
                    }))(s);
                });
            });
        };
    };
    var liftCallCCState = function (callCC) {
        return function (f) {
            return StateT.create(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT.create(function (_) {
                            return c(new Data_Tuple.Tuple(a, s));
                        });
                    }))(s);
                });
            });
        };
    };
    var lazy1StateT = function () {
        return new Control_Lazy.Lazy1(function (f) {
            return StateT.create(function (s) {
                return runStateT(f(Prelude.unit))(s);
            });
        });
    };
    var execStateT = function (__dict_Monad_227) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_227["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_310) {
                    return Prelude["return"](__dict_Monad_227)(_310.value1);
                });
            };
        };
    };
    var evalStateT = function (__dict_Monad_228) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_228["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_309) {
                    return Prelude["return"](__dict_Monad_228)(_309.value0);
                });
            };
        };
    };
    var applicativeStateT = function (__dict_Monad_231) {
        return new Prelude.Applicative(function () {
            return applyStateT(__dict_Monad_231);
        }, function (a) {
            return StateT.create(function (s) {
                return Prelude["return"](__dict_Monad_231)(new Data_Tuple.Tuple(a, s));
            });
        });
    };
    var applyStateT = function (__dict_Monad_230) {
        return new Prelude.Apply(Prelude.ap(monadStateT(__dict_Monad_230)), function () {
            return functorStateT(__dict_Monad_230);
        });
    };
    var monadStateT = function (__dict_Monad_222) {
        return new Prelude.Monad(function () {
            return applicativeStateT(__dict_Monad_222);
        }, function () {
            return bindStateT(__dict_Monad_222);
        });
    };
    var bindStateT = function (__dict_Monad_229) {
        return new Prelude.Bind(function (_312) {
            return function (_313) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_229["__superclass_Prelude.Bind_1"]())(_312(s))(function (_18) {
                        return runStateT(_313(_18.value0))(_18.value1);
                    });
                };
            };
        }, function () {
            return applyStateT(__dict_Monad_229);
        });
    };
    var functorStateT = function (__dict_Monad_226) {
        return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_226)));
    };
    var altStateT = function (__dict_Monad_234) {
        return function (__dict_Alt_235) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return StateT.create(function (s) {
                        return Control_Alt["<|>"](__dict_Alt_235)(runStateT(x)(s))(runStateT(y)(s));
                    });
                };
            }, function () {
                return functorStateT(__dict_Monad_234);
            });
        };
    };
    var plusStateT = function (__dict_Monad_219) {
        return function (__dict_Plus_220) {
            return new Control_Plus.Plus(function () {
                return altStateT(__dict_Monad_219)(__dict_Plus_220["__superclass_Control.Alt.Alt_0"]());
            }, StateT.create(function (_) {
                return Control_Plus.empty(__dict_Plus_220);
            }));
        };
    };
    var alternativeStateT = function (__dict_Monad_232) {
        return function (__dict_Alternative_233) {
            return new Control_Alternative.Alternative(function () {
                return plusStateT(__dict_Monad_232)(__dict_Alternative_233["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeStateT(__dict_Monad_232);
            });
        };
    };
    var monadPlusStateT = function (__dict_MonadPlus_223) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeStateT(__dict_MonadPlus_223["__superclass_Prelude.Monad_0"]())(__dict_MonadPlus_223["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadStateT(__dict_MonadPlus_223["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        StateT: StateT, 
        "liftCallCCState'": liftCallCCState$prime, 
        liftCallCCState: liftCallCCState, 
        liftPassState: liftPassState, 
        liftListenState: liftListenState, 
        liftCatchState: liftCatchState, 
        withStateT: withStateT, 
        mapStateT: mapStateT, 
        execStateT: execStateT, 
        evalStateT: evalStateT, 
        runStateT: runStateT, 
        functorStateT: functorStateT, 
        applyStateT: applyStateT, 
        applicativeStateT: applicativeStateT, 
        altStateT: altStateT, 
        plusStateT: plusStateT, 
        alternativeStateT: alternativeStateT, 
        bindStateT: bindStateT, 
        monadStateT: monadStateT, 
        monadPlusStateT: monadPlusStateT, 
        monadTransStateT: monadTransStateT, 
        lazy1StateT: lazy1StateT
    };
})();
var PS = PS || {};
PS.Control_Monad_State = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Data_Tuple = PS.Data_Tuple;
    var withState = Control_Monad_State_Trans.withStateT;
    var runState = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
    };
    var mapState = function (f) {
        return Control_Monad_State_Trans.mapStateT(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr())(f)(Control_Monad_Identity.runIdentity)));
    };
    var execState = function (m) {
        return function (s) {
            return Data_Tuple.snd(runState(m)(s));
        };
    };
    var evalState = function (m) {
        return function (s) {
            return Data_Tuple.fst(runState(m)(s));
        };
    };
    return {
        withState: withState, 
        mapState: mapState, 
        execState: execState, 
        evalState: evalState, 
        runState: runState
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var WriterT = {
        create: function (value) {
            return value;
        }
    };
    var runWriterT = function (_315) {
        return _315;
    };
    var monadTransWriterT = function (__dict_Monoid_240) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_241) {
            return function (m) {
                return WriterT.create(Prelude[">>="](__dict_Monad_241["__superclass_Prelude.Bind_1"]())(m)(function (_24) {
                    return Prelude["return"](__dict_Monad_241)(new Data_Tuple.Tuple(_24, Data_Monoid.mempty(__dict_Monoid_240)));
                }));
            };
        });
    };
    var mapWriterT = function (f) {
        return function (m) {
            return WriterT.create(f(runWriterT(m)));
        };
    };
    var liftCatchWriter = function ($$catch) {
        return function (m) {
            return function (h) {
                return WriterT.create($$catch(runWriterT(m))(function (e) {
                    return runWriterT(h(e));
                }));
            };
        };
    };
    var liftCallCCWriter = function (__dict_Monoid_244) {
        return function (callCC) {
            return function (f) {
                return WriterT.create(callCC(function (c) {
                    return runWriterT(f(function (a) {
                        return WriterT.create(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_244))));
                    }));
                }));
            };
        };
    };
    var functorWriterT = function (__dict_Functor_245) {
        return new Prelude.Functor(function (f) {
            return mapWriterT(Prelude["<$>"](__dict_Functor_245)(function (_314) {
                return new Data_Tuple.Tuple(f(_314.value0), _314.value1);
            }));
        });
    };
    var applyWriterT = function (__dict_Monoid_248) {
        return function (__dict_Apply_249) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return WriterT.create((function () {
                        var k = function (_316) {
                            return function (_317) {
                                return new Data_Tuple.Tuple(_316.value0(_317.value0), Prelude["<>"](__dict_Monoid_248["__superclass_Prelude.Semigroup_0"]())(_316.value1)(_317.value1));
                            };
                        };
                        return Prelude["<*>"](__dict_Apply_249)(Prelude["<$>"](__dict_Apply_249["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                    })());
                };
            }, function () {
                return functorWriterT(__dict_Apply_249["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindWriterT = function (__dict_Monoid_246) {
        return function (__dict_Monad_247) {
            return new Prelude.Bind(function (m) {
                return function (k) {
                    return WriterT.create(Prelude[">>="](__dict_Monad_247["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_23) {
                        return Prelude[">>="](__dict_Monad_247["__superclass_Prelude.Bind_1"]())(runWriterT(k(_23.value0)))(function (_22) {
                            return Prelude["return"](__dict_Monad_247)(new Data_Tuple.Tuple(_22.value0, Prelude["<>"](__dict_Monoid_246["__superclass_Prelude.Semigroup_0"]())(_23.value1)(_22.value1)));
                        });
                    }));
                };
            }, function () {
                return applyWriterT(__dict_Monoid_246)((__dict_Monad_247["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeWriterT = function (__dict_Monoid_250) {
        return function (__dict_Applicative_251) {
            return new Prelude.Applicative(function () {
                return applyWriterT(__dict_Monoid_250)(__dict_Applicative_251["__superclass_Prelude.Apply_0"]());
            }, function (a) {
                return WriterT.create(Prelude.pure(__dict_Applicative_251)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_250))));
            });
        };
    };
    var monadWriterT = function (__dict_Monoid_238) {
        return function (__dict_Monad_239) {
            return new Prelude.Monad(function () {
                return applicativeWriterT(__dict_Monoid_238)(__dict_Monad_239["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindWriterT(__dict_Monoid_238)(__dict_Monad_239);
            });
        };
    };
    var altWriterT = function (__dict_Monoid_254) {
        return function (__dict_Alt_255) {
            return new Control_Alt.Alt(function (m) {
                return function (n) {
                    return WriterT.create(Control_Alt["<|>"](__dict_Alt_255)(runWriterT(m))(runWriterT(n)));
                };
            }, function () {
                return functorWriterT(__dict_Alt_255["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusWriterT = function (__dict_Monoid_236) {
        return function (__dict_Plus_237) {
            return new Control_Plus.Plus(function () {
                return altWriterT(__dict_Monoid_236)(__dict_Plus_237["__superclass_Control.Alt.Alt_0"]());
            }, Control_Plus.empty(__dict_Plus_237));
        };
    };
    var alternativeWriterT = function (__dict_Monoid_252) {
        return function (__dict_Alternative_253) {
            return new Control_Alternative.Alternative(function () {
                return plusWriterT(__dict_Monoid_252)(__dict_Alternative_253["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeWriterT(__dict_Monoid_252)(__dict_Alternative_253["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusWriterT = function (__dict_Monoid_242) {
        return function (__dict_MonadPlus_243) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeWriterT(__dict_Monoid_242)(__dict_MonadPlus_243["__superclass_Control.Alternative.Alternative_1"]());
            }, function () {
                return monadWriterT(__dict_Monoid_242)(__dict_MonadPlus_243["__superclass_Prelude.Monad_0"]());
            });
        };
    };
    return {
        WriterT: WriterT, 
        liftCallCCWriter: liftCallCCWriter, 
        liftCatchWriter: liftCatchWriter, 
        mapWriterT: mapWriterT, 
        runWriterT: runWriterT, 
        functorWriterT: functorWriterT, 
        applyWriterT: applyWriterT, 
        applicativeWriterT: applicativeWriterT, 
        altWriterT: altWriterT, 
        plusWriterT: plusWriterT, 
        alternativeWriterT: alternativeWriterT, 
        bindWriterT: bindWriterT, 
        monadWriterT: monadWriterT, 
        monadPlusWriterT: monadPlusWriterT, 
        monadTransWriterT: monadTransWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Cont_Trans = PS.Control_Monad_Cont_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    function MonadCont(callCC) {
        this.callCC = callCC;
    };
    var monadContContT = function (__dict_Monad_256) {
        return new MonadCont(Control_Monad_Cont_Trans.callCC);
    };
    var callCC = function (dict) {
        return dict.callCC;
    };
    var monadContErrorT = function (__dict_Error_257) {
        return function (__dict_MonadCont_258) {
            return new MonadCont(Control_Monad_Error_Trans.liftCallCCError(callCC(__dict_MonadCont_258)));
        };
    };
    var monadContMaybeT = function (__dict_MonadCont_259) {
        return new MonadCont(Control_Monad_Maybe_Trans.liftCallCCMaybe(callCC(__dict_MonadCont_259)));
    };
    var monadContReaderT = function (__dict_MonadCont_260) {
        return new MonadCont(Control_Monad_Reader_Trans.liftCallCCReader(callCC(__dict_MonadCont_260)));
    };
    var monadContStateT = function (__dict_MonadCont_261) {
        return new MonadCont(Control_Monad_State_Trans["liftCallCCState'"](callCC(__dict_MonadCont_261)));
    };
    var monadWriterT = function (__dict_Monoid_262) {
        return function (__dict_MonadCont_263) {
            return new MonadCont(Control_Monad_Writer_Trans.liftCallCCWriter(__dict_Monoid_262)(callCC(__dict_MonadCont_263)));
        };
    };
    return {
        MonadCont: MonadCont, 
        callCC: callCC, 
        monadContContT: monadContContT, 
        monadContErrorT: monadContErrorT, 
        monadContMaybeT: monadContMaybeT, 
        monadContReaderT: monadContReaderT, 
        monadContStateT: monadContStateT, 
        monadWriterT: monadWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    function MonadError(catchError, throwError) {
        this.catchError = catchError;
        this.throwError = throwError;
    };
    var throwError = function (dict) {
        return dict.throwError;
    };
    var monadErrorErrorT = function (__dict_Monad_264) {
        return function (__dict_Error_265) {
            return new MonadError(function (m) {
                return function (h) {
                    return Control_Monad_Error_Trans.ErrorT.create(Prelude[">>="](__dict_Monad_264["__superclass_Prelude.Bind_1"]())(Control_Monad_Error_Trans.runErrorT(m))(function (_25) {
                        if (_25 instanceof Data_Either.Left) {
                            return Control_Monad_Error_Trans.runErrorT(h(_25.value0));
                        };
                        if (_25 instanceof Data_Either.Right) {
                            return Prelude["return"](__dict_Monad_264)(new Data_Either.Right(_25.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function (e) {
                return Control_Monad_Error_Trans.ErrorT.create(Prelude["return"](__dict_Monad_264)(new Data_Either.Left(e)));
            });
        };
    };
    var monadErrorError = function (__dict_Error_266) {
        return new MonadError(function (_318) {
            return function (_319) {
                if (_318 instanceof Data_Either.Left) {
                    return _319(_318.value0);
                };
                if (_318 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_318.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, Data_Either.Left.create);
    };
    var catchError = function (dict) {
        return dict.catchError;
    };
    var monadErrorMaybeT = function (__dict_Monad_267) {
        return function (__dict_MonadError_268) {
            return new MonadError(Control_Monad_Maybe_Trans.liftCatchMaybe(catchError(__dict_MonadError_268)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT())(__dict_Monad_267)(throwError(__dict_MonadError_268)(e));
            });
        };
    };
    var monadErrorReaderT = function (__dict_Monad_269) {
        return function (__dict_MonadError_270) {
            return new MonadError(Control_Monad_Reader_Trans.liftCatchReader(catchError(__dict_MonadError_270)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT())(__dict_Monad_269)(throwError(__dict_MonadError_270)(e));
            });
        };
    };
    var monadErrorStateT = function (__dict_Monad_271) {
        return function (__dict_MonadError_272) {
            return new MonadError(Control_Monad_State_Trans.liftCatchState(catchError(__dict_MonadError_272)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT())(__dict_Monad_271)(throwError(__dict_MonadError_272)(e));
            });
        };
    };
    var monadErrorWriterT = function (__dict_Monad_273) {
        return function (__dict_Monoid_274) {
            return function (__dict_MonadError_275) {
                return new MonadError(Control_Monad_Writer_Trans.liftCatchWriter(catchError(__dict_MonadError_275)), function (e) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_274))(__dict_Monad_273)(throwError(__dict_MonadError_275)(e));
                });
            };
        };
    };
    return {
        MonadError: MonadError, 
        catchError: catchError, 
        throwError: throwError, 
        monadErrorError: monadErrorError, 
        monadErrorErrorT: monadErrorErrorT, 
        monadErrorMaybeT: monadErrorMaybeT, 
        monadErrorReaderT: monadErrorReaderT, 
        monadErrorWriterT: monadErrorWriterT, 
        monadErrorStateT: monadErrorStateT
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    function MonadReader(ask, local) {
        this.ask = ask;
        this.local = local;
    };
    var monadReaderReaderT = function (__dict_Monad_276) {
        return new MonadReader(Prelude["return"](__dict_Monad_276), Control_Monad_Reader_Trans.withReaderT);
    };
    var monadReaderRWST = function (__dict_Monad_277) {
        return function (__dict_Monoid_278) {
            return new MonadReader(Control_Monad_RWS.ask(__dict_Monad_277["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_278), Control_Monad_RWS.local);
        };
    };
    var monadReaderFun = function () {
        return new MonadReader(Prelude.id(Prelude.categoryArr()), Prelude[">>>"](Prelude.semigroupoidArr()));
    };
    var local = function (dict) {
        return dict.local;
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var monadReaderErrorT = function (__dict_Monad_279) {
        return function (__dict_Error_280) {
            return function (__dict_MonadReader_281) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_280))(__dict_Monad_279)(ask(__dict_MonadReader_281)), function (f) {
                    return Control_Monad_Error_Trans.mapErrorT(local(__dict_MonadReader_281)(f));
                });
            };
        };
    };
    var monadReaderMaybeT = function (__dict_Monad_282) {
        return function (__dict_MonadReader_283) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT())(__dict_Monad_282)(ask(__dict_MonadReader_283)), function (f) {
                return Control_Monad_Maybe_Trans.mapMaybeT(local(__dict_MonadReader_283)(f));
            });
        };
    };
    var monadReaderStateT = function (__dict_Monad_284) {
        return function (__dict_MonadReader_285) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT())(__dict_Monad_284)(ask(__dict_MonadReader_285)), function (f) {
                return Control_Monad_State_Trans.mapStateT(local(__dict_MonadReader_285)(f));
            });
        };
    };
    var monadReaderWriterT = function (__dict_Monad_286) {
        return function (__dict_Monoid_287) {
            return function (__dict_MonadReader_288) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_287))(__dict_Monad_286)(ask(__dict_MonadReader_288)), function (f) {
                    return Control_Monad_Writer_Trans.mapWriterT(local(__dict_MonadReader_288)(f));
                });
            };
        };
    };
    var reader = function (__dict_Monad_289) {
        return function (__dict_MonadReader_290) {
            return function (f) {
                return Prelude[">>="](__dict_Monad_289["__superclass_Prelude.Bind_1"]())(ask(__dict_MonadReader_290))(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["return"](__dict_Monad_289))(f));
            };
        };
    };
    return {
        MonadReader: MonadReader, 
        reader: reader, 
        local: local, 
        ask: ask, 
        monadReaderFun: monadReaderFun, 
        monadReaderReaderT: monadReaderReaderT, 
        monadReaderErrorT: monadReaderErrorT, 
        monadReaderMaybeT: monadReaderMaybeT, 
        monadReaderWriterT: monadReaderWriterT, 
        monadReaderStateT: monadReaderStateT, 
        monadReaderRWST: monadReaderRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    function MonadState(state) {
        this.state = state;
    };
    var state = function (dict) {
        return dict.state;
    };
    var put = function (__dict_Monad_291) {
        return function (__dict_MonadState_292) {
            return function (s) {
                return state(__dict_MonadState_292)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var monadStateWriterT = function (__dict_Monad_293) {
        return function (__dict_Monoid_294) {
            return function (__dict_MonadState_295) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_294))(__dict_Monad_293)(state(__dict_MonadState_295)(f));
                });
            };
        };
    };
    var monadStateStateT1 = function (__dict_Monad_296) {
        return function (__dict_MonadState_297) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT())(__dict_Monad_296)(state(__dict_MonadState_297)(f));
            });
        };
    };
    var monadStateStateT = function (__dict_Monad_298) {
        return new MonadState(function (f) {
            return Control_Monad_State_Trans.StateT.create(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["return"](__dict_Monad_298))(f));
        });
    };
    var monadStateReaderT = function (__dict_Monad_299) {
        return function (__dict_MonadState_300) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT())(__dict_Monad_299)(state(__dict_MonadState_300)(f));
            });
        };
    };
    var monadStateRWST = function (__dict_Monad_301) {
        return function (__dict_Monoid_302) {
            return new MonadState(Control_Monad_RWS.state(__dict_Monad_301["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_302));
        };
    };
    var monadStateMaybeT = function (__dict_Monad_303) {
        return function (__dict_MonadState_304) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT())(__dict_Monad_303)(state(__dict_MonadState_304)(f));
            });
        };
    };
    var monadStateErrorT = function (__dict_Monad_305) {
        return function (__dict_Error_306) {
            return function (__dict_MonadState_307) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_306))(__dict_Monad_305)(state(__dict_MonadState_307)(f));
                });
            };
        };
    };
    var modify = function (__dict_Monad_308) {
        return function (__dict_MonadState_309) {
            return function (f) {
                return state(__dict_MonadState_309)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var gets = function (__dict_Monad_310) {
        return function (__dict_MonadState_311) {
            return function (f) {
                return state(__dict_MonadState_311)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Monad_312) {
        return function (__dict_MonadState_313) {
            return state(__dict_MonadState_313)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    return {
        MonadState: MonadState, 
        modify: modify, 
        put: put, 
        gets: gets, 
        get: get, 
        state: state, 
        monadStateStateT: monadStateStateT, 
        monadStateStateT1: monadStateStateT1, 
        monadStateErrorT: monadStateErrorT, 
        monadStateMaybeT: monadStateMaybeT, 
        monadStateReaderT: monadStateReaderT, 
        monadStateWriterT: monadStateWriterT, 
        monadStateRWST: monadStateRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var runWriter = Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
    var mapWriter = function (f) {
        return Control_Monad_Writer_Trans.mapWriterT(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr())(f)(Control_Monad_Identity.runIdentity)));
    };
    var execWriter = function (m) {
        return Data_Tuple.snd(runWriter(m));
    };
    return {
        mapWriter: mapWriter, 
        execWriter: execWriter, 
        runWriter: runWriter
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    function MonadWriter(listen, pass, writer) {
        this.listen = listen;
        this.pass = pass;
        this.writer = writer;
    };
    var writer = function (dict) {
        return dict.writer;
    };
    var tell = function (__dict_Monoid_314) {
        return function (__dict_Monad_315) {
            return function (__dict_MonadWriter_316) {
                return function (w) {
                    return writer(__dict_MonadWriter_316)(new Data_Tuple.Tuple(Prelude.unit, w));
                };
            };
        };
    };
    var pass = function (dict) {
        return dict.pass;
    };
    var monadWriterWriterT = function (__dict_Monoid_317) {
        return function (__dict_Monad_318) {
            return new MonadWriter(function (m) {
                return Control_Monad_Writer_Trans.WriterT.create(Prelude[">>="](__dict_Monad_318["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_28) {
                    return Prelude["return"](__dict_Monad_318)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_28.value0, _28.value1), _28.value1));
                }));
            }, function (m) {
                return Control_Monad_Writer_Trans.WriterT.create(Prelude[">>="](__dict_Monad_318["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_29) {
                    return Prelude["return"](__dict_Monad_318)(new Data_Tuple.Tuple(_29.value0.value0, _29.value0.value1(_29.value1)));
                }));
            }, Prelude["<<<"](Prelude.semigroupoidArr())(Control_Monad_Writer_Trans.WriterT.create)(Prelude["return"](__dict_Monad_318)));
        };
    };
    var monadWriterRWST = function (__dict_Monad_319) {
        return function (__dict_Monoid_320) {
            return new MonadWriter(Control_Monad_RWS.listen(__dict_Monad_319), Control_Monad_RWS.pass(__dict_Monad_319), Control_Monad_RWS.writer(__dict_Monad_319["__superclass_Prelude.Applicative_0"]()));
        };
    };
    var listen = function (dict) {
        return dict.listen;
    };
    var listens = function (__dict_Monoid_321) {
        return function (__dict_Monad_322) {
            return function (__dict_MonadWriter_323) {
                return function (f) {
                    return function (m) {
                        return Prelude[">>="](__dict_Monad_322["__superclass_Prelude.Bind_1"]())(listen(__dict_MonadWriter_323)(m))(function (_26) {
                            return Prelude["return"](__dict_Monad_322)(new Data_Tuple.Tuple(_26.value0, f(_26.value1)));
                        });
                    };
                };
            };
        };
    };
    var monadWriterErrorT = function (__dict_Monad_324) {
        return function (__dict_Error_325) {
            return function (__dict_MonadWriter_326) {
                return new MonadWriter(Control_Monad_Error_Trans.liftListenError(__dict_Monad_324)(listen(__dict_MonadWriter_326)), Control_Monad_Error_Trans.liftPassError(__dict_Monad_324)(pass(__dict_MonadWriter_326)), function (wd) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_325))(__dict_Monad_324)(writer(__dict_MonadWriter_326)(wd));
                });
            };
        };
    };
    var monadWriterMaybeT = function (__dict_Monad_327) {
        return function (__dict_MonadWriter_328) {
            return new MonadWriter(Control_Monad_Maybe_Trans.liftListenMaybe(__dict_Monad_327)(listen(__dict_MonadWriter_328)), Control_Monad_Maybe_Trans.liftPassMaybe(__dict_Monad_327)(pass(__dict_MonadWriter_328)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT())(__dict_Monad_327)(writer(__dict_MonadWriter_328)(wd));
            });
        };
    };
    var monadWriterReaderT = function (__dict_Monad_329) {
        return function (__dict_MonadWriter_330) {
            return new MonadWriter(Control_Monad_Reader_Trans.mapReaderT(listen(__dict_MonadWriter_330)), Control_Monad_Reader_Trans.mapReaderT(pass(__dict_MonadWriter_330)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT())(__dict_Monad_329)(writer(__dict_MonadWriter_330)(wd));
            });
        };
    };
    var monadWriterStateT = function (__dict_Monad_331) {
        return function (__dict_MonadWriter_332) {
            return new MonadWriter(Control_Monad_State_Trans.liftListenState(__dict_Monad_331)(listen(__dict_MonadWriter_332)), Control_Monad_State_Trans.liftPassState(__dict_Monad_331)(pass(__dict_MonadWriter_332)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT())(__dict_Monad_331)(writer(__dict_MonadWriter_332)(wd));
            });
        };
    };
    var censor = function (__dict_Monoid_333) {
        return function (__dict_Monad_334) {
            return function (__dict_MonadWriter_335) {
                return function (f) {
                    return function (m) {
                        return pass(__dict_MonadWriter_335)(Prelude[">>="](__dict_Monad_334["__superclass_Prelude.Bind_1"]())(m)(function (_27) {
                            return Prelude["return"](__dict_Monad_334)(new Data_Tuple.Tuple(_27, f));
                        }));
                    };
                };
            };
        };
    };
    return {
        MonadWriter: MonadWriter, 
        censor: censor, 
        listens: listens, 
        tell: tell, 
        pass: pass, 
        listen: listen, 
        writer: writer, 
        monadWriterWriterT: monadWriterWriterT, 
        monadWriterErrorT: monadWriterErrorT, 
        monadWriterMaybeT: monadWriterMaybeT, 
        monadWriterStateT: monadWriterStateT, 
        monadWriterReaderT: monadWriterReaderT, 
        monadWriterRWST: monadWriterRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Control_Monad_Writer_Class = PS.Control_Monad_Writer_Class;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    function MonadRWS(__superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2, __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4, __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3, __superclass_Data$dotMonoid$dotMonoid_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Monad.Reader.Class.MonadReader_2"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2;
        this["__superclass_Control.Monad.State.Class.MonadState_4"] = __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4;
        this["__superclass_Control.Monad.Writer.Class.MonadWriter_3"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3;
        this["__superclass_Data.Monoid.Monoid_1"] = __superclass_Data$dotMonoid$dotMonoid_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var monadRWSRWST = function (__dict_Monad_336) {
        return function (__dict_Monoid_337) {
            return new MonadRWS(function () {
                return Control_Monad_Reader_Class.monadReaderRWST(__dict_Monad_336)(__dict_Monoid_337);
            }, function () {
                return Control_Monad_State_Class.monadStateRWST(__dict_Monad_336)(__dict_Monoid_337);
            }, function () {
                return Control_Monad_Writer_Class.monadWriterRWST(__dict_Monad_336)(__dict_Monoid_337);
            }, function () {
                return __dict_Monoid_337;
            }, function () {
                return Control_Monad_RWS_Trans.monadRWST(__dict_Monad_336)(__dict_Monoid_337);
            });
        };
    };
    var monadRWSMaybeT = function (__dict_Monad_338) {
        return function (__dict_Monoid_339) {
            return function (__dict_MonadRWS_340) {
                return function (__dict_MonadReader_341) {
                    return function (__dict_MonadWriter_342) {
                        return function (__dict_MonadState_343) {
                            return new MonadRWS(function () {
                                return Control_Monad_Reader_Class.monadReaderMaybeT(__dict_Monad_338)(__dict_MonadReader_341);
                            }, function () {
                                return Control_Monad_State_Class.monadStateMaybeT(__dict_Monad_338)(__dict_MonadState_343);
                            }, function () {
                                return Control_Monad_Writer_Class.monadWriterMaybeT(__dict_Monad_338)(__dict_MonadWriter_342);
                            }, function () {
                                return __dict_Monoid_339;
                            }, function () {
                                return Control_Monad_Maybe_Trans.monadMaybeT(__dict_Monad_338);
                            });
                        };
                    };
                };
            };
        };
    };
    var monadRWSErrorT = function (__dict_Monad_344) {
        return function (__dict_Monoid_345) {
            return function (__dict_MonadRWS_346) {
                return function (__dict_MonadReader_347) {
                    return function (__dict_MonadWriter_348) {
                        return function (__dict_MonadState_349) {
                            return function (__dict_Error_350) {
                                return new MonadRWS(function () {
                                    return Control_Monad_Reader_Class.monadReaderErrorT(__dict_Monad_344)(__dict_Error_350)(__dict_MonadReader_347);
                                }, function () {
                                    return Control_Monad_State_Class.monadStateErrorT(__dict_Monad_344)(__dict_Error_350)(__dict_MonadState_349);
                                }, function () {
                                    return Control_Monad_Writer_Class.monadWriterErrorT(__dict_Monad_344)(__dict_Error_350)(__dict_MonadWriter_348);
                                }, function () {
                                    return __dict_Monoid_345;
                                }, function () {
                                    return Control_Monad_Error_Trans.monadErrorT(__dict_Monad_344)(__dict_Error_350);
                                });
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        MonadRWS: MonadRWS, 
        monadRWSRWST: monadRWSRWST, 
        monadRWSErrorT: monadRWSErrorT, 
        monadRWSMaybeT: monadRWSMaybeT
    };
})();
var PS = PS || {};
PS.Data_Enum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Cardinality = {
        create: function (value) {
            return value;
        }
    };
    function Enum(__superclass_Prelude$dotOrd_0, cardinality, firstEnum, lastEnum, pred, succ) {
        this["__superclass_Prelude.Ord_0"] = __superclass_Prelude$dotOrd_0;
        this.cardinality = cardinality;
        this.firstEnum = firstEnum;
        this.lastEnum = lastEnum;
        this.pred = pred;
        this.succ = succ;
    };
    var succ = function (dict) {
        return dict.succ;
    };
    var runCardinality = function (_320) {
        return _320;
    };
    var tupleCardinality = function (__dict_Enum_351) {
        return function (__dict_Enum_352) {
            return function (l) {
                return function (r) {
                    return Cardinality.create(runCardinality(l) * runCardinality(r));
                };
            };
        };
    };
    var pred = function (dict) {
        return dict.pred;
    };
    var maybeCardinality = function (__dict_Enum_353) {
        return function (c) {
            return Cardinality.create(1 + runCardinality(c));
        };
    };
    var lastEnum = function (dict) {
        return dict.lastEnum;
    };
    var fromEnum = function (__dict_Enum_354) {
        return function (e) {
            return Data_Maybe.maybe(0)(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["+"](Prelude.numNumber())(1))(fromEnum(__dict_Enum_354)))(pred(__dict_Enum_354)(e));
        };
    };
    var firstEnum = function (dict) {
        return dict.firstEnum;
    };
    var toEnum = function (__dict_Enum_355) {
        return function (_321) {
            if (_321 < 0) {
                return Data_Maybe.Nothing.value;
            };
            if (_321 === 0) {
                return new Data_Maybe.Just(firstEnum(__dict_Enum_355));
            };
            return Prelude[">>="](Data_Maybe.bindMaybe())(toEnum(__dict_Enum_355)(_321 - 1))(succ(__dict_Enum_355));
        };
    };
    var enumBoolean = function () {
        return new Enum(Prelude.ordBoolean, 2, false, true, function (_325) {
            if (_325) {
                return new Data_Maybe.Just(false);
            };
            return Data_Maybe.Nothing.value;
        }, function (_324) {
            if (!_324) {
                return new Data_Maybe.Just(true);
            };
            return Data_Maybe.Nothing.value;
        });
    };
    var cardinality = function (dict) {
        return dict.cardinality;
    };
    var enumMaybe = function (__dict_Enum_356) {
        return new Enum(function () {
            return Data_Maybe.ordMaybe(__dict_Enum_356["__superclass_Prelude.Ord_0"]());
        }, maybeCardinality(__dict_Enum_356)(cardinality(__dict_Enum_356)), Data_Maybe.Nothing.value, Data_Maybe.Just.create(lastEnum(__dict_Enum_356)), function (_323) {
            if (_323 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            if (_323 instanceof Data_Maybe.Just) {
                return Prelude["<$>"](Data_Maybe.functorMaybe())(Data_Maybe.Just.create)(pred(__dict_Enum_356)(_323.value0));
            };
            throw new Error("Failed pattern match");
        }, function (_322) {
            if (_322 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Just.create(firstEnum(enumMaybe(__dict_Enum_356)));
            };
            if (_322 instanceof Data_Maybe.Just) {
                return Prelude["<$>"](Data_Maybe.functorMaybe())(Data_Maybe.Just.create)(succ(__dict_Enum_356)(_322.value0));
            };
            throw new Error("Failed pattern match");
        });
    };
    var enumTuple = function (__dict_Enum_357) {
        return function (__dict_Enum_358) {
            return new Enum(function () {
                return Data_Tuple.ordTuple(__dict_Enum_357["__superclass_Prelude.Ord_0"]())(__dict_Enum_358["__superclass_Prelude.Ord_0"]());
            }, tupleCardinality(__dict_Enum_357)(__dict_Enum_358)(cardinality(__dict_Enum_357))(cardinality(__dict_Enum_358)), new Data_Tuple.Tuple(firstEnum(__dict_Enum_357), firstEnum(__dict_Enum_358)), new Data_Tuple.Tuple(lastEnum(__dict_Enum_357), lastEnum(__dict_Enum_358)), function (_327) {
                return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe())(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_358)))(pred(__dict_Enum_357)(_327.value0)))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_327.value0)))(pred(__dict_Enum_358)(_327.value1));
            }, function (_326) {
                return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe())(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_358)))(succ(__dict_Enum_357)(_326.value0)))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_326.value0)))(succ(__dict_Enum_358)(_326.value1));
            });
        };
    };
    return {
        Cardinality: Cardinality, 
        Enum: Enum, 
        toEnum: toEnum, 
        succ: succ, 
        runCardinality: runCardinality, 
        pred: pred, 
        lastEnum: lastEnum, 
        fromEnum: fromEnum, 
        firstEnum: firstEnum, 
        cardinality: cardinality, 
        enumMaybe: enumMaybe, 
        enumBoolean: enumBoolean, 
        enumTuple: enumTuple
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = {
        create: function (value) {
            return value;
        }
    };
    var showFirst = function (__dict_Show_359) {
        return new Prelude.Show(function (_335) {
            return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_359))(_335) + ")");
        });
    };
    var semigroupFirst = function () {
        return new Prelude.Semigroup(function (_336) {
            return function (_337) {
                if (_336 instanceof Data_Maybe.Just) {
                    return _336;
                };
                return _337;
            };
        });
    };
    var runFirst = function (_328) {
        return _328;
    };
    var monoidFirst = function () {
        return new Data_Monoid.Monoid(semigroupFirst, Data_Maybe.Nothing.value);
    };
    var eqFirst = function (__dict_Eq_361) {
        return new Prelude.Eq(function (_331) {
            return function (_332) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_361))(_331)(_332);
            };
        }, function (_329) {
            return function (_330) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_361))(_329)(_330);
            };
        });
    };
    var ordFirst = function (__dict_Ord_360) {
        return new Prelude.Ord(function () {
            return eqFirst(__dict_Ord_360["__superclass_Prelude.Eq_0"]());
        }, function (_333) {
            return function (_334) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_360))(_333)(_334);
            };
        });
    };
    return {
        First: First, 
        runFirst: runFirst, 
        eqFirst: eqFirst, 
        ordFirst: ordFirst, 
        showFirst: showFirst, 
        semigroupFirst: semigroupFirst, 
        monoidFirst: monoidFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Monoid_First = PS.Data_Monoid_First;
    function Foldable(foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    function foldrArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = xs.length - 1; i >= 0; --i) {        acc = f(xs[i])(acc);      }      return acc;    }  }};
    function foldlArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = 0, len = xs.length; i < len; ++i) {        acc = f(acc)(xs[i]);      }      return acc;    }  }};
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_362) {
        return function (__dict_Foldable_363) {
            return function (f) {
                return foldr(__dict_Foldable_363)(Prelude["<<<"](Prelude.semigroupoidArr())(Control_Apply["*>"](__dict_Applicative_362["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_362)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_364) {
        return function (__dict_Foldable_365) {
            return Prelude.flip(traverse_(__dict_Applicative_364)(__dict_Foldable_365));
        };
    };
    var sequence_ = function (__dict_Applicative_366) {
        return function (__dict_Foldable_367) {
            return traverse_(__dict_Applicative_366)(__dict_Foldable_367)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var mconcat = function (__dict_Foldable_368) {
        return function (__dict_Monoid_369) {
            return foldl(__dict_Foldable_368)(Prelude["<>"](__dict_Monoid_369["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_369));
        };
    };
    var or = function (__dict_Foldable_370) {
        return foldl(__dict_Foldable_370)(Prelude["||"](Prelude.boolLikeBoolean()))(false);
    };
    var product = function (__dict_Foldable_371) {
        return foldl(__dict_Foldable_371)(Prelude["*"](Prelude.numNumber()))(1);
    };
    var sum = function (__dict_Foldable_372) {
        return foldl(__dict_Foldable_372)(Prelude["+"](Prelude.numNumber()))(0);
    };
    var foldableTuple = function () {
        return new Foldable(function (__dict_Monoid_373) {
            return function (_369) {
                return function (_370) {
                    return _369(_370.value1);
                };
            };
        }, function (_366) {
            return function (_367) {
                return function (_368) {
                    return _366(_367)(_368.value1);
                };
            };
        }, function (_363) {
            return function (_364) {
                return function (_365) {
                    return _363(_365.value1)(_364);
                };
            };
        });
    };
    var foldableRef = function () {
        return new Foldable(function (__dict_Monoid_374) {
            return function (_361) {
                return function (_362) {
                    return _361(_362);
                };
            };
        }, function (_358) {
            return function (_359) {
                return function (_360) {
                    return _358(_359)(_360);
                };
            };
        }, function (_355) {
            return function (_356) {
                return function (_357) {
                    return _355(_357)(_356);
                };
            };
        });
    };
    var foldableMaybe = function () {
        return new Foldable(function (__dict_Monoid_375) {
            return function (_353) {
                return function (_354) {
                    if (_354 instanceof Data_Maybe.Nothing) {
                        return Data_Monoid.mempty(__dict_Monoid_375);
                    };
                    if (_354 instanceof Data_Maybe.Just) {
                        return _353(_354.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_350) {
            return function (_351) {
                return function (_352) {
                    if (_352 instanceof Data_Maybe.Nothing) {
                        return _351;
                    };
                    if (_352 instanceof Data_Maybe.Just) {
                        return _350(_351)(_352.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_347) {
            return function (_348) {
                return function (_349) {
                    if (_349 instanceof Data_Maybe.Nothing) {
                        return _348;
                    };
                    if (_349 instanceof Data_Maybe.Just) {
                        return _347(_349.value0)(_348);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var foldableEither = function () {
        return new Foldable(function (__dict_Monoid_376) {
            return function (_345) {
                return function (_346) {
                    if (_346 instanceof Data_Either.Left) {
                        return Data_Monoid.mempty(__dict_Monoid_376);
                    };
                    if (_346 instanceof Data_Either.Right) {
                        return _345(_346.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_342) {
            return function (_343) {
                return function (_344) {
                    if (_344 instanceof Data_Either.Left) {
                        return _343;
                    };
                    if (_344 instanceof Data_Either.Right) {
                        return _342(_343)(_344.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_339) {
            return function (_340) {
                return function (_341) {
                    if (_341 instanceof Data_Either.Left) {
                        return _340;
                    };
                    if (_341 instanceof Data_Either.Right) {
                        return _339(_341.value0)(_340);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var foldableArray = function () {
        return new Foldable(function (__dict_Monoid_377) {
            return function (f) {
                return function (xs) {
                    return foldr(foldableArray())(function (x) {
                        return function (acc) {
                            return Prelude["<>"](__dict_Monoid_377["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                        };
                    })(Data_Monoid.mempty(__dict_Monoid_377))(xs);
                };
            };
        }, function (f) {
            return function (z) {
                return function (xs) {
                    return foldlArray(f)(z)(xs);
                };
            };
        }, function (f) {
            return function (z) {
                return function (xs) {
                    return foldrArray(f)(z)(xs);
                };
            };
        });
    };
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_378) {
        return function (__dict_Foldable_379) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_379)(Data_Monoid_First.monoidFirst())(function (_338) {
                        return Prelude["=="](__dict_Eq_378)(a)(_338.value0) ? new Data_Maybe.Just(_338.value1) : Data_Maybe.Nothing.value;
                    })(f));
                };
            };
        };
    };
    var fold = function (__dict_Foldable_380) {
        return function (__dict_Monoid_381) {
            return foldMap(__dict_Foldable_380)(__dict_Monoid_381)(Prelude.id(Prelude.categoryArr()));
        };
    };
    var find = function (__dict_Foldable_382) {
        return function (p) {
            return function (f) {
                var _1195 = foldMap(__dict_Foldable_382)(Data_Monoid.monoidArray())(function (x) {
                    return p(x) ? [ x ] : [  ];
                })(f);
                if (_1195.length >= 1) {
                    var _1197 = _1195.slice(1);
                    return new Data_Maybe.Just(_1195[0]);
                };
                if (_1195.length === 0) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var any = function (__dict_Foldable_383) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(or(foldableArray()))(foldMap(__dict_Foldable_383)(Data_Monoid.monoidArray())(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_384) {
        return function (__dict_Foldable_385) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(any(__dict_Foldable_385))(Prelude["=="](__dict_Eq_384));
        };
    };
    var notElem = function (__dict_Eq_386) {
        return function (__dict_Foldable_387) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude.not(Prelude.boolLikeBoolean()))(elem(__dict_Eq_386)(__dict_Foldable_387)(x));
            };
        };
    };
    var and = function (__dict_Foldable_388) {
        return foldl(__dict_Foldable_388)(Prelude["&&"](Prelude.boolLikeBoolean()))(true);
    };
    var all = function (__dict_Foldable_389) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr())(and(foldableArray()))(foldMap(__dict_Foldable_389)(Data_Monoid.monoidArray())(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        lookup: lookup, 
        find: find, 
        notElem: notElem, 
        elem: elem, 
        product: product, 
        sum: sum, 
        all: all, 
        any: any, 
        or: or, 
        and: and, 
        mconcat: mconcat, 
        sequence_: sequence_, 
        for_: for_, 
        traverse_: traverse_, 
        fold: fold, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe, 
        foldableRef: foldableRef, 
        foldableTuple: foldableTuple
    };
})();
var PS = PS || {};
PS.Data_Monoid_Last = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Last = {
        create: function (value) {
            return value;
        }
    };
    var showLast = function (__dict_Show_390) {
        return new Prelude.Show(function (_378) {
            return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_390))(_378) + ")");
        });
    };
    var semigroupLast = function () {
        return new Prelude.Semigroup(function (_379) {
            return function (_380) {
                if (_380 instanceof Data_Maybe.Just) {
                    return _380;
                };
                if (_380 instanceof Data_Maybe.Nothing) {
                    return _379;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var runLast = function (_371) {
        return _371;
    };
    var monoidLast = function () {
        return new Data_Monoid.Monoid(semigroupLast, Data_Maybe.Nothing.value);
    };
    var eqLast = function (__dict_Eq_392) {
        return new Prelude.Eq(function (_374) {
            return function (_375) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_392))(_374)(_375);
            };
        }, function (_372) {
            return function (_373) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_392))(_372)(_373);
            };
        });
    };
    var ordLast = function (__dict_Ord_391) {
        return new Prelude.Ord(function () {
            return eqLast(__dict_Ord_391["__superclass_Prelude.Eq_0"]());
        }, function (_376) {
            return function (_377) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_391))(_376)(_377);
            };
        });
    };
    return {
        Last: Last, 
        runLast: runLast, 
        eqLast: eqLast, 
        ordLast: ordLast, 
        showLast: showLast, 
        semigroupLast: semigroupLast, 
        monoidLast: monoidLast
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Char = PS.Data_Char;
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    function _charAt(i, s, Just, Nothing) {  if (i < 0 || i >= s.length) return Nothing;  else return Just(s.charAt(i));};
    function charCodeAt(i) {  return function(s) {    return s.charCodeAt(i);   };};
    function fromCharArray(a) {   return a.join('');  };
    function indexOf(x) {  return function(s) {    return s.indexOf(x);  }; };
    function indexOf$prime(x) {  return function(startAt) {    return function(s) {      return s.indexOf(x, startAt);    };   }; };
    function lastIndexOf(x) {  return function(s) {    return s.lastIndexOf(x);  };};
    function lastIndexOf$prime(x) {  return function(startAt) {    return function(s) {      return s.lastIndexOf(x, startAt);    };   }; };
    function length(s) {  return s.length;};
    function localeCompare(s1) {  return function(s2) {    return s1.localeCompare(s2);  };};
    function replace(s1) {  return function(s2) {    return function(s3) {      return s3.replace(s1, s2);    };  };};
    function take(n) {  return function(s) {    return s.substr(0, n);  };};
    function drop(n) {  return function(s) {    return s.substr(n);  };};
    function split(sep) {  return function(s) {    return s.split(sep);  };};
    function toCharArray(s) {   return s.split('');};
    function toLower(s) {  return s.toLowerCase();};
    function toUpper(s) {  return s.toUpperCase();};
    function trim(s) {  return s.trim();};
    function joinWith (s) {  return function (xs) {    return xs.join(s);  };};
    var fromChar = Data_Char.charString;
    var charAt = function (n) {
        return function (s) {
            return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        joinWith: joinWith, 
        trim: trim, 
        toUpper: toUpper, 
        toLower: toLower, 
        toCharArray: toCharArray, 
        split: split, 
        drop: drop, 
        take: take, 
        replace: replace, 
        localeCompare: localeCompare, 
        length: length, 
        "lastIndexOf'": lastIndexOf$prime, 
        lastIndexOf: lastIndexOf, 
        "indexOf'": indexOf$prime, 
        indexOf: indexOf, 
        fromChar: fromChar, 
        fromCharArray: fromCharArray, 
        charCodeAt: charCodeAt, 
        charAt: charAt
    };
})();
var PS = PS || {};
PS.Data_String_Regex = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    function showRegex$prime(r){  return '' + r;};
    function regex$prime(s1) {  return function(s2) {    return new RegExp(s1, s2);  };};
    function source(r) {  return r.source;};
    function flags(r) {  return {    multiline: r.multiline,    ignoreCase: r.ignoreCase,    global: r.global,    sticky: !!r.sticky,    unicode: !!r.unicode  };};
    function test(r) {  return function (s) {    return r.test(s);  };};
    function match(r) {  return function (s) {    return s.match(r);   };};
    function replace(r) {  return function(s1) {    return function(s2) {      return s2.replace(r, s1);    };  };};
    function replace$prime(r) {  return function(f) {    return function(s2) {      return s2.replace(r, function (match) {        return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));      });    };  };};
    function search(r) {  return function (s) {    return s.search(r);  };};
    var showRegex = function () {
        return new Prelude.Show(showRegex$prime);
    };
    var renderFlags = function (flags_1) {
        return (flags_1.global ? "g" : "") + ((flags_1.ignoreCase ? "i" : "") + ((flags_1.multiline ? "m" : "") + ((flags_1.sticky ? "y" : "") + (flags_1.unicode ? "u" : ""))));
    };
    var regex = function (source_1) {
        return function (flags_1) {
            return regex$prime(source_1)(renderFlags(flags_1));
        };
    };
    var parseFlags = function (s) {
        return {
            global: Data_String.indexOf("g")(s) >= 0, 
            ignoreCase: Data_String.indexOf("i")(s) >= 0, 
            multiline: Data_String.indexOf("m")(s) >= 0, 
            sticky: Data_String.indexOf("y")(s) >= 0, 
            unicode: Data_String.indexOf("u")(s) >= 0
        };
    };
    return {
        search: search, 
        "replace'": replace$prime, 
        replace: replace, 
        match: match, 
        test: test, 
        parseFlags: parseFlags, 
        renderFlags: renderFlags, 
        flags: flags, 
        source: source, 
        regex: regex, 
        showRegex: showRegex
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Array = PS.Data_Array;
    function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableTuple = function () {
        return new Traversable(Data_Foldable.foldableTuple, Data_Tuple.functorTuple, function (__dict_Applicative_394) {
            return function (_395) {
                return Prelude["<$>"]((__dict_Applicative_394["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_395.value0))(_395.value1);
            };
        }, function (__dict_Applicative_393) {
            return function (_393) {
                return function (_394) {
                    return Prelude["<$>"]((__dict_Applicative_393["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_394.value0))(_393(_394.value1));
                };
            };
        });
    };
    var traversableRef = function () {
        return new Traversable(Data_Foldable.foldableRef, Data_Eq.functorRef, function (__dict_Applicative_396) {
            return function (_389) {
                return Prelude["<$>"]((__dict_Applicative_396["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_389);
            };
        }, function (__dict_Applicative_395) {
            return function (_387) {
                return function (_388) {
                    return Prelude["<$>"]((__dict_Applicative_395["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_387(_388));
                };
            };
        });
    };
    var traversableMaybe = function () {
        return new Traversable(Data_Foldable.foldableMaybe, Data_Maybe.functorMaybe, function (__dict_Applicative_398) {
            return function (_392) {
                if (_392 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_398)(Data_Maybe.Nothing.value);
                };
                if (_392 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_398["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_392.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, function (__dict_Applicative_397) {
            return function (_390) {
                return function (_391) {
                    if (_391 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(__dict_Applicative_397)(Data_Maybe.Nothing.value);
                    };
                    if (_391 instanceof Data_Maybe.Just) {
                        return Prelude["<$>"]((__dict_Applicative_397["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_390(_391.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var traversableEither = function () {
        return new Traversable(Data_Foldable.foldableEither, Data_Either.functorEither, function (__dict_Applicative_400) {
            return function (_386) {
                if (_386 instanceof Data_Either.Left) {
                    return Prelude.pure(__dict_Applicative_400)(new Data_Either.Left(_386.value0));
                };
                if (_386 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_400["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_386.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, function (__dict_Applicative_399) {
            return function (_384) {
                return function (_385) {
                    if (_385 instanceof Data_Either.Left) {
                        return Prelude.pure(__dict_Applicative_399)(new Data_Either.Left(_385.value0));
                    };
                    if (_385 instanceof Data_Either.Right) {
                        return Prelude["<$>"]((__dict_Applicative_399["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_384(_385.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = function () {
        return new Traversable(Data_Foldable.foldableArray, Data_Array.functorArray, function (__dict_Applicative_402) {
            return function (_383) {
                if (_383.length === 0) {
                    return Prelude.pure(__dict_Applicative_402)([  ]);
                };
                if (_383.length >= 1) {
                    var _1233 = _383.slice(1);
                    return Prelude["<*>"](__dict_Applicative_402["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_402["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_383[0]))(sequence(traversableArray())(__dict_Applicative_402)(_1233));
                };
                throw new Error("Failed pattern match");
            };
        }, function (__dict_Applicative_401) {
            return function (_381) {
                return function (_382) {
                    if (_382.length === 0) {
                        return Prelude.pure(__dict_Applicative_401)([  ]);
                    };
                    if (_382.length >= 1) {
                        var _1237 = _382.slice(1);
                        return Prelude["<*>"](__dict_Applicative_401["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_401["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_381(_382[0])))(traverse(traversableArray())(__dict_Applicative_401)(_381)(_1237));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var zipWithA = function (__dict_Applicative_403) {
        return function (f) {
            return function (xs) {
                return function (ys) {
                    return sequence(traversableArray())(__dict_Applicative_403)(Data_Array.zipWith(f)(xs)(ys));
                };
            };
        };
    };
    var $$for = function (__dict_Applicative_404) {
        return function (__dict_Traversable_405) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_405)(__dict_Applicative_404)(f)(x);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        zipWithA: zipWithA, 
        "for": $$for, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray, 
        traversableEither: traversableEither, 
        traversableRef: traversableRef, 
        traversableMaybe: traversableMaybe, 
        traversableTuple: traversableTuple
    };
})();
var PS = PS || {};
PS.Control_Monad_Trampoline = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var suspend = function (t) {
        return new Control_Monad_Free.Free(Data_Lazy.defer(Prelude["const"](t)));
    };
    var runTrampoline = Control_Monad_Free.go(Data_Lazy.functorLazy())(Data_Lazy.force);
    var done = Prelude.pure(Control_Monad_Free.applicativeFree(Data_Lazy.functorLazy()));
    var delay$prime = function (a) {
        return new Control_Monad_Free.Free(Prelude["<$>"](Data_Lazy.functorLazy())(done)(a));
    };
    var delay = Prelude["<<<"](Prelude.semigroupoidArr())(delay$prime)(Data_Lazy.defer);
    return {
        runTrampoline: runTrampoline, 
        delay: delay, 
        "delay'": delay$prime, 
        suspend: suspend, 
        done: done
    };
})();
var PS = PS || {};
PS.Control_Comonad_Cofree = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Alt = PS.Control_Alt;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    var Data_Traversable = PS.Data_Traversable;
    function Cofree(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cofree.create = function (value0) {
        return function (value1) {
            return new Cofree(value0, value1);
        };
    };
    var tail = function (_397) {
        return Control_Monad_Trampoline.runTrampoline(_397.value1);
    };
    var mkCofree = function (a) {
        return function (t) {
            return new Cofree(a, Prelude.pure(Control_Monad_Free.applicativeFree(Data_Lazy.functorLazy()))(t));
        };
    };
    var head = function (_396) {
        return _396.value0;
    };
    var foldableCofree = function (__dict_Foldable_410) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_411) {
            return function (f) {
                var go = function (fa) {
                    return Prelude["++"](__dict_Monoid_411["__superclass_Prelude.Semigroup_0"]())(f(head(fa)))(Data_Foldable.foldMap(__dict_Foldable_410)(__dict_Monoid_411)(go)(tail(fa)));
                };
                return go;
            };
        }, function (f) {
            var go = function (b) {
                return function (fa) {
                    var fa$prime = tail(fa);
                    var b$prime = f(b)(head(fa));
                    return Data_Foldable.foldl(__dict_Foldable_410)(go)(b$prime)(fa$prime);
                };
            };
            return go;
        }, function (f) {
            var go = function (fa) {
                return function (b) {
                    var b$prime = Data_Foldable.foldr(__dict_Foldable_410)(go)(b)(tail(fa));
                    var a$prime = head(fa);
                    return f(a$prime)(b$prime);
                };
            };
            return Prelude.flip(go);
        });
    };
    var _tail = function (_398) {
        return _398.value1;
    };
    var _lift = function (__dict_Functor_416) {
        return function (f) {
            return Prelude["<$>"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy()))(Prelude["<$>"](__dict_Functor_416)(f));
        };
    };
    var functorCofree = function (__dict_Functor_418) {
        return new Prelude.Functor(function (f) {
            var loop = function (fa) {
                return new Cofree(f(head(fa)), _lift(__dict_Functor_418)(loop)(_tail(fa)));
            };
            return loop;
        });
    };
    var applyCofree = function (__dict_Apply_414) {
        return new Prelude.Apply(function (f) {
            return function (x) {
                var t = Prelude["<*>"](__dict_Apply_414)(Prelude["<$>"](__dict_Apply_414["__superclass_Prelude.Functor_0"]())(Prelude["<*>"](applyCofree(__dict_Apply_414)))(tail(f)))(tail(x));
                var h = head(f)(head(x));
                return mkCofree(h)(t);
            };
        }, function () {
            return functorCofree(__dict_Apply_414["__superclass_Prelude.Functor_0"]());
        });
    };
    var applicativeCofree = function (__dict_Applicative_415) {
        return new Prelude.Applicative(function () {
            return applyCofree(__dict_Applicative_415["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return mkCofree(a)(Prelude.pure(__dict_Applicative_415)(Prelude.pure(applicativeCofree(__dict_Applicative_415))(a)));
        });
    };
    var bindCofree = function (__dict_MonadPlus_413) {
        return new Prelude.Bind(function (fa) {
            return function (f) {
                var loop = function (fa_1) {
                    var fh = f(head(fa_1));
                    return mkCofree(head(fh))(Control_Alt["<|>"](((__dict_MonadPlus_413["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(tail(fh))(Prelude["<$>"]((((__dict_MonadPlus_413["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(loop)(tail(fa_1))));
                };
                return loop(fa);
            };
        }, function () {
            return applyCofree(((__dict_MonadPlus_413["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
        });
    };
    var monadCofree = function (__dict_MonadPlus_406) {
        return new Prelude.Monad(function () {
            return applicativeCofree((__dict_MonadPlus_406["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindCofree(__dict_MonadPlus_406);
        });
    };
    var extendCofree = function (__dict_Functor_417) {
        return new Control_Extend.Extend(function (f) {
            var loop = function (fa) {
                return new Cofree(f(fa), _lift(__dict_Functor_417)(loop)(_tail(fa)));
            };
            return loop;
        }, function () {
            return functorCofree(__dict_Functor_417);
        });
    };
    var comonadCofree = function (__dict_Functor_412) {
        return new Control_Comonad.Comonad(function () {
            return extendCofree(__dict_Functor_412);
        }, head);
    };
    var traversableCofree = function (__dict_Traversable_407) {
        return new Data_Traversable.Traversable(function () {
            return foldableCofree(__dict_Traversable_407["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return functorCofree(__dict_Traversable_407["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_409) {
            return Data_Traversable.traverse(traversableCofree(__dict_Traversable_407))(__dict_Applicative_409)(Prelude.id(Prelude.categoryArr()));
        }, function (__dict_Applicative_408) {
            return function (f) {
                var loop = function (ta) {
                    return Prelude["<*>"](__dict_Applicative_408["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_408["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(mkCofree)(f(head(ta))))(Data_Traversable.traverse(__dict_Traversable_407)(__dict_Applicative_408)(loop)(tail(ta)));
                };
                return loop;
            };
        });
    };
    return {
        Cofree: Cofree, 
        tail: tail, 
        head: head, 
        mkCofree: mkCofree, 
        functorCofree: functorCofree, 
        foldableCofree: foldableCofree, 
        traversableCofree: traversableCofree, 
        extendCofree: extendCofree, 
        comonadCofree: comonadCofree, 
        applyCofree: applyCofree, 
        applicativeCofree: applicativeCofree, 
        bindCofree: bindCofree, 
        monadCofree: monadCofree
    };
})();
var PS = PS || {};
PS.Data_Foreign_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    var Data_Foreign_Undefined = PS.Data_Foreign_Undefined;
    var Data_Foreign_NullOrUndefined = PS.Data_Foreign_NullOrUndefined;
    var Data_Foreign_Null = PS.Data_Foreign_Null;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    function IsForeign(read) {
        this.read = read;
    };
    var stringIsForeign = function () {
        return new IsForeign(Data_Foreign.readString);
    };
    var read = function (dict) {
        return dict.read;
    };
    var readJSON = function (__dict_IsForeign_419) {
        return function (json) {
            return Prelude[">>="](Data_Either.bindEither())(Data_Foreign.parseJSON(json))(read(__dict_IsForeign_419));
        };
    };
    var readWith = function (__dict_IsForeign_420) {
        return function (f) {
            return function (value) {
                return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_420)(value));
            };
        };
    };
    var readProp = function (__dict_IsForeign_421) {
        return function (__dict_Index_422) {
            return function (prop) {
                return function (value) {
                    return Prelude[">>="](Data_Either.bindEither())(Data_Foreign_Index["!"](__dict_Index_422)(value)(prop))(readWith(__dict_IsForeign_421)(Data_Foreign_Index.errorAt(__dict_Index_422)(prop)));
                };
            };
        };
    };
    var undefinedIsForeign = function (__dict_IsForeign_423) {
        return new IsForeign(Data_Foreign_Undefined.readUndefined(read(__dict_IsForeign_423)));
    };
    var numberIsForeign = function () {
        return new IsForeign(Data_Foreign.readNumber);
    };
    var nullOrUndefinedIsForeign = function (__dict_IsForeign_424) {
        return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(__dict_IsForeign_424)));
    };
    var nullIsForeign = function (__dict_IsForeign_425) {
        return new IsForeign(Data_Foreign_Null.readNull(read(__dict_IsForeign_425)));
    };
    var booleanIsForeign = function () {
        return new IsForeign(Data_Foreign.readBoolean);
    };
    var arrayIsForeign = function (__dict_IsForeign_426) {
        return new IsForeign(function (value) {
            var readElement = function (i) {
                return function (value_1) {
                    return readWith(__dict_IsForeign_426)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
                };
            };
            var readElements = function (arr) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray())(Data_Either.applicativeEither())(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
            };
            return Prelude[">>="](Data_Either.bindEither())(Data_Foreign.readArray(value))(readElements);
        });
    };
    return {
        IsForeign: IsForeign, 
        readProp: readProp, 
        readWith: readWith, 
        readJSON: readJSON, 
        read: read, 
        stringIsForeign: stringIsForeign, 
        booleanIsForeign: booleanIsForeign, 
        numberIsForeign: numberIsForeign, 
        arrayIsForeign: arrayIsForeign, 
        nullIsForeign: nullIsForeign, 
        undefinedIsForeign: undefinedIsForeign, 
        nullOrUndefinedIsForeign: nullOrUndefinedIsForeign
    };
})();
var PS = PS || {};
PS.Data_Lazy_List = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Lazy = PS.Data_Lazy;
    var Data_Array = PS.Data_Array;
    var Data_Monoid = PS.Data_Monoid;
    function Nil() {

    };
    Nil.value = new Nil();
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    function showItems (l) {  return l.join(', ');};
    var $less$dot$greater = function (_399) {
        return function (_400) {
            if (_399 instanceof Nil) {
                return Data_Lazy.force(_400);
            };
            if (_399 instanceof Cons) {
                return new Cons(_399.value0, Prelude["<$>"](Data_Lazy.functorLazy())(function (xs$prime) {
                    return $less$dot$greater(xs$prime)(_400);
                })(_399.value1));
            };
            throw new Error("Failed pattern match");
        };
    };
    var toArray = function (_401) {
        if (_401 instanceof Nil) {
            return [  ];
        };
        if (_401 instanceof Cons) {
            return Prelude[":"](_401.value0)(toArray(Data_Lazy.force(_401.value1)));
        };
        throw new Error("Failed pattern match");
    };
    var take = function (_403) {
        return function (_404) {
            if (_403 < 1) {
                return Nil.value;
            };
            if (_404 instanceof Nil) {
                return Nil.value;
            };
            if (_404 instanceof Cons) {
                return new Cons(_404.value0, Data_Lazy.defer(function (_) {
                    return take(_403 - 1)(Data_Lazy.force(_404.value1));
                }));
            };
            throw new Error("Failed pattern match");
        };
    };
    var showList = function (__dict_Show_427) {
        return new Prelude.Show(function (l) {
            return "List(" + (showItems(Data_Array.map(Prelude.show(__dict_Show_427))(toArray(l))) + ")");
        });
    };
    var semigroupList = function () {
        return new Prelude.Semigroup(function (xs) {
            return function (ys) {
                return $less$dot$greater(xs)(Data_Lazy.defer(function (_) {
                    return ys;
                }));
            };
        });
    };
    var repeat = function (x) {
        return new Cons(x, Data_Lazy.defer(function (_) {
            return repeat(x);
        }));
    };
    var monoidList = function () {
        return new Data_Monoid.Monoid(semigroupList, Nil.value);
    };
    var functorList = function () {
        return new Prelude.Functor(function (_409) {
            return function (_410) {
                if (_410 instanceof Nil) {
                    return Nil.value;
                };
                if (_410 instanceof Cons) {
                    return new Cons(_409(_410.value0), Prelude["<$>"](Data_Lazy.functorLazy())(Prelude["<$>"](functorList())(_409))(_410.value1));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var fromArray = function (_402) {
        if (_402.length === 0) {
            return Nil.value;
        };
        if (_402.length >= 1) {
            var _1264 = _402.slice(1);
            return new Cons(_402[0], Data_Lazy.defer(function (_) {
                return fromArray(_1264);
            }));
        };
        throw new Error("Failed pattern match");
    };
    var eqList = function (__dict_Eq_428) {
        return new Prelude.Eq(function (l) {
            return function (l$prime) {
                return !Prelude["=="](eqList(__dict_Eq_428))(l)(l$prime);
            };
        }, function (_407) {
            return function (_408) {
                if (_407 instanceof Nil && _408 instanceof Nil) {
                    return true;
                };
                if (_407 instanceof Cons && _408 instanceof Cons) {
                    return Prelude["=="](__dict_Eq_428)(_407.value0)(_408.value0) && Prelude["=="](eqList(__dict_Eq_428))(Data_Lazy.force(_407.value1))(Data_Lazy.force(_408.value1));
                };
                return false;
            };
        });
    };
    var drop = function (__copy__405) {
        return function (__copy__406) {
            var _405 = __copy__405;
            var _406 = __copy__406;
            tco: while (true) {
                if (_405 < 1) {
                    return _406;
                };
                if (_406 instanceof Nil) {
                    return Nil.value;
                };
                if (_406 instanceof Cons) {
                    var __tco__405 = _405 - 1;
                    var __tco__406 = Data_Lazy.force(_406.value1);
                    _405 = __tco__405;
                    _406 = __tco__406;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var applicativeList = function () {
        return new Prelude.Applicative(applyList, function (x) {
            return new Cons(x, Data_Lazy.defer(function (_) {
                return Nil.value;
            }));
        });
    };
    var applyList = function () {
        return new Prelude.Apply(Prelude.ap(monadList()), functorList);
    };
    var monadList = function () {
        return new Prelude.Monad(applicativeList, bindList);
    };
    var bindList = function () {
        return new Prelude.Bind(function (_411) {
            return function (_412) {
                if (_411 instanceof Nil) {
                    return Nil.value;
                };
                if (_411 instanceof Cons) {
                    return $less$dot$greater(_412(_411.value0))(Prelude["<$>"](Data_Lazy.functorLazy())(function (xs$prime) {
                        return Prelude[">>="](bindList())(xs$prime)(_412);
                    })(_411.value1));
                };
                throw new Error("Failed pattern match");
            };
        }, applyList);
    };
    return {
        Nil: Nil, 
        Cons: Cons, 
        drop: drop, 
        take: take, 
        repeat: repeat, 
        fromArray: fromArray, 
        toArray: toArray, 
        eqList: eqList, 
        showList: showList, 
        semigroupList: semigroupList, 
        monoidList: monoidList, 
        functorList: functorList, 
        applyList: applyList, 
        applicativeList: applicativeList, 
        bindList: bindList, 
        monadList: monadList
    };
})();
var PS = PS || {};
PS.Data_Machine_Mealy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Bind = PS.Control_Bind;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    var Control_Arrow = PS.Control_Arrow;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function MealyT(value0) {
        this.value0 = value0;
    };
    MealyT.create = function (value0) {
        return new MealyT(value0);
    };
    function Emit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Emit.create = function (value0) {
        return function (value1) {
            return new Emit(value0, value1);
        };
    };
    function Halt() {

    };
    Halt.value = new Halt();
    var stepMealy = function (__dict_Monad_430) {
        return function (_413) {
            return function (_414) {
                return Control_Bind.join(__dict_Monad_430["__superclass_Prelude.Bind_1"]())(Prelude["<*>"]((__dict_Monad_430["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(_414.value0)(Prelude.pure(__dict_Monad_430["__superclass_Prelude.Applicative_0"]())(_413)));
            };
        };
    };
    var runMealy = function (__dict_Monad_431) {
        return function (m) {
            var f = function (_416) {
                if (_416 instanceof Halt) {
                    return Prelude.pure(__dict_Monad_431["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
                };
                if (_416 instanceof Emit) {
                    return runMealy(__dict_Monad_431)(_416.value1);
                };
                throw new Error("Failed pattern match");
            };
            return Prelude[">>="](__dict_Monad_431["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_431)(Prelude.unit)(m))(f);
        };
    };
    var pureMealy = function (__dict_Applicative_432) {
        return function (f) {
            return MealyT.create(Prelude.pure(__dict_Applicative_432)(function (s) {
                return Prelude.pure(__dict_Applicative_432)(f(s));
            }));
        };
    };
    var mealy = function (__dict_Applicative_435) {
        return function (f) {
            return MealyT.create(Prelude.pure(__dict_Applicative_435)(f));
        };
    };
    var profunctorMealy = function (__dict_Monad_437) {
        return new Data_Profunctor.Profunctor(function (l) {
            return function (r) {
                var remap = function (m) {
                    var g = function (_430) {
                        if (_430 instanceof Emit) {
                            return new Emit(r(_430.value0), remap(_430.value1));
                        };
                        if (_430 instanceof Halt) {
                            return Halt.value;
                        };
                        throw new Error("Failed pattern match");
                    };
                    return mealy(__dict_Monad_437["__superclass_Prelude.Applicative_0"]())(function (s) {
                        return Prelude["<$>"](((__dict_Monad_437["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_437)(l(s))(m));
                    });
                };
                return remap;
            };
        });
    };
    var semigroupMealy = function (__dict_Monad_438) {
        return new Prelude.Semigroup(function (l) {
            return function (r) {
                return mealy(__dict_Monad_438["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var g = function (_431) {
                        if (_431 instanceof Emit) {
                            return Prelude.pure(__dict_Monad_438["__superclass_Prelude.Applicative_0"]())(new Emit(_431.value0, Prelude["<>"](semigroupMealy(__dict_Monad_438))(_431.value1)(r)));
                        };
                        if (_431 instanceof Halt) {
                            return stepMealy(__dict_Monad_438)(s)(r);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_438["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_438)(s)(l))(g);
                });
            };
        });
    };
    var monoidMealy = function (__dict_Monad_436) {
        return new Data_Monoid.Monoid(function () {
            return semigroupMealy(__dict_Monad_436);
        }, mealy(__dict_Monad_436["__superclass_Prelude.Applicative_0"]())(function (s) {
            return Prelude.pure(__dict_Monad_436["__superclass_Prelude.Applicative_0"]())(Halt.value);
        }));
    };
    var semigroupoidMealy = function (__dict_Monad_439) {
        return new Prelude.Semigroupoid(function (f) {
            return function (g) {
                var gb = function (_432) {
                    if (_432 instanceof Halt) {
                        return Prelude.pure(__dict_Monad_439["__superclass_Prelude.Applicative_0"]())(Halt.value);
                    };
                    if (_432 instanceof Emit) {
                        var fc = function (_433) {
                            if (_433 instanceof Emit) {
                                return new Emit(_433.value0, Prelude["<<<"](semigroupoidMealy(__dict_Monad_439))(_433.value1)(_432.value1));
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](((__dict_Monad_439["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(fc)(stepMealy(__dict_Monad_439)(_432.value0)(f));
                    };
                    throw new Error("Failed pattern match");
                };
                return mealy(__dict_Monad_439["__superclass_Prelude.Applicative_0"]())(function (b) {
                    return Prelude[">>="](__dict_Monad_439["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_439)(b)(g))(gb);
                });
            };
        });
    };
    var sink = function (__dict_Monad_440) {
        return function (f) {
            return mealy(__dict_Monad_440["__superclass_Prelude.Applicative_0"]())(function (a) {
                return Prelude["<$>"](((__dict_Monad_440["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["const"](new Emit(Prelude.unit, sink(__dict_Monad_440)(f))))(f(a));
            });
        };
    };
    var source = function (__dict_Monad_441) {
        return function (src) {
            return mealy(__dict_Monad_441["__superclass_Prelude.Applicative_0"]())(function (_) {
                return Prelude["<$>"](((__dict_Monad_441["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(Emit.create)(source(__dict_Monad_441)(src)))(src);
            });
        };
    };
    var loop = function (__dict_Monad_442) {
        return function (m) {
            var loop$prime = function (m_1) {
                return mealy(__dict_Monad_442["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var f = function (_419) {
                        if (_419 instanceof Halt) {
                            return stepMealy(__dict_Monad_442)(s)(loop(__dict_Monad_442)(m));
                        };
                        if (_419 instanceof Emit) {
                            return Prelude.pure(__dict_Monad_442["__superclass_Prelude.Applicative_0"]())(new Emit(_419.value0, loop$prime(_419.value1)));
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_442["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_442)(s)(m_1))(f);
                });
            };
            return loop$prime(m);
        };
    };
    var scanl = function (__dict_Monad_443) {
        return function (f) {
            var loop_1 = function (b) {
                return function (m) {
                    return mealy(__dict_Monad_443["__superclass_Prelude.Applicative_0"]())(function (s) {
                        var g = function (_420) {
                            if (_420 instanceof Halt) {
                                return Halt.value;
                            };
                            if (_420 instanceof Emit) {
                                var b$prime = f(b)(_420.value0);
                                return new Emit(b$prime, loop_1(b$prime)(_420.value1));
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](((__dict_Monad_443["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_443)(s)(m));
                    });
                };
            };
            return loop_1;
        };
    };
    var interleave = function (__dict_Monad_444) {
        return function (m1) {
            return function (m2) {
                return mealy(__dict_Monad_444["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var f = function (_423) {
                        if (_423 instanceof Halt) {
                            return stepMealy(__dict_Monad_444)(s)(m2);
                        };
                        if (_423 instanceof Emit) {
                            return Prelude.pure(__dict_Monad_444["__superclass_Prelude.Applicative_0"]())(new Emit(_423.value0, interleave(__dict_Monad_444)(m2)(_423.value1)));
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_444["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_444)(s)(m1))(f);
                });
            };
        };
    };
    var ifte = function (__dict_Monad_445) {
        return function (ma) {
            return function (f) {
                return function (mb) {
                    return mealy(__dict_Monad_445["__superclass_Prelude.Applicative_0"]())(function (s) {
                        var h = function (_425) {
                            return function (_426) {
                                if (_426 instanceof Halt) {
                                    return Halt.value;
                                };
                                if (_426 instanceof Emit) {
                                    return new Emit(_426.value0, Prelude["<>"](semigroupMealy(__dict_Monad_445))(_426.value1)(ifte(__dict_Monad_445)(_425)(f)(mb)));
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                        var g = function (_424) {
                            if (_424 instanceof Halt) {
                                return stepMealy(__dict_Monad_445)(s)(mb);
                            };
                            if (_424 instanceof Emit) {
                                return Prelude["<$>"](((__dict_Monad_445["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h(_424.value1))(stepMealy(__dict_Monad_445)(s)(f(_424.value0)));
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude[">>="](__dict_Monad_445["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_445)(s)(ma))(g);
                    });
                };
            };
        };
    };
    var halt = function (__dict_Applicative_446) {
        return pureMealy(__dict_Applicative_446)(Prelude["const"](Halt.value));
    };
    var msplit = function (__dict_Monad_447) {
        return function (m) {
            var f = function (_422) {
                if (_422 instanceof Halt) {
                    return new Emit(Data_Maybe.Nothing.value, halt(__dict_Monad_447["__superclass_Prelude.Applicative_0"]()));
                };
                if (_422 instanceof Emit) {
                    return new Emit(Data_Maybe.Just.create(new Data_Tuple.Tuple(_422.value0, _422.value1)), msplit(__dict_Monad_447)(_422.value1));
                };
                throw new Error("Failed pattern match");
            };
            return mealy(__dict_Monad_447["__superclass_Prelude.Applicative_0"]())(function (s) {
                return Prelude["<$>"](((__dict_Monad_447["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(stepMealy(__dict_Monad_447)(s)(m));
            });
        };
    };
    var singleton = function (__dict_Monad_449) {
        return function (a) {
            return pureMealy(__dict_Monad_449["__superclass_Prelude.Applicative_0"]())(function (s) {
                return new Emit(a, halt(__dict_Monad_449["__superclass_Prelude.Applicative_0"]()));
            });
        };
    };
    var take = function (__dict_Monad_450) {
        return function (n) {
            return function (m) {
                var f = function (_417) {
                    if (_417 instanceof Halt) {
                        return Halt.value;
                    };
                    if (_417 instanceof Emit) {
                        return new Emit(_417.value0, take(__dict_Monad_450)(n - 1)(_417.value1));
                    };
                    throw new Error("Failed pattern match");
                };
                return n <= 0 ? halt(__dict_Monad_450["__superclass_Prelude.Applicative_0"]()) : mealy(__dict_Monad_450["__superclass_Prelude.Applicative_0"]())(function (s) {
    return Prelude["<$>"](((__dict_Monad_450["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(stepMealy(__dict_Monad_450)(s)(m));
});
            };
        };
    };
    var once = function (__dict_Monad_451) {
        return take(__dict_Monad_451)(1);
    };
    var $greater$greater$minus = function (__dict_Monad_452) {
        return function (ma) {
            return function (f) {
                return ifte(__dict_Monad_452)(ma)(f)(halt(__dict_Monad_452["__superclass_Prelude.Applicative_0"]()));
            };
        };
    };
    var functorMealy = function (__dict_Monad_453) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                var g = function (_427) {
                    if (_427 instanceof Emit) {
                        return new Emit(f(_427.value0), Prelude["<$>"](functorMealy(__dict_Monad_453))(f)(_427.value1));
                    };
                    if (_427 instanceof Halt) {
                        return Halt.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return mealy(__dict_Monad_453["__superclass_Prelude.Applicative_0"]())(function (s) {
                    return Prelude["<$>"](((__dict_Monad_453["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_453)(s)(m));
                });
            };
        });
    };
    var fromMaybe = function (__dict_Monad_454) {
        return function (_415) {
            if (_415 instanceof Data_Maybe.Nothing) {
                return halt(__dict_Monad_454["__superclass_Prelude.Applicative_0"]());
            };
            if (_415 instanceof Data_Maybe.Just) {
                return singleton(__dict_Monad_454)(_415.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
    var fromArray = function (__dict_Monad_455) {
        return function (a) {
            var len = Data_Array.length(a);
            var loop_1 = function (_421) {
                if (_421 < 0 || _421 >= len) {
                    return halt(__dict_Monad_455["__superclass_Prelude.Applicative_0"]());
                };
                return Prelude["<>"](semigroupMealy(__dict_Monad_455))(fromMaybe(__dict_Monad_455)(Data_Array["!!"](a)(_421)))(loop_1(_421 + 1));
            };
            return loop_1(0);
        };
    };
    var drop = function (__dict_Monad_456) {
        return function (n) {
            return function (m) {
                return n <= 0 ? m : mealy(__dict_Monad_456["__superclass_Prelude.Applicative_0"]())(function (s) {
    var f = function (_418) {
        if (_418 instanceof Halt) {
            return Prelude.pure(__dict_Monad_456["__superclass_Prelude.Applicative_0"]())(Halt.value);
        };
        if (_418 instanceof Emit) {
            return stepMealy(__dict_Monad_456)(s)(drop(__dict_Monad_456)(n - 1)(_418.value1));
        };
        throw new Error("Failed pattern match");
    };
    return Prelude[">>="](__dict_Monad_456["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_456)(s)(m))(f);
});
            };
        };
    };
    var collect = function (__dict_Monad_457) {
        return scanl(__dict_Monad_457)(Prelude.flip(Prelude[":"]))([  ]);
    };
    var categoryMealy = function (__dict_Monad_458) {
        return new Prelude.Category(function () {
            return semigroupoidMealy(__dict_Monad_458);
        }, pureMealy(__dict_Monad_458["__superclass_Prelude.Applicative_0"]())(function (t) {
            return new Emit(t, Prelude.id(categoryMealy(__dict_Monad_458)));
        }));
    };
    var arrowMealy = function (__dict_Monad_460) {
        return new Control_Arrow.Arrow(function () {
            return categoryMealy(__dict_Monad_460);
        }, function (f) {
            return pureMealy(__dict_Monad_460["__superclass_Prelude.Applicative_0"]())(function (b) {
                return new Emit(f(b), halt(__dict_Monad_460["__superclass_Prelude.Applicative_0"]()));
            });
        }, function (m) {
            return mealy(__dict_Monad_460["__superclass_Prelude.Applicative_0"]())(function (s) {
                var d = Data_Tuple.snd(s);
                var g = function (_434) {
                    if (_434 instanceof Emit) {
                        return new Emit(new Data_Tuple.Tuple(_434.value0, d), Control_Arrow.first(arrowMealy(__dict_Monad_460))(_434.value1));
                    };
                    if (_434 instanceof Halt) {
                        return Halt.value;
                    };
                    throw new Error("Failed pattern match");
                };
                var b = Data_Tuple.fst(s);
                return Prelude["<$>"](((__dict_Monad_460["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_460)(b)(m));
            });
        });
    };
    var applyMealy = function (__dict_Monad_461) {
        return new Prelude.Apply(function (f) {
            return function (x) {
                return mealy(__dict_Monad_461["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var ap = function (_428) {
                        return function (_429) {
                            if (_428 instanceof Halt) {
                                return Halt.value;
                            };
                            if (_429 instanceof Halt) {
                                return Halt.value;
                            };
                            if (_428 instanceof Emit && _429 instanceof Emit) {
                                return new Emit(_428.value0(_429.value0), Prelude["<*>"](applyMealy(__dict_Monad_461))(_428.value1)(_429.value1));
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    return Prelude["<*>"]((__dict_Monad_461["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Monad_461["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(ap)(stepMealy(__dict_Monad_461)(s)(f)))(stepMealy(__dict_Monad_461)(s)(x));
                });
            };
        }, function () {
            return functorMealy(__dict_Monad_461);
        });
    };
    var bindMealy = function (__dict_Monad_459) {
        return new Prelude.Bind(function (m) {
            return function (f) {
                return mealy(__dict_Monad_459["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var g = function (_435) {
                        if (_435 instanceof Emit) {
                            var h = function (_436) {
                                if (_436 instanceof Emit) {
                                    return new Emit(_436.value0, Prelude["<>"](semigroupMealy(__dict_Monad_459))(_436.value1)(Prelude[">>="](bindMealy(__dict_Monad_459))(_435.value1)(f)));
                                };
                                if (_436 instanceof Halt) {
                                    return Halt.value;
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Prelude["<$>"](((__dict_Monad_459["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(stepMealy(__dict_Monad_459)(s)(f(_435.value0)));
                        };
                        if (_435 instanceof Halt) {
                            return Prelude.pure(__dict_Monad_459["__superclass_Prelude.Applicative_0"]())(Halt.value);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_459["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_459)(s)(m))(g);
                });
            };
        }, function () {
            return applyMealy(__dict_Monad_459);
        });
    };
    var zipWith = function (__dict_Monad_429) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](applyMealy(__dict_Monad_429))(Prelude["<$>"](functorMealy(__dict_Monad_429))(f)(a))(b);
                };
            };
        };
    };
    var applicativeMealy = function (__dict_Monad_462) {
        return new Prelude.Applicative(function () {
            return applyMealy(__dict_Monad_462);
        }, function (t) {
            return pureMealy(__dict_Monad_462["__superclass_Prelude.Applicative_0"]())(function (s) {
                return new Emit(t, halt(__dict_Monad_462["__superclass_Prelude.Applicative_0"]()));
            });
        });
    };
    var monadMealy = function (__dict_Monad_434) {
        return new Prelude.Monad(function () {
            return applicativeMealy(__dict_Monad_434);
        }, function () {
            return bindMealy(__dict_Monad_434);
        });
    };
    var altMealy = function (__dict_Monad_464) {
        return new Control_Alt.Alt(function (x) {
            return function (y) {
                return mealy(__dict_Monad_464["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var f = function (_437) {
                        if (_437 instanceof Halt) {
                            return stepMealy(__dict_Monad_464)(s)(y);
                        };
                        if (_437 instanceof Emit) {
                            return Prelude.pure(__dict_Monad_464["__superclass_Prelude.Applicative_0"]())(new Emit(_437.value0, _437.value1));
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_464["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_464)(s)(x))(f);
                });
            };
        }, function () {
            return functorMealy(__dict_Monad_464);
        });
    };
    var plusMealy = function (__dict_Monad_448) {
        return new Control_Plus.Plus(function () {
            return altMealy(__dict_Monad_448);
        }, halt(__dict_Monad_448["__superclass_Prelude.Applicative_0"]()));
    };
    var alternativeMealy = function (__dict_Monad_463) {
        return new Control_Alternative.Alternative(function () {
            return plusMealy(__dict_Monad_463);
        }, function () {
            return applicativeMealy(__dict_Monad_463);
        });
    };
    var monadPlus = function (__dict_Monad_433) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeMealy(__dict_Monad_433);
        }, function () {
            return monadMealy(__dict_Monad_433);
        });
    };
    return {
        Emit: Emit, 
        Halt: Halt, 
        MealyT: MealyT, 
        ifte: ifte, 
        ">>-": $greater$greater$minus, 
        interleave: interleave, 
        msplit: msplit, 
        fromArray: fromArray, 
        fromMaybe: fromMaybe, 
        singleton: singleton, 
        collect: collect, 
        scanl: scanl, 
        zipWith: zipWith, 
        loop: loop, 
        drop: drop, 
        take: take, 
        halt: halt, 
        mealy: mealy, 
        pureMealy: pureMealy, 
        runMealy: runMealy, 
        stepMealy: stepMealy, 
        sink: sink, 
        source: source, 
        functorMealy: functorMealy, 
        applyMealy: applyMealy, 
        applicativeMealy: applicativeMealy, 
        profunctorMealy: profunctorMealy, 
        semigroupMealy: semigroupMealy, 
        monoidMealy: monoidMealy, 
        semigroupoidMealy: semigroupoidMealy, 
        categoryMealy: categoryMealy, 
        arrowMealy: arrowMealy, 
        bindMealy: bindMealy, 
        monadMealy: monadMealy, 
        altMealy: altMealy, 
        plusMealy: plusMealy, 
        alternativeMealy: alternativeMealy, 
        monadPlus: monadPlus
    };
})();
var PS = PS || {};
PS.Data_Unfoldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    function Unfoldable(unfoldr) {
        this.unfoldr = unfoldr;
    };
    function newEmptySTArray() {  return [];};
    var unfoldr = function (dict) {
        return dict.unfoldr;
    };
    var unfoldableArray = function () {
        return new Unfoldable(function (f) {
            return function (b) {
                return Control_Monad_Eff.runPure(function __do() {
                    var _34 = newEmptySTArray();
                    var _33 = b;
                    var _32 = 0;
                    (function () {
                        while (!(function __do() {
                            var _31 = _33;
                            return (function () {
                                var _1350 = f(_31);
                                if (_1350 instanceof Data_Maybe.Nothing) {
                                    return Prelude["return"](Control_Monad_Eff.monadEff())(true);
                                };
                                if (_1350 instanceof Data_Maybe.Just) {
                                    return function __do() {
                                        var _30 = _32;
                                        _34[_30] = _1350.value0.value0;
                                        _33 = _1350.value0.value1;
                                        _32 = _30 + 1;
                                        return false;
                                    };
                                };
                                throw new Error("Failed pattern match");
                            })()();
                        })()) {

                        };
                        return {};
                    })();
                    return _34;
                });
            };
        });
    };
    return {
        Unfoldable: Unfoldable, 
        newEmptySTArray: newEmptySTArray, 
        unfoldr: unfoldr, 
        unfoldableArray: unfoldableArray
    };
})();
var PS = PS || {};
PS.Test_QuickCheck_LCG = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Machine_Mealy = PS.Data_Machine_Mealy;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Profunctor = PS.Data_Profunctor;
    var Control_Arrow = PS.Control_Arrow;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Array = PS.Data_Array;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Math = PS.Math;
    var Data_Monoid_Sum = PS.Data_Monoid_Sum;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function GenState(value0) {
        this.value0 = value0;
    };
    GenState.create = function (value0) {
        return new GenState(value0);
    };
    function GenOut(value0) {
        this.value0 = value0;
    };
    GenOut.create = function (value0) {
        return new GenOut(value0);
    };
    function GenT(value0) {
        this.value0 = value0;
    };
    GenT.create = function (value0) {
        return new GenT(value0);
    };
    function float32ToInt32(n) {  var arr = new ArrayBuffer(4);  var fv = new Float32Array(arr);  var iv = new Int32Array(arr);  fv[0] = n;  return iv[0];};
    var unGenState = function (_438) {
        return _438.value0;
    };
    var unGenOut = function (_439) {
        return _439.value0;
    };
    var unGen = function (_440) {
        return _440.value0;
    };
    var transGen = function (__dict_Monad_465) {
        return function (_455) {
            return function (_456) {
                return function (_457) {
                    var loop = function (m_1) {
                        return function (b_1) {
                            var g = function (_466) {
                                if (_466 instanceof Data_Machine_Mealy.Halt) {
                                    return Prelude.pure(__dict_Monad_465["__superclass_Prelude.Applicative_0"]())(Data_Machine_Mealy.Halt.value);
                                };
                                if (_466 instanceof Data_Machine_Mealy.Emit) {
                                    var _1365 = _455(b_1)(_466.value0.value0.value);
                                    if (_1365.value1 instanceof Data_Maybe.Nothing) {
                                        return Data_Machine_Mealy.stepMealy(__dict_Monad_465)(_466.value0.value0.state)(loop(_466.value1)(_1365.value0));
                                    };
                                    if (_1365.value1 instanceof Data_Maybe.Just) {
                                        var c$prime = new GenOut({
                                            value: _1365.value1.value0, 
                                            state: _466.value0.value0.state
                                        });
                                        return Prelude.pure(__dict_Monad_465["__superclass_Prelude.Applicative_0"]())(new Data_Machine_Mealy.Emit(c$prime, loop(_466.value1)(_1365.value0)));
                                    };
                                    throw new Error("Failed pattern match");
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Data_Machine_Mealy.mealy(__dict_Monad_465["__superclass_Prelude.Applicative_0"]())(function (st) {
                                return Prelude[">>="](__dict_Monad_465["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_465)(st)(m_1))(g);
                            });
                        };
                    };
                    return GenT.create(loop(_457.value0)(_456));
                };
            };
        };
    };
    var stateful = function (__dict_Monad_467) {
        return function (f) {
            return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_467))(Data_Machine_Mealy.take(__dict_Monad_467)(1)(Prelude.id(Data_Machine_Mealy.categoryMealy(__dict_Monad_467))))(function (_35) {
                return unGen(f(_35));
            }));
        };
    };
    var stateM = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(GenState.create)(Prelude["<<<"](Prelude.semigroupoidArr())(f)(unGenState));
    };
    var variant = function (__dict_Monad_468) {
        return function (n) {
            return function (g) {
                return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_468))(stateM(function (s) {
                    var _1378 = {};
                    for (var _1379 in s) {
                        if (s.hasOwnProperty(_1379)) {
                            _1378[_1379] = s[_1379];
                        };
                    };
                    _1378.seed = n;
                    return _1378;
                }))(unGen(g)));
            };
        };
    };
    var sized = function (__dict_Monad_469) {
        return function (f) {
            return stateful(__dict_Monad_469)(function (s) {
                return f((unGenState(s)).size);
            });
        };
    };
    var semigroupGenT = function (__dict_Monad_470) {
        return new Prelude.Semigroup(function (_479) {
            return function (_480) {
                return new GenT(Prelude["<>"](Data_Machine_Mealy.semigroupMealy(__dict_Monad_470))(_479.value0)(_480.value0));
            };
        });
    };
    var resize = function (__dict_Monad_472) {
        return function (sz) {
            return function (g) {
                return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_472))(stateM(function (s) {
                    var _1384 = {};
                    for (var _1385 in s) {
                        if (s.hasOwnProperty(_1385)) {
                            _1384[_1385] = s[_1385];
                        };
                    };
                    _1384.size = sz;
                    return _1384;
                }))(unGen(g)));
            };
        };
    };
    var pureGen = function (__dict_Monad_473) {
        return function (f) {
            return GenT.create(Control_Arrow.arr(Data_Machine_Mealy.arrowMealy(__dict_Monad_473))(f));
        };
    };
    var monoidGenT = function (__dict_Monad_475) {
        return new Data_Monoid.Monoid(function () {
            return semigroupGenT(__dict_Monad_475);
        }, new GenT(Data_Monoid.mempty(Data_Machine_Mealy.monoidMealy(__dict_Monad_475))));
    };
    var liftMealy = function (__dict_Monad_479) {
        return function (f) {
            return function (g) {
                return GenT.create(f(unGen(g)));
            };
        };
    };
    var takeGen = function (__dict_Monad_480) {
        return function (n) {
            return liftMealy(__dict_Monad_480)(Data_Machine_Mealy.take(__dict_Monad_480)(n));
        };
    };
    var lcgN = 1 << 30;
    var lcgM = 1103515245;
    var lcgC = 12345;
    var lcgNext = function (n) {
        return (lcgM * n + lcgC) % lcgN;
    };
    var perturbNum = function (n) {
        return Prelude["+"](Prelude.numNumber())(lcgNext(float32ToInt32(n)));
    };
    var perturbGen = function (__dict_Monad_481) {
        return function (_443) {
            return function (_444) {
                return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_481))(stateM(function (s) {
                    var _1388 = {};
                    for (var _1389 in s) {
                        if (s.hasOwnProperty(_1389)) {
                            _1388[_1389] = s[_1389];
                        };
                    };
                    _1388.seed = perturbNum(_443)(s.seed);
                    return _1388;
                }))(_444.value0));
            };
        };
    };
    var semigroupGenState = function () {
        return new Prelude.Semigroup(function (_469) {
            return function (_470) {
                return new GenState({
                    seed: perturbNum(_469.value0.seed)(_470.value0.seed), 
                    size: _470.value0.size
                });
            };
        });
    };
    var monoidGenState = function () {
        return new Data_Monoid.Monoid(semigroupGenState, new GenState({
            seed: 0, 
            size: 10
        }));
    };
    var semigroupGenOut = function (__dict_Semigroup_471) {
        return new Prelude.Semigroup(function (_471) {
            return function (_472) {
                return new GenOut({
                    state: Prelude["<>"](semigroupGenState())(_471.value0.state)(_472.value0.state), 
                    value: Prelude["<>"](__dict_Semigroup_471)(_471.value0.value)(_472.value0.value)
                });
            };
        });
    };
    var monoidGenOut = function (__dict_Monoid_476) {
        return new Data_Monoid.Monoid(function () {
            return semigroupGenOut(__dict_Monoid_476["__superclass_Prelude.Semigroup_0"]());
        }, new GenOut({
            state: Data_Monoid.mempty(monoidGenState()), 
            value: Data_Monoid.mempty(__dict_Monoid_476)
        }));
    };
    var updateSeedState = function (_445) {
        return new GenState({
            seed: lcgNext(_445.value0.seed), 
            size: _445.value0.size
        });
    };
    var lcgStep = function (__dict_Monad_482) {
        return GenT.create(Control_Arrow.arr(Data_Machine_Mealy.arrowMealy(__dict_Monad_482))(function (s) {
            return new GenOut({
                state: updateSeedState(s), 
                value: (unGenState(s)).seed
            });
        }));
    };
    var updateSeedGen = function (__dict_Monad_484) {
        return function (_446) {
            return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_484))(updateSeedState)(_446.value0));
        };
    };
    var interleave = function (__dict_Monad_485) {
        return function (_449) {
            return function (_450) {
                return GenT.create(Data_Machine_Mealy.interleave(__dict_Monad_485)(_449.value0)(_450.value0));
            };
        };
    };
    var infinite = function (__dict_Monad_486) {
        return liftMealy(__dict_Monad_486)(Data_Machine_Mealy.loop(__dict_Monad_486));
    };
    var ifThenElse = function (p) {
        return function (a) {
            return function (b) {
                return p ? a : b;
            };
        };
    };
    var suchThat = function (__dict_Monad_487) {
        return function (g) {
            return function (p) {
                var f = function (_467) {
                    return function (_468) {
                        return Data_Tuple.Tuple.create(Prelude.unit)(ifThenElse(p(_468))(new Data_Maybe.Just(_468))(Data_Maybe.Nothing.value));
                    };
                };
                return transGen(__dict_Monad_487)(f)(Prelude.unit)(g);
            };
        };
    };
    var suchThatMaybe = function (__dict_Monad_488) {
        return function (n) {
            return function (g) {
                return function (p) {
                    var f = function (i) {
                        return function (a) {
                            return ifThenElse(p(a))(new Data_Tuple.Tuple(0, Data_Maybe.Just.create(new Data_Maybe.Just(a))))(ifThenElse(i >= n)(new Data_Tuple.Tuple(0, Data_Maybe.Just.create(Data_Maybe.Nothing.value)))(new Data_Tuple.Tuple(i + 1, Data_Maybe.Nothing.value)));
                        };
                    };
                    return transGen(__dict_Monad_488)(f)(0)(g);
                };
            };
        };
    };
    var functorGenOut = function () {
        return new Prelude.Functor(function (_473) {
            return function (_474) {
                return new GenOut({
                    state: _474.value0.state, 
                    value: _473(_474.value0.value)
                });
            };
        });
    };
    var functorGenT = function (__dict_Monad_489) {
        return new Prelude.Functor(function (_477) {
            return function (_478) {
                return GenT.create(Prelude["<$>"](Data_Machine_Mealy.functorMealy(__dict_Monad_489))(Prelude["<$>"](functorGenOut())(_477))(_478.value0));
            };
        });
    };
    var uniform = function (__dict_Monad_483) {
        return Prelude["<$>"](functorGenT(__dict_Monad_483))(function (n) {
            return n / (1 << 30);
        })(lcgStep(__dict_Monad_483));
    };
    var stepGen = function (__dict_Monad_466) {
        return function (_441) {
            return function (_442) {
                var h = function (_459) {
                    if (_459 instanceof Data_Machine_Mealy.Halt) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_459 instanceof Data_Machine_Mealy.Emit) {
                        return Data_Maybe.Just.create(Prelude["<$>"](functorGenOut())(Prelude.flip(Data_Tuple.Tuple.create)(new GenT(_459.value1)))(_459.value0));
                    };
                    throw new Error("Failed pattern match");
                };
                return Prelude["<$>"](((__dict_Monad_466["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(Data_Machine_Mealy.stepMealy(__dict_Monad_466)(_441)(_442.value0));
            };
        };
    };
    var foldGen$prime = function (__dict_Monad_490) {
        return function (_451) {
            return function (_452) {
                return function (_453) {
                    return function (_454) {
                        var loop = function (st) {
                            return function (m_1) {
                                return function (b_1) {
                                    var g = function (_465) {
                                        if (_465 instanceof Data_Machine_Mealy.Halt) {
                                            return Prelude.pure(__dict_Monad_490["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(b_1, new GenT(Data_Machine_Mealy.halt(__dict_Monad_490["__superclass_Prelude.Applicative_0"]()))));
                                        };
                                        if (_465 instanceof Data_Machine_Mealy.Emit) {
                                            var b$prime = _451(b_1)(_465.value0.value0.value);
                                            return Data_Maybe.maybe(Prelude.pure(__dict_Monad_490["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(b_1, new GenT(_465.value1))))(loop(_465.value0.value0.state)(_465.value1))(b$prime);
                                        };
                                        throw new Error("Failed pattern match");
                                    };
                                    return Prelude[">>="](__dict_Monad_490["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_490)(st)(m_1))(g);
                                };
                            };
                        };
                        return loop(_453)(_454.value0)(_452);
                    };
                };
            };
        };
    };
    var foldGen = function (__dict_Monad_491) {
        return function (f) {
            return function (b) {
                return function (s) {
                    return function (g) {
                        return Prelude["<$>"](((__dict_Monad_491["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.fst)(foldGen$prime(__dict_Monad_491)(f)(b)(s)(g));
                    };
                };
            };
        };
    };
    var extend = function (__dict_Monad_492) {
        return function (_447) {
            return function (_448) {
                var loop = function (i) {
                    return function (m_1) {
                        return Data_Machine_Mealy.mealy(__dict_Monad_492["__superclass_Prelude.Applicative_0"]())(function (st) {
                            var f = function (_464) {
                                if (_464 instanceof Data_Machine_Mealy.Halt) {
                                    return i >= _447 ? Prelude.pure(__dict_Monad_492["__superclass_Prelude.Applicative_0"]())(Data_Machine_Mealy.Halt.value) : Data_Machine_Mealy.stepMealy(__dict_Monad_492)(st)(loop(i)(_448.value0));
                                };
                                if (_464 instanceof Data_Machine_Mealy.Emit) {
                                    return Prelude.pure(__dict_Monad_492["__superclass_Prelude.Applicative_0"]())(new Data_Machine_Mealy.Emit(_464.value0, loop(i + 1)(_464.value1)));
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Prelude[">>="](__dict_Monad_492["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_492)(st)(m_1))(f);
                        });
                    };
                };
                return GenT.create(loop(0)(_448.value0));
            };
        };
    };
    var runGen = function (__dict_Monad_493) {
        return function (n) {
            return function (st) {
                return function (g) {
                    var f = function (v) {
                        return function (a) {
                            return ifThenElse(Data_Array.length(v) < n)(Data_Maybe.Just.create(Prelude["<>"](Data_Array.semigroupArray())(v)([ a ])))(Data_Maybe.Nothing.value);
                        };
                    };
                    return foldGen$prime(__dict_Monad_493)(f)([  ])(st)(extend(__dict_Monad_493)(n)(g));
                };
            };
        };
    };
    var sample$prime = function (__dict_Monad_494) {
        return function (n) {
            return function (st) {
                return function (g) {
                    return Prelude["<$>"](((__dict_Monad_494["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.fst)(runGen(__dict_Monad_494)(n)(st)(g));
                };
            };
        };
    };
    var sample = function (__dict_Monad_495) {
        return function (n) {
            return sample$prime(__dict_Monad_495)(n)(new GenState({
                size: 10, 
                seed: 0
            }));
        };
    };
    var showSample$prime = function (__dict_Show_496) {
        return function (n) {
            return function (g) {
                return Debug_Trace.print(Prelude.showArray(__dict_Show_496))(Control_Monad_Trampoline.runTrampoline(sample(Control_Monad_Free.monadFree(Data_Lazy.functorLazy()))(n)(g)));
            };
        };
    };
    var showSample = function (__dict_Show_497) {
        return showSample$prime(__dict_Show_497)(10);
    };
    var vectorOf = function (__dict_Monad_498) {
        return function (n) {
            return function (g) {
                var f = function (b) {
                    return function (a) {
                        var b$prime = Prelude["<>"](Data_Array.semigroupArray())(b)([ a ]);
                        return Data_Array.length(b$prime) >= n ? new Data_Tuple.Tuple([  ], new Data_Maybe.Just(b$prime)) : new Data_Tuple.Tuple(b$prime, Data_Maybe.Nothing.value);
                    };
                };
                return transGen(__dict_Monad_498)(f)([  ])(extend(__dict_Monad_498)(n)(g));
            };
        };
    };
    var evalGen = function (__dict_Monad_499) {
        return function (g) {
            return function (st) {
                var h = function (_460) {
                    if (_460 instanceof Data_Maybe.Nothing) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_460 instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just(_460.value0.value0.value.value0);
                    };
                    throw new Error("Failed pattern match");
                };
                return Prelude["<$>"](((__dict_Monad_499["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(stepGen(__dict_Monad_499)(st)(g));
            };
        };
    };
    var repeatable$prime = function (__dict_Monad_500) {
        return function (f) {
            return GenT.create(Data_Machine_Mealy.pureMealy(__dict_Monad_500["__superclass_Prelude.Applicative_0"]())(function (s) {
                return new Data_Machine_Mealy.Emit(new GenOut({
                    state: s, 
                    value: function (a) {
                        return Prelude["<$>"](((__dict_Monad_500["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Unsafe.fromJust)(evalGen(__dict_Monad_500)(f(a))(s));
                    }
                }), Data_Machine_Mealy.halt(__dict_Monad_500["__superclass_Prelude.Applicative_0"]()));
            }));
        };
    };
    var repeatable = function (f) {
        var g = function (f$prime) {
            return function (a) {
                return Control_Monad_Trampoline.runTrampoline(f$prime(a));
            };
        };
        return Prelude["<$>"](functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(g)(repeatable$prime(Control_Monad_Free.monadFree(Data_Lazy.functorLazy()))(f));
    };
    var dropGen = function (__dict_Monad_501) {
        return function (n) {
            return liftMealy(__dict_Monad_501)(Data_Machine_Mealy.drop(__dict_Monad_501)(n));
        };
    };
    var collectAll = function (__dict_Monad_502) {
        var f = function (v) {
            return function (a) {
                return Data_Maybe.Just.create(Prelude["<>"](Data_Array.semigroupArray())(v)([ a ]));
            };
        };
        return foldGen(__dict_Monad_502)(f)([  ]);
    };
    var chooseInt = function (__dict_Monad_503) {
        return function (a) {
            return function (b) {
                var min = Math.ceil(Math.min(a)(b));
                var max = Math.floor(Math.max(a)(b));
                return Prelude["<$>"](functorGenT(__dict_Monad_503))(Prelude["<<<"](Prelude.semigroupoidArr())(Math.round)(Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["+"](Prelude.numNumber())(min - 0.5))(Prelude["*"](Prelude.numNumber())((max - min) + 1))))(uniform(__dict_Monad_503));
            };
        };
    };
    var choose = function (__dict_Monad_507) {
        return function (a) {
            return function (b) {
                var min = Math.min(a)(b);
                var max = Math.max(a)(b);
                return Prelude["<$>"](functorGenT(__dict_Monad_507))(Prelude[">>>"](Prelude.semigroupoidArr())(Prelude["*"](Prelude.numNumber())(max - min))(Prelude["+"](Prelude.numNumber())(min)))(uniform(__dict_Monad_507));
            };
        };
    };
    var applyGenOut = function () {
        return new Prelude.Apply(function (_475) {
            return function (_476) {
                return new GenOut({
                    state: _476.value0.state, 
                    value: _475.value0.value(_476.value0.value)
                });
            };
        }, functorGenOut);
    };
    var applyGenT = function (__dict_Monad_511) {
        return new Prelude.Apply(function (f) {
            return function (x) {
                return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_511))(unGen(f))(function (_45) {
                    return Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_511))(unGen(updateSeedGen(__dict_Monad_511)(x)))(function (_44) {
                        return Prelude["return"](Data_Machine_Mealy.monadMealy(__dict_Monad_511))(Prelude["<*>"](applyGenOut())(_45)(_44));
                    });
                }));
            };
        }, function () {
            return functorGenT(__dict_Monad_511);
        });
    };
    var bindGenT = function (__dict_Monad_508) {
        return new Prelude.Bind(function (_481) {
            return function (_482) {
                return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_508))(_481.value0)(function (_46) {
                    return unGen(updateSeedGen(__dict_Monad_508)(_482((unGenOut(_46)).value)));
                }));
            };
        }, function () {
            return applyGenT(__dict_Monad_508);
        });
    };
    var arrayOf = function (__dict_Monad_510) {
        return function (g) {
            return sized(__dict_Monad_510)(function (n) {
                return Prelude[">>="](bindGenT(__dict_Monad_510))(chooseInt(__dict_Monad_510)(0)(n))(function (_38) {
                    return vectorOf(__dict_Monad_510)(_38)(g);
                });
            });
        };
    };
    var frequency = function (__dict_Monad_505) {
        return function (x) {
            return function (xs) {
                var xxs = Prelude[":"](x)(xs);
                var total = Data_Monoid_Sum.runSum(Data_Foldable.fold(Data_Foldable.foldableArray())(Data_Monoid_Sum.monoidSum())(Prelude["<$>"](Data_Array.functorArray())(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Monoid_Sum.Sum.create)(Data_Tuple.fst))(xxs)));
                var pick = function (_461) {
                    return function (_462) {
                        return function (_463) {
                            if (_463.length === 0) {
                                return _462;
                            };
                            if (_463.length >= 1) {
                                var _1461 = _463.slice(1);
                                return _461 <= (_463[0]).value0 ? (_463[0]).value1 : pick(_461 - (_463[0]).value0)(_462)(_1461);
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return Prelude[">>="](bindGenT(__dict_Monad_505))(chooseInt(__dict_Monad_505)(1)(total))(function (_37) {
                    return pick(_37)(Data_Tuple.snd(x))(xxs);
                });
            };
        };
    };
    var oneOf = function (__dict_Monad_506) {
        return function (x) {
            return function (xs) {
                return Prelude[">>="](bindGenT(__dict_Monad_506))(chooseInt(__dict_Monad_506)(0)(Data_Array.length(xs)))(function (_36) {
                    return _36 === 0 ? x : Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_36 - 1));
                });
            };
        };
    };
    var applicativeGenT = function (__dict_Monad_512) {
        return new Prelude.Applicative(function () {
            return applyGenT(__dict_Monad_512);
        }, function (t) {
            return GenT.create(Control_Arrow.arr(Data_Machine_Mealy.arrowMealy(__dict_Monad_512))(function (s) {
                return new GenOut({
                    state: updateSeedState(s), 
                    value: t
                });
            }));
        });
    };
    var elements = function (__dict_Monad_504) {
        return function (x) {
            return function (xs) {
                return Prelude[">>="](bindGenT(__dict_Monad_504))(chooseInt(__dict_Monad_504)(0)(Data_Array.length(xs)))(function (_42) {
                    return Prelude.pure(applicativeGenT(__dict_Monad_504))(_42 === 0 ? x : Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_42 - 1)));
                });
            };
        };
    };
    var monadGenT = function (__dict_Monad_478) {
        return new Prelude.Monad(function () {
            return applicativeGenT(__dict_Monad_478);
        }, function () {
            return bindGenT(__dict_Monad_478);
        });
    };
    var arrayOf1 = function (__dict_Monad_509) {
        return function (g) {
            return sized(__dict_Monad_509)(function (n) {
                return Prelude[">>="](bindGenT(__dict_Monad_509))(chooseInt(__dict_Monad_509)(0)(n))(function (_41) {
                    return Prelude[">>="](bindGenT(__dict_Monad_509))(g)(function (_40) {
                        return Prelude[">>="](bindGenT(__dict_Monad_509))(vectorOf(__dict_Monad_509)(_41 - 1)(g))(function (_39) {
                            return Prelude["return"](monadGenT(__dict_Monad_509))(new Data_Tuple.Tuple(_40, _39));
                        });
                    });
                });
            });
        };
    };
    var altGenT = function (__dict_Monad_514) {
        return new Control_Alt.Alt(function (_483) {
            return function (_484) {
                return GenT.create(Control_Alt["<|>"](Data_Machine_Mealy.altMealy(__dict_Monad_514))(_483.value0)(_484.value0));
            };
        }, function () {
            return functorGenT(__dict_Monad_514);
        });
    };
    var plusGenT = function (__dict_Monad_474) {
        return new Control_Plus.Plus(function () {
            return altGenT(__dict_Monad_474);
        }, Data_Monoid.mempty(monoidGenT(__dict_Monad_474)));
    };
    var alternativeGenT = function (__dict_Monad_513) {
        return new Control_Alternative.Alternative(function () {
            return plusGenT(__dict_Monad_513);
        }, function () {
            return applicativeGenT(__dict_Monad_513);
        });
    };
    var monadPlusGenT = function (__dict_Monad_477) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeGenT(__dict_Monad_477);
        }, function () {
            return monadGenT(__dict_Monad_477);
        });
    };
    var allInRange = function (__dict_Monad_515) {
        return function (min) {
            return function (max) {
                var go = function (cur) {
                    return Data_Machine_Mealy.pureMealy(__dict_Monad_515["__superclass_Prelude.Applicative_0"]())(function (s) {
                        return ifThenElse(cur > max)(Data_Machine_Mealy.Halt.value)(new Data_Machine_Mealy.Emit(new GenOut({
                            state: s, 
                            value: cur
                        }), go(cur + 1)));
                    });
                };
                return GenT.create(go(min));
            };
        };
    };
    var allInArray = function (__dict_Monad_516) {
        return function (a) {
            var go = function (i) {
                return Data_Machine_Mealy.pureMealy(__dict_Monad_516["__superclass_Prelude.Applicative_0"]())(function (s) {
                    return Data_Maybe.maybe(Data_Machine_Mealy.Halt.value)(function (a_1) {
                        return new Data_Machine_Mealy.Emit(new GenOut({
                            state: s, 
                            value: a_1
                        }), go(i + 1));
                    })(Data_Array["!!"](a)(i));
                });
            };
            return GenT.create(go(0));
        };
    };
    var perms = function (__dict_Monad_517) {
        return function (_458) {
            if (_458.length === 0) {
                return Prelude.pure(applicativeGenT(__dict_Monad_517))([  ]);
            };
            if (_458.length >= 1) {
                var _1475 = _458.slice(1);
                return Prelude[">>="](bindGenT(__dict_Monad_517))(perms(__dict_Monad_517)(_1475))(function (_43) {
                    var f = function (n) {
                        var suffix = Data_Array.drop(n)(_43);
                        var prefix = Data_Array.take(n)(_43);
                        return Prelude["<>"](Data_Array.semigroupArray())(prefix)(Prelude["<>"](Data_Array.semigroupArray())([ _458[0] ])(suffix));
                    };
                    return allInArray(__dict_Monad_517)(Prelude["<$>"](Data_Array.functorArray())(f)(Data_Array.range(0)(Data_Array.length(_43))));
                });
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        GenOut: GenOut, 
        GenState: GenState, 
        GenT: GenT, 
        vectorOf: vectorOf, 
        variant: variant, 
        uniform: uniform, 
        transGen: transGen, 
        takeGen: takeGen, 
        suchThatMaybe: suchThatMaybe, 
        suchThat: suchThat, 
        stateful: stateful, 
        sized: sized, 
        "showSample'": showSample$prime, 
        showSample: showSample, 
        "sample'": sample$prime, 
        sample: sample, 
        runGen: runGen, 
        resize: resize, 
        repeatable: repeatable, 
        perturbGen: perturbGen, 
        perms: perms, 
        oneOf: oneOf, 
        interleave: interleave, 
        infinite: infinite, 
        frequency: frequency, 
        "foldGen'": foldGen$prime, 
        foldGen: foldGen, 
        extend: extend, 
        elements: elements, 
        dropGen: dropGen, 
        collectAll: collectAll, 
        chooseInt: chooseInt, 
        choose: choose, 
        arrayOf1: arrayOf1, 
        arrayOf: arrayOf, 
        allInRange: allInRange, 
        allInArray: allInArray, 
        semigroupGenState: semigroupGenState, 
        monoidGenState: monoidGenState, 
        semigroupGenOut: semigroupGenOut, 
        monoidGenOut: monoidGenOut, 
        functorGenOut: functorGenOut, 
        applyGenOut: applyGenOut, 
        functorGenT: functorGenT, 
        applyGenT: applyGenT, 
        applicativeGenT: applicativeGenT, 
        semigroupGenT: semigroupGenT, 
        monoidGenT: monoidGenT, 
        bindGenT: bindGenT, 
        monadGenT: monadGenT, 
        altGenT: altGenT, 
        plusGenT: plusGenT, 
        alternativeGenT: alternativeGenT, 
        monadPlusGenT: monadPlusGenT
    };
})();
var PS = PS || {};
PS.Test_QuickCheck = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Test_QuickCheck_LCG = PS.Test_QuickCheck_LCG;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Data_Array = PS.Data_Array;
    var Math = PS.Math;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Debug_Trace = PS.Debug_Trace;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Char = PS.Data_Char;
    var Data_String = PS.Data_String;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Traversable = PS.Data_Traversable;
    var Signum = {
        create: function (value) {
            return value;
        }
    };
    function Success() {

    };
    Success.value = new Success();
    function Failed(value0) {
        this.value0 = value0;
    };
    Failed.create = function (value0) {
        return new Failed(value0);
    };
    var Positive = {
        create: function (value) {
            return value;
        }
    };
    var NonZero = {
        create: function (value) {
            return value;
        }
    };
    var Negative = {
        create: function (value) {
            return value;
        }
    };
    var AlphaNumString = {
        create: function (value) {
            return value;
        }
    };
    function Arbitrary(arbitrary) {
        this.arbitrary = arbitrary;
    };
    function CoArbitrary(coarbitrary) {
        this.coarbitrary = coarbitrary;
    };
    function Testable(test) {
        this.test = test;
    };
    var $less$qmark$greater = function (_485) {
        if (_485) {
            return Prelude["const"](Success.value);
        };
        if (!_485) {
            return Failed.create;
        };
        throw new Error("Failed pattern match");
    };
    var throwOnFirstFailure = function (__copy__486) {
        return function (__copy__487) {
            var _486 = __copy__486;
            var _487 = __copy__487;
            tco: while (true) {
                if (_487.length === 0) {
                    return Prelude["return"](Control_Monad_Eff.monadEff())(Prelude.unit);
                };
                if (_487.length >= 1) {
                    var _1481 = _487.slice(1);
                    if (_487[0] instanceof Failed) {
                        return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Test " + (Prelude.show(Prelude.showNumber())(_486) + (" failed: \n" + (_487[0]).value0))));
                    };
                };
                if (_487.length >= 1) {
                    var _1483 = _487.slice(1);
                    var __tco__486 = _486 + 1;
                    _486 = __tco__486;
                    _487 = _1483;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var testableResult = function () {
        return new Testable(Prelude["return"](Test_QuickCheck_LCG.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy()))));
    };
    var testableBoolean = function () {
        return new Testable(function (_509) {
            if (_509) {
                return Prelude["return"](Test_QuickCheck_LCG.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Success.value);
            };
            if (!_509) {
                return Prelude["return"](Test_QuickCheck_LCG.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(new Failed("Test returned false"));
            };
            throw new Error("Failed pattern match");
        });
    };
    var test = function (dict) {
        return dict.test;
    };
    var showResult = function () {
        return new Prelude.Show(function (_496) {
            if (_496 instanceof Success) {
                return "Success";
            };
            if (_496 instanceof Failed) {
                return "Failed: " + _496.value0;
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupResult = function () {
        return new Prelude.Semigroup(function (_497) {
            return function (_498) {
                if (_497 instanceof Success && _498 instanceof Success) {
                    return Success.value;
                };
                if (_497 instanceof Failed && _498 instanceof Success) {
                    return new Failed(_497.value0);
                };
                if (_497 instanceof Success && _498 instanceof Failed) {
                    return new Failed(_498.value0);
                };
                if (_497 instanceof Failed && _498 instanceof Failed) {
                    return new Failed(_497.value0 + _498.value0);
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var runSignum = function (_489) {
        return _489;
    };
    var runPositive = function (_490) {
        return _490;
    };
    var runNonZero = function (_492) {
        return _492;
    };
    var runNegative = function (_491) {
        return _491;
    };
    var runAlphaNumString = function (_488) {
        return _488;
    };
    var monoidResult = function () {
        return new Data_Monoid.Monoid(semigroupResult, Success.value);
    };
    var maxNumber = 9007199254740992;
    var defState = function (s) {
        return new Test_QuickCheck_LCG.GenState({
            seed: s, 
            size: 10
        });
    };
    var quickCheckPure = function (__dict_Testable_518) {
        return function (n) {
            return function (s) {
                return function (prop) {
                    return Control_Monad_Trampoline.runTrampoline(Test_QuickCheck_LCG["sample'"](Control_Monad_Free.monadFree(Data_Lazy.functorLazy()))(n)(defState(s))(test(__dict_Testable_518)(prop)));
                };
            };
        };
    };
    var smallCheckPure = function (__dict_Testable_519) {
        return function (s) {
            return function (prop) {
                return Control_Monad_Trampoline.runTrampoline(Test_QuickCheck_LCG.collectAll(Control_Monad_Free.monadFree(Data_Lazy.functorLazy()))(defState(s))(test(__dict_Testable_519)(prop)));
            };
        };
    };
    var countSuccesses = (function () {
        var countSuccesses$prime = function (__copy__494) {
            return function (__copy__495) {
                var _494 = __copy__494;
                var _495 = __copy__495;
                tco: while (true) {
                    if (_495.length === 0) {
                        return _494;
                    };
                    if (_495.length >= 1) {
                        var _1501 = _495.slice(1);
                        if (_495[0] instanceof Success) {
                            var __tco__494 = _494 + 1;
                            _494 = __tco__494;
                            _495 = _1501;
                            continue tco;
                        };
                    };
                    if (_495.length >= 1) {
                        var _1503 = _495.slice(1);
                        var __tco__494 = _494;
                        _494 = __tco__494;
                        _495 = _1503;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        return countSuccesses$prime(0);
    })();
    var statCheckPure = function (__dict_Testable_520) {
        return function (s) {
            return function (freq) {
                return function (prop) {
                    var $$try = function (x) {
                        var measure = function (n) {
                            var results = quickCheckPure(__dict_Testable_520)(n)(s)(prop);
                            return countSuccesses(results) / Data_Array.length(results);
                        };
                        var measure$prime = function (_493) {
                            if (_493 === 0) {
                                return [  ];
                            };
                            return Prelude["<>"](Data_Array.semigroupArray())(measure$prime(_493 - 1))([ measure(_493 * x) ]);
                        };
                        var freqs = measure$prime(4);
                        var dists = Prelude["<$>"](Data_Array.functorArray())(Prelude["<<<"](Prelude.semigroupoidArr())(Math.abs)(Prelude["-"](Prelude.numNumber())(freq)))(freqs);
                        var dirs = Data_Array.zipWith(function (a) {
                            return function (b) {
                                return a - b;
                            };
                        })(Prelude[":"](1)(dists))(dists);
                        var fails = Data_Array.length(Data_Array.filter(Prelude[">"](Prelude.ordNumber())(0))(dirs));
                        var succs = Data_Array.filter(Prelude["<="](Prelude.ordNumber())(0))(dirs);
                        return fails > 1 ? x < 1000000 ? $$try(x * 10) : Failed.create("Divergence of statistical test: freqs = " + (Prelude.show(Prelude.showArray(Prelude.showNumber()))(freqs) + (", dists = " + (Prelude.show(Prelude.showArray(Prelude.showNumber()))(dists) + (", dirs = " + (Prelude.show(Prelude.showArray(Prelude.showNumber()))(dirs) + (", fails: " + Prelude.show(Prelude.showNumber())(fails)))))))) : Data_Maybe.maybe(new Failed("Error!"))(function (l) {
    return l > 0.5 ? Failed.create("Final convergence distance too low: " + Prelude.show(Prelude.showNumber())(l)) : Success.value;
})(Data_Array.last(succs));
                    };
                    return $$try(100);
                };
            };
        };
    };
    var statCheck = function (__dict_Testable_521) {
        return function (freq) {
            return function (prop) {
                return function __do() {
                    var _47 = Control_Monad_Eff_Random.random();
                    return Prelude["<<<"](Prelude.semigroupoidArr())(Debug_Trace.trace)(Prelude.show(showResult()))(statCheckPure(__dict_Testable_521)(_47)(freq)(prop))();
                };
            };
        };
    };
    var coarbitrary = function (dict) {
        return dict.coarbitrary;
    };
    var coarbTuple = function (__dict_CoArbitrary_522) {
        return function (__dict_CoArbitrary_523) {
            return new CoArbitrary(function (_505) {
                return Prelude[">>>"](Prelude.semigroupoidArr())(coarbitrary(__dict_CoArbitrary_522)(_505.value0))(coarbitrary(__dict_CoArbitrary_523)(_505.value1));
            });
        };
    };
    var coarbNumber = function () {
        return new CoArbitrary(Test_QuickCheck_LCG.perturbGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())));
    };
    var coarbPositive = function () {
        return new CoArbitrary(function (_499) {
            return coarbitrary(coarbNumber())(_499);
        });
    };
    var coarbSignum = function () {
        return new CoArbitrary(function (_502) {
            return coarbitrary(coarbNumber())(_502);
        });
    };
    var coarbNonZero = function () {
        return new CoArbitrary(function (_501) {
            return coarbitrary(coarbNumber())(_501);
        });
    };
    var coarbNegative = function () {
        return new CoArbitrary(function (_500) {
            return coarbitrary(coarbNumber())(_500);
        });
    };
    var coarbMaybe = function (__dict_CoArbitrary_524) {
        return new CoArbitrary(function (_507) {
            if (_507 instanceof Data_Maybe.Nothing) {
                return Test_QuickCheck_LCG.perturbGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy()))(1);
            };
            if (_507 instanceof Data_Maybe.Just) {
                return coarbitrary(__dict_CoArbitrary_524)(_507.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbEither = function (__dict_CoArbitrary_525) {
        return function (__dict_CoArbitrary_526) {
            return new CoArbitrary(function (_506) {
                if (_506 instanceof Data_Either.Left) {
                    return coarbitrary(__dict_CoArbitrary_525)(_506.value0);
                };
                if (_506 instanceof Data_Either.Right) {
                    return coarbitrary(__dict_CoArbitrary_526)(_506.value0);
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var coarbChar = function () {
        return new CoArbitrary(function (c) {
            return coarbitrary(coarbNumber())(Data_Char.toCharCode(c));
        });
    };
    var coarbBoolean = function () {
        return new CoArbitrary(function (_503) {
            if (_503) {
                return Test_QuickCheck_LCG.perturbGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy()))(1);
            };
            if (!_503) {
                return Test_QuickCheck_LCG.perturbGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy()))(2);
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbArray = function (__dict_CoArbitrary_527) {
        return new CoArbitrary(function (_508) {
            if (_508.length === 0) {
                return Prelude.id(Prelude.categoryArr());
            };
            if (_508.length >= 1) {
                var _1521 = _508.slice(1);
                return Prelude["<<<"](Prelude.semigroupoidArr())(coarbitrary(coarbArray(__dict_CoArbitrary_527))(_1521))(coarbitrary(__dict_CoArbitrary_527)(_508[0]));
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbString = function () {
        return new CoArbitrary(function (s) {
            return coarbitrary(coarbArray(coarbNumber()))(Prelude["<$>"](Data_Array.functorArray())(Data_String.charCodeAt(0))(Data_String.split("")(s)));
        });
    };
    var coarbAlphaNumString = function () {
        return new CoArbitrary(function (_504) {
            return coarbitrary(coarbString())(_504);
        });
    };
    var check = function (__dict_Testable_528) {
        return function (f) {
            return function (prop) {
                return function __do() {
                    var _48 = Control_Monad_Eff_Random.random();
                    return (function () {
                        var results = f(_48)(prop);
                        var successes = countSuccesses(results);
                        return function __do() {
                            Debug_Trace.trace(Prelude.show(Prelude.showNumber())(successes) + ("/" + (Prelude.show(Prelude.showNumber())(Data_Array.length(results)) + " test(s) passed.")))();
                            return throwOnFirstFailure(1)(results)();
                        };
                    })()();
                };
            };
        };
    };
    var quickCheck$prime = function (__dict_Testable_529) {
        return function (n) {
            return function (prop) {
                return check(__dict_Testable_529)(quickCheckPure(__dict_Testable_529)(n))(prop);
            };
        };
    };
    var quickCheck = function (__dict_Testable_530) {
        return function (prop) {
            return quickCheck$prime(__dict_Testable_530)(100)(prop);
        };
    };
    var smallCheck = function (__dict_Testable_531) {
        return function (prop) {
            return check(__dict_Testable_531)(smallCheckPure(__dict_Testable_531))(prop);
        };
    };
    var arbitrary = function (dict) {
        return dict.arbitrary;
    };
    var testableFunction = function (__dict_Arbitrary_534) {
        return function (__dict_Testable_535) {
            return new Testable(function (f) {
                return Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(arbitrary(__dict_Arbitrary_534))(function (_60) {
                    return test(__dict_Testable_535)(f(_60));
                });
            });
        };
    };
    var arbTuple = function (__dict_Arbitrary_536) {
        return function (__dict_Arbitrary_537) {
            return new Arbitrary(Prelude["<*>"](Test_QuickCheck_LCG.applyGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Prelude["<$>"](Test_QuickCheck_LCG.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Data_Tuple.Tuple.create)(arbitrary(__dict_Arbitrary_536)))(arbitrary(__dict_Arbitrary_537)));
        };
    };
    var arbPositive = function () {
        return new Arbitrary(Prelude["<$>"](Test_QuickCheck_LCG.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Prelude["<$>"](Prelude.functorArr())(Positive.create)(Prelude["*"](Prelude.numNumber())(maxNumber)))(Test_QuickCheck_LCG.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy()))));
    };
    var arbNumber = function () {
        return new Arbitrary(Test_QuickCheck_LCG.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())));
    };
    var arbNegative = function () {
        return new Arbitrary(Prelude["<$>"](Test_QuickCheck_LCG.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Prelude["<$>"](Prelude.functorArr())(Negative.create)(Prelude["*"](Prelude.numNumber())(-maxNumber)))(Test_QuickCheck_LCG.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy()))));
    };
    var arbFunction = function (__dict_CoArbitrary_539) {
        return function (__dict_Arbitrary_540) {
            return new Arbitrary(Test_QuickCheck_LCG.repeatable(function (a) {
                return coarbitrary(__dict_CoArbitrary_539)(a)(arbitrary(__dict_Arbitrary_540));
            }));
        };
    };
    var arbChar = function () {
        return new Arbitrary(Prelude["<$>"](Test_QuickCheck_LCG.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Char.fromCharCode)(Prelude["*"](Prelude.numNumber())(65535)))(Test_QuickCheck_LCG.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy()))));
    };
    var arbBoolean = function () {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Test_QuickCheck_LCG.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(function (_52) {
            return Prelude["return"](Test_QuickCheck_LCG.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))((_52 * 2) < 1);
        }));
    };
    var arbEither = function (__dict_Arbitrary_541) {
        return function (__dict_Arbitrary_542) {
            return new Arbitrary(Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(arbitrary(arbBoolean()))(function (_54) {
                return _54 ? Prelude["<$>"](Test_QuickCheck_LCG.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Data_Either.Left.create)(arbitrary(__dict_Arbitrary_541)) : Prelude["<$>"](Test_QuickCheck_LCG.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Data_Either.Right.create)(arbitrary(__dict_Arbitrary_542));
            }));
        };
    };
    var arbMaybe = function (__dict_Arbitrary_538) {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(arbitrary(arbBoolean()))(function (_55) {
            return _55 ? Prelude.pure(Test_QuickCheck_LCG.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Data_Maybe.Nothing.value) : Prelude["<$>"](Test_QuickCheck_LCG.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Data_Maybe.Just.create)(arbitrary(__dict_Arbitrary_538));
        }));
    };
    var arbNonZero = function () {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(arbitrary(arbNumber()))(function (_50) {
            return Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(arbitrary(arbBoolean()))(function (_49) {
                var sign = _49 ? 1.0 : -1.0;
                return Prelude["return"](Test_QuickCheck_LCG.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(_50 * maxNumber * sign);
            });
        }));
    };
    var arbSignum = function () {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(arbitrary(arbBoolean()))(function (_51) {
            return Prelude["return"](Test_QuickCheck_LCG.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(_51 ? 1 : -1);
        }));
    };
    var arbArray = function (__dict_Arbitrary_543) {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(arbitrary(arbBoolean()))(function (_59) {
            return _59 ? Prelude["return"](Test_QuickCheck_LCG.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))([  ]) : Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(arbitrary(__dict_Arbitrary_543))(function (_58) {
    return Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(arbitrary(arbArray(__dict_Arbitrary_543)))(function (_57) {
        return Prelude["return"](Test_QuickCheck_LCG.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Prelude[":"](_58)(_57));
    });
});
        }));
    };
    var arbString = function () {
        return new Arbitrary(Prelude["<$>"](Test_QuickCheck_LCG.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Data_String.fromCharArray)(arbitrary(arbArray(arbChar()))));
    };
    var coarbFunction = function (__dict_Arbitrary_532) {
        return function (__dict_CoArbitrary_533) {
            return new CoArbitrary(function (f) {
                return function (gen) {
                    return Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(arbitrary(arbArray(__dict_Arbitrary_532)))(function (_56) {
                        return coarbitrary(coarbArray(__dict_CoArbitrary_533))(Data_Array.map(f)(_56))(gen);
                    });
                };
            });
        };
    };
    var arbAlphaNumString = function () {
        return new Arbitrary((function () {
            var lookup = function (x) {
                var index = Math.min(Data_String.length("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789") - 1)(Math.floor(x * Data_String.length("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789")));
                return Data_String.charAt(index)("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
            };
            return Prelude[">>="](Test_QuickCheck_LCG.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(arbitrary(arbArray(arbNumber())))(function (_53) {
                return Prelude["return"](Test_QuickCheck_LCG.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(Data_Maybe_Unsafe.fromJust(Prelude["<$>"](Data_Maybe.functorMaybe())(Prelude["<<<"](Prelude.semigroupoidArr())(AlphaNumString.create)(Data_String.fromCharArray))(Data_Traversable.sequence(Data_Traversable.traversableArray())(Data_Maybe.applicativeMaybe())(Prelude["<$>"](Data_Array.functorArray())(lookup)(_53)))));
            });
        })());
    };
    return {
        Signum: Signum, 
        Success: Success, 
        Failed: Failed, 
        Positive: Positive, 
        NonZero: NonZero, 
        Negative: Negative, 
        AlphaNumString: AlphaNumString, 
        Testable: Testable, 
        CoArbitrary: CoArbitrary, 
        Arbitrary: Arbitrary, 
        test: test, 
        statCheckPure: statCheckPure, 
        statCheck: statCheck, 
        smallCheckPure: smallCheckPure, 
        smallCheck: smallCheck, 
        runSignum: runSignum, 
        runPositive: runPositive, 
        runNonZero: runNonZero, 
        runNegative: runNegative, 
        runAlphaNumString: runAlphaNumString, 
        quickCheckPure: quickCheckPure, 
        "quickCheck'": quickCheck$prime, 
        quickCheck: quickCheck, 
        coarbitrary: coarbitrary, 
        arbitrary: arbitrary, 
        "<?>": $less$qmark$greater, 
        showResult: showResult, 
        semigroupResult: semigroupResult, 
        monoidResult: monoidResult, 
        arbNumber: arbNumber, 
        coarbNumber: coarbNumber, 
        arbPositive: arbPositive, 
        coarbPositive: coarbPositive, 
        arbNegative: arbNegative, 
        coarbNegative: coarbNegative, 
        arbNonZero: arbNonZero, 
        coarbNonZero: coarbNonZero, 
        arbSignum: arbSignum, 
        coarbSignum: coarbSignum, 
        arbBoolean: arbBoolean, 
        coarbBoolean: coarbBoolean, 
        arbChar: arbChar, 
        coarbChar: coarbChar, 
        arbString: arbString, 
        coarbString: coarbString, 
        arbAlphaNumString: arbAlphaNumString, 
        coarbAlphaNumString: coarbAlphaNumString, 
        arbTuple: arbTuple, 
        coarbTuple: coarbTuple, 
        arbEither: arbEither, 
        coarbEither: coarbEither, 
        arbMaybe: arbMaybe, 
        coarbMaybe: coarbMaybe, 
        arbFunction: arbFunction, 
        coarbFunction: coarbFunction, 
        arbArray: arbArray, 
        coarbArray: coarbArray, 
        testableResult: testableResult, 
        testableBoolean: testableBoolean, 
        testableFunction: testableFunction
    };
})();
var PS = PS || {};
PS.Control_Monad_ListT = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Lazy = PS.Data_Lazy;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Array = PS.Data_Array;
    var Data_Monoid = PS.Data_Monoid;
    var Test_QuickCheck = PS.Test_QuickCheck;
    var Test_QuickCheck_LCG = PS.Test_QuickCheck_LCG;
    var Control_Monad_Free = PS.Control_Monad_Free;
    function Yield(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Yield.create = function (value0) {
        return function (value1) {
            return new Yield(value0, value1);
        };
    };
    function Skip(value0) {
        this.value0 = value0;
    };
    Skip.create = function (value0) {
        return new Skip(value0);
    };
    function Done() {

    };
    Done.value = new Done();
    function ListT(value0) {
        this.value0 = value0;
    };
    ListT.create = function (value0) {
        return new ListT(value0);
    };
    var wrapLazy = function (__dict_Monad_544) {
        return function (v) {
            return ListT.create(Prelude.pure(__dict_Monad_544["__superclass_Prelude.Applicative_0"]())(new Skip(v)));
        };
    };
    var wrapEffect = function (__dict_Monad_545) {
        return function (v) {
            return ListT.create(Prelude["<$>"](((__dict_Monad_545["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr())(Skip.create)(Prelude["<<<"](Prelude.semigroupoidArr())(Data_Lazy.defer)(Prelude["const"])))(v));
        };
    };
    var unfold = function (__dict_Monad_546) {
        return function (f) {
            return function (z) {
                var g = function (_519) {
                    if (_519 instanceof Data_Maybe.Just) {
                        return new Yield(_519.value0.value1, Data_Lazy.defer(function (_) {
                            return unfold(__dict_Monad_546)(f)(_519.value0.value0);
                        }));
                    };
                    if (_519 instanceof Data_Maybe.Nothing) {
                        return Done.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return ListT.create(Prelude["<$>"](((__dict_Monad_546["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(f(z)));
            };
        };
    };
    var runListT = function (_510) {
        return _510.value0;
    };
    var scanl = function (__dict_Monad_547) {
        return function (f) {
            return function (b) {
                return function (l) {
                    var g = function (_529) {
                        var h = function (_530) {
                            if (_530 instanceof Yield) {
                                var b$prime = f(_529.value0)(_530.value0);
                                return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime, Data_Lazy.force(_530.value1)), b$prime));
                            };
                            if (_530 instanceof Skip) {
                                return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_529.value0, Data_Lazy.force(_530.value0)), _529.value0));
                            };
                            if (_530 instanceof Done) {
                                return Data_Maybe.Nothing.value;
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](((__dict_Monad_547["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(runListT(_529.value1));
                    };
                    return unfold(__dict_Monad_547)(g)(new Data_Tuple.Tuple(b, l));
                };
            };
        };
    };
    var stepMap = function (__dict_Functor_548) {
        return function (f) {
            return function (l) {
                return ListT.create(Prelude["<$>"](__dict_Functor_548)(f)(runListT(l)));
            };
        };
    };
    var takeWhile = function (__dict_Applicative_549) {
        return function (f) {
            var g = function (_521) {
                if (_521 instanceof Yield) {
                    var ifThenElse = function (p) {
                        return function (a_1) {
                            return function (b) {
                                return p ? a_1 : b;
                            };
                        };
                    };
                    return ifThenElse(f(_521.value0))(new Yield(_521.value0, Prelude["<$>"](Data_Lazy.functorLazy())(takeWhile(__dict_Applicative_549)(f))(_521.value1)))(Done.value);
                };
                if (_521 instanceof Skip) {
                    return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy())(takeWhile(__dict_Applicative_549)(f))(_521.value0));
                };
                if (_521 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap((__dict_Applicative_549["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g);
        };
    };
    var uncons = function (__dict_Monad_550) {
        return function (l) {
            var g = function (_526) {
                if (_526 instanceof Yield) {
                    return Prelude.pure(__dict_Monad_550["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Just.create(new Data_Tuple.Tuple(_526.value0, Data_Lazy.force(_526.value1))));
                };
                if (_526 instanceof Skip) {
                    return uncons(__dict_Monad_550)(Data_Lazy.force(_526.value0));
                };
                if (_526 instanceof Done) {
                    return Prelude.pure(__dict_Monad_550["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Nothing.value);
                };
                throw new Error("Failed pattern match");
            };
            return Prelude[">>="](__dict_Monad_550["__superclass_Prelude.Bind_1"]())(runListT(l))(g);
        };
    };
    var tail = function (__dict_Monad_551) {
        return function (l) {
            return Prelude["<$>"](((__dict_Monad_551["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe())(Data_Tuple.snd))(uncons(__dict_Monad_551)(l));
        };
    };
    var prepend$prime = function (__dict_Applicative_552) {
        return function (h) {
            return function (t) {
                return ListT.create(Prelude.pure(__dict_Applicative_552)(new Yield(h, t)));
            };
        };
    };
    var prepend = function (__dict_Applicative_553) {
        return function (h) {
            return function (t) {
                return prepend$prime(__dict_Applicative_553)(h)(Data_Lazy.defer(Prelude["const"](t)));
            };
        };
    };
    var nil = function (__dict_Applicative_554) {
        return ListT.create(Prelude.pure(__dict_Applicative_554)(Done.value));
    };
    var singleton = function (__dict_Applicative_555) {
        return function (a) {
            return prepend(__dict_Applicative_555)(a)(nil(__dict_Applicative_555));
        };
    };
    var take = function (__dict_Applicative_556) {
        return function (_511) {
            return function (_512) {
                if (_511 === 0) {
                    return nil(__dict_Applicative_556);
                };
                var f = function (_520) {
                    if (_520 instanceof Yield) {
                        var s$prime = Prelude["<$>"](Data_Lazy.functorLazy())(take(__dict_Applicative_556)(_511 - 1))(_520.value1);
                        return new Yield(_520.value0, s$prime);
                    };
                    if (_520 instanceof Skip) {
                        var s$prime = Prelude["<$>"](Data_Lazy.functorLazy())(take(__dict_Applicative_556)(_511))(_520.value0);
                        return new Skip(s$prime);
                    };
                    if (_520 instanceof Done) {
                        return Done.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return stepMap((__dict_Applicative_556["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(_512);
            };
        };
    };
    var zipWith$prime = function (__dict_Monad_557) {
        return function (f) {
            var loop = function (fa) {
                return function (fb) {
                    var g = function (_531) {
                        return function (_532) {
                            if (_532 instanceof Data_Maybe.Nothing) {
                                return Prelude.pure(__dict_Monad_557["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_557["__superclass_Prelude.Applicative_0"]()));
                            };
                            if (_531 instanceof Data_Maybe.Nothing) {
                                return Prelude.pure(__dict_Monad_557["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_557["__superclass_Prelude.Applicative_0"]()));
                            };
                            if (_531 instanceof Data_Maybe.Just && _532 instanceof Data_Maybe.Just) {
                                return Prelude["<$>"](((__dict_Monad_557["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(prepend$prime(__dict_Monad_557["__superclass_Prelude.Applicative_0"]()))(Data_Lazy.defer(function (_) {
                                    return zipWith$prime(__dict_Monad_557)(f)(_531.value0.value1)(_532.value0.value1);
                                })))(f(_531.value0.value0)(_532.value0.value0));
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    return wrapEffect(__dict_Monad_557)(Prelude[">>="](__dict_Monad_557["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_557)(fa))(function (_62) {
                        return Prelude[">>="](__dict_Monad_557["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_557)(fb))(function (_61) {
                            return g(_62)(_61);
                        });
                    }));
                };
            };
            return loop;
        };
    };
    var zipWith = function (__dict_Monad_558) {
        return function (f) {
            var g = function (a) {
                return function (b) {
                    return Prelude.pure(__dict_Monad_558["__superclass_Prelude.Applicative_0"]())(f(a)(b));
                };
            };
            return zipWith$prime(__dict_Monad_558)(g);
        };
    };
    var mapMaybe = function (__dict_Functor_561) {
        return function (f) {
            var g = function (_525) {
                if (_525 instanceof Yield) {
                    return Data_Maybe.fromMaybe(Skip.create)(Prelude["<$>"](Data_Maybe.functorMaybe())(Yield.create)(f(_525.value0)))(Prelude["<$>"](Data_Lazy.functorLazy())(mapMaybe(__dict_Functor_561)(f))(_525.value1));
                };
                if (_525 instanceof Skip) {
                    return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy())(mapMaybe(__dict_Functor_561)(f))(_525.value0));
                };
                if (_525 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap(__dict_Functor_561)(g);
        };
    };
    var iterate = function (__dict_Monad_562) {
        return function (f) {
            return function (a) {
                var g = function (a_1) {
                    return Prelude.pure(__dict_Monad_562["__superclass_Prelude.Applicative_0"]())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(a_1), a_1)));
                };
                return unfold(__dict_Monad_562)(g)(a);
            };
        };
    };
    var head = function (__dict_Monad_563) {
        return function (l) {
            return Prelude["<$>"](((__dict_Monad_563["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe())(Data_Tuple.fst))(uncons(__dict_Monad_563)(l));
        };
    };
    var functorListT = function (__dict_Functor_564) {
        return new Prelude.Functor(function (f) {
            var g = function (_517) {
                if (_517 instanceof Yield) {
                    return new Yield(f(_517.value0), Prelude["<$>"](Data_Lazy.functorLazy())(Prelude["<$>"](functorListT(__dict_Functor_564))(f))(_517.value1));
                };
                if (_517 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy())(Prelude["<$>"](functorListT(__dict_Functor_564))(f))(_517.value0));
                };
                if (_517 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap(__dict_Functor_564)(g);
        });
    };
    var fromEffect = function (__dict_Applicative_565) {
        return function (fa) {
            return ListT.create(Prelude["<$>"]((__dict_Applicative_565["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(Yield.create)(Data_Lazy.defer(function (_) {
                return nil(__dict_Applicative_565);
            })))(fa));
        };
    };
    var monadTransListT = function () {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_566) {
            return fromEffect(__dict_Monad_566["__superclass_Prelude.Applicative_0"]());
        });
    };
    var fromArray = function (__dict_Monad_567) {
        return function (xs) {
            var f = function (n) {
                return Prelude.pure(__dict_Monad_567["__superclass_Prelude.Applicative_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe())(Data_Tuple.Tuple.create(n + 1))(Data_Array["!!"](xs)(n)));
            };
            return unfold(__dict_Monad_567)(f)(0);
        };
    };
    var foldl$prime = function (__dict_Monad_568) {
        return function (f) {
            var loop = function (b) {
                return function (l) {
                    var g = function (_527) {
                        if (_527 instanceof Data_Maybe.Nothing) {
                            return Prelude.pure(__dict_Monad_568["__superclass_Prelude.Applicative_0"]())(b);
                        };
                        if (_527 instanceof Data_Maybe.Just) {
                            return Prelude[">>="](__dict_Monad_568["__superclass_Prelude.Bind_1"]())(f(b)(_527.value0.value0))(Prelude.flip(loop)(_527.value0.value1));
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_568["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_568)(l))(g);
                };
            };
            return loop;
        };
    };
    var foldl = function (__dict_Monad_569) {
        return function (f) {
            var loop = function (b) {
                return function (l) {
                    var g = function (_528) {
                        if (_528 instanceof Data_Maybe.Nothing) {
                            return Prelude.pure(__dict_Monad_569["__superclass_Prelude.Applicative_0"]())(b);
                        };
                        if (_528 instanceof Data_Maybe.Just) {
                            return loop(f(b)(_528.value0.value0))(_528.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_569["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_569)(l))(g);
                };
            };
            return loop;
        };
    };
    var toArray = function (__dict_Monad_570) {
        return Prelude["<<<"](Prelude.semigroupoidArr())(Prelude["<$>"](((__dict_Monad_570["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Array.reverse))(foldl(__dict_Monad_570)(Prelude.flip(Prelude[":"]))([  ]));
    };
    var filter = function (__dict_Functor_571) {
        return function (f) {
            var g = function (_524) {
                if (_524 instanceof Yield) {
                    var s$prime = Prelude["<$>"](Data_Lazy.functorLazy())(filter(__dict_Functor_571)(f))(_524.value1);
                    return f(_524.value0) ? new Yield(_524.value0, s$prime) : new Skip(s$prime);
                };
                if (_524 instanceof Skip) {
                    var s$prime = Prelude["<$>"](Data_Lazy.functorLazy())(filter(__dict_Functor_571)(f))(_524.value0);
                    return new Skip(s$prime);
                };
                if (_524 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap(__dict_Functor_571)(g);
        };
    };
    var dropWhile = function (__dict_Applicative_572) {
        return function (f) {
            var g = function (_523) {
                if (_523 instanceof Yield) {
                    return f(_523.value0) ? new Skip(Prelude["<$>"](Data_Lazy.functorLazy())(dropWhile(__dict_Applicative_572)(f))(_523.value1)) : new Yield(_523.value0, _523.value1);
                };
                if (_523 instanceof Skip) {
                    return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy())(dropWhile(__dict_Applicative_572)(f))(_523.value0));
                };
                if (_523 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap((__dict_Applicative_572["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g);
        };
    };
    var drop = function (__dict_Applicative_573) {
        return function (_513) {
            return function (_514) {
                if (_513 === 0) {
                    return _514;
                };
                var f = function (_522) {
                    if (_522 instanceof Yield) {
                        var s$prime = Prelude["<$>"](Data_Lazy.functorLazy())(drop(__dict_Applicative_573)(_513 - 1))(_522.value1);
                        return new Skip(s$prime);
                    };
                    if (_522 instanceof Skip) {
                        var s$prime = Prelude["<$>"](Data_Lazy.functorLazy())(drop(__dict_Applicative_573)(_513))(_522.value0);
                        return new Skip(s$prime);
                    };
                    if (_522 instanceof Done) {
                        return Done.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return stepMap((__dict_Applicative_573["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(_514);
            };
        };
    };
    var cons$prime = function (__dict_Applicative_574) {
        return function (lh) {
            return function (t) {
                var f = function (_515) {
                    return new Yield(Data_Lazy.force(lh), t);
                };
                return ListT.create(Prelude["<$>"]((__dict_Applicative_574["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(Prelude.pure(__dict_Applicative_574)(Prelude.unit)));
            };
        };
    };
    var concat = function (__dict_Applicative_575) {
        return function (x) {
            return function (y) {
                var f = function (_516) {
                    if (_516 instanceof Yield) {
                        return new Yield(_516.value0, Prelude["<$>"](Data_Lazy.functorLazy())(Prelude.flip(Prelude["<>"](semigroupListT(__dict_Applicative_575)))(y))(_516.value1));
                    };
                    if (_516 instanceof Skip) {
                        return new Skip(Prelude["<$>"](Data_Lazy.functorLazy())(Prelude.flip(Prelude["<>"](semigroupListT(__dict_Applicative_575)))(y))(_516.value0));
                    };
                    if (_516 instanceof Done) {
                        return new Skip(Data_Lazy.defer(Prelude["const"](y)));
                    };
                    throw new Error("Failed pattern match");
                };
                return stepMap((__dict_Applicative_575["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(x);
            };
        };
    };
    var semigroupListT = function (__dict_Applicative_576) {
        return new Prelude.Semigroup(concat(__dict_Applicative_576));
    };
    var monoidListT = function (__dict_Applicative_559) {
        return new Data_Monoid.Monoid(function () {
            return semigroupListT(__dict_Applicative_559);
        }, nil(__dict_Applicative_559));
    };
    var catMaybes = function (__dict_Functor_577) {
        return mapMaybe(__dict_Functor_577)(Prelude.id(Prelude.categoryArr()));
    };
    var arbitraryListT = function (__dict_Monad_579) {
        return function (__dict_Arbitrary_580) {
            return new Test_QuickCheck.Arbitrary(Prelude["<$>"](Test_QuickCheck_LCG.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(fromArray(__dict_Monad_579))(Test_QuickCheck.arbitrary(Test_QuickCheck.arbArray(__dict_Arbitrary_580))));
        };
    };
    var applyListT = function (__dict_Monad_581) {
        return new Prelude.Apply((function () {
            var g = function (f) {
                return function (x) {
                    return f(x);
                };
            };
            return zipWith(__dict_Monad_581)(g);
        })(), function () {
            return functorListT(((__dict_Monad_581["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindListT = function (__dict_Monad_578) {
        return new Prelude.Bind(function (fa) {
            return function (f) {
                var g = function (_518) {
                    if (_518 instanceof Yield) {
                        var h = function (s_1) {
                            return concat(__dict_Monad_578["__superclass_Prelude.Applicative_0"]())(f(_518.value0))(Prelude[">>="](bindListT(__dict_Monad_578))(s_1)(f));
                        };
                        return new Skip(Prelude["<$>"](Data_Lazy.functorLazy())(h)(_518.value1));
                    };
                    if (_518 instanceof Skip) {
                        var h = function (s_2) {
                            return Prelude[">>="](bindListT(__dict_Monad_578))(s_2)(f);
                        };
                        return new Skip(Prelude["<$>"](Data_Lazy.functorLazy())(h)(_518.value0));
                    };
                    if (_518 instanceof Done) {
                        return Done.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return stepMap(((__dict_Monad_578["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(fa);
            };
        }, function () {
            return applyListT(__dict_Monad_578);
        });
    };
    var applicativeListT = function (__dict_Monad_582) {
        return new Prelude.Applicative(function () {
            return applyListT(__dict_Monad_582);
        }, singleton(__dict_Monad_582["__superclass_Prelude.Applicative_0"]()));
    };
    var monadListT = function (__dict_Monad_560) {
        return new Prelude.Monad(function () {
            return applicativeListT(__dict_Monad_560);
        }, function () {
            return bindListT(__dict_Monad_560);
        });
    };
    return {
        ListT: ListT, 
        zipWith: zipWith, 
        "zipWith'": zipWith$prime, 
        scanl: scanl, 
        "foldl'": foldl$prime, 
        foldl: foldl, 
        tail: tail, 
        head: head, 
        uncons: uncons, 
        catMaybes: catMaybes, 
        mapMaybe: mapMaybe, 
        filter: filter, 
        dropWhile: dropWhile, 
        drop: drop, 
        takeWhile: takeWhile, 
        take: take, 
        toArray: toArray, 
        fromArray: fromArray, 
        iterate: iterate, 
        unfold: unfold, 
        wrapLazy: wrapLazy, 
        wrapEffect: wrapEffect, 
        fromEffect: fromEffect, 
        singleton: singleton, 
        prepend: prepend, 
        "prepend'": prepend$prime, 
        "cons'": cons$prime, 
        nil: nil, 
        semigroupListT: semigroupListT, 
        monoidListT: monoidListT, 
        functorListT: functorListT, 
        applyListT: applyListT, 
        applicativeListT: applicativeListT, 
        bindListT: bindListT, 
        monadListT: monadListT, 
        monadTransListT: monadTransListT, 
        arbitraryListT: arbitraryListT
    };
})();
var PS = PS || {};
PS.Data_List = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Unfoldable = PS.Data_Unfoldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Test_QuickCheck = PS.Test_QuickCheck;
    var Test_QuickCheck_LCG = PS.Test_QuickCheck_LCG;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function Nil() {

    };
    Nil.value = new Nil();
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    var $bang = function (__copy__533) {
        return function (__copy__534) {
            var _533 = __copy__533;
            var _534 = __copy__534;
            tco: while (true) {
                if (_533 instanceof Nil) {
                    return Data_Maybe.Nothing.value;
                };
                if (_533 instanceof Cons && _534 === 0) {
                    return new Data_Maybe.Just(_533.value0);
                };
                if (_533 instanceof Cons) {
                    var __tco__533 = _533.value1;
                    var __tco__534 = _534 - 1;
                    _533 = __tco__533;
                    _534 = __tco__534;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var zipWith = function (_548) {
        return function (_549) {
            return function (_550) {
                if (_549 instanceof Nil) {
                    return Nil.value;
                };
                if (_550 instanceof Nil) {
                    return Nil.value;
                };
                if (_549 instanceof Cons && _550 instanceof Cons) {
                    return new Cons(_548(_549.value0)(_550.value0), zipWith(_548)(_549.value1)(_550.value1));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unfoldableList = function () {
        return new Data_Unfoldable.Unfoldable(function (f) {
            return function (b) {
                var go = function (_592) {
                    if (_592 instanceof Data_Maybe.Nothing) {
                        return Nil.value;
                    };
                    if (_592 instanceof Data_Maybe.Just) {
                        return new Cons(_592.value0.value0, go(f(_592.value0.value1)));
                    };
                    throw new Error("Failed pattern match");
                };
                return go(f(b));
            };
        });
    };
    var toArray = (function () {
        var step = function (_600) {
            if (_600 instanceof Nil) {
                return Data_Maybe.Nothing.value;
            };
            if (_600 instanceof Cons) {
                return new Data_Maybe.Just(new Data_Tuple.Tuple(_600.value0, _600.value1));
            };
            throw new Error("Failed pattern match");
        };
        return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray())(step);
    })();
    var take = function (_537) {
        return function (_538) {
            if (_537 === 0) {
                return Nil.value;
            };
            if (_538 instanceof Nil) {
                return Nil.value;
            };
            if (_538 instanceof Cons) {
                return new Cons(_538.value0, take(_537 - 1)(_538.value1));
            };
            throw new Error("Failed pattern match");
        };
    };
    var tail = function (_545) {
        if (_545 instanceof Nil) {
            return Data_Maybe.Nothing.value;
        };
        if (_545 instanceof Cons) {
            return new Data_Maybe.Just(_545.value1);
        };
        throw new Error("Failed pattern match");
    };
    var span = function (_552) {
        return function (_553) {
            if (_553 instanceof Cons && _552(_553.value0)) {
                var _1641 = span(_552)(_553.value1);
                return new Data_Tuple.Tuple(new Cons(_553.value0, _1641.value0), _1641.value1);
            };
            return new Data_Tuple.Tuple(Nil.value, _553);
        };
    };
    var showList = function (__dict_Show_585) {
        return new Prelude.Show(function (_575) {
            if (_575 instanceof Nil) {
                return "Nil";
            };
            if (_575 instanceof Cons) {
                return "Cons (" + (Prelude.show(__dict_Show_585)(_575.value0) + (") (" + (Prelude.show(showList(__dict_Show_585))(_575.value1) + ")")));
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupList = function () {
        return new Prelude.Semigroup(function (_580) {
            return function (_581) {
                if (_580 instanceof Nil) {
                    return _581;
                };
                if (_580 instanceof Cons) {
                    return new Cons(_580.value0, Prelude["<>"](semigroupList())(_580.value1)(_581));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var reverse = (function () {
        var go = function (__copy__601) {
            return function (__copy__602) {
                var _601 = __copy__601;
                var _602 = __copy__602;
                tco: while (true) {
                    if (_602 instanceof Nil) {
                        return _601;
                    };
                    if (_602 instanceof Cons) {
                        var __tco__601 = new Cons(_602.value0, _601);
                        var __tco__602 = _602.value1;
                        _601 = __tco__601;
                        _602 = __tco__602;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        return go(Nil.value);
    })();
    var $$null = function (_551) {
        if (_551 instanceof Nil) {
            return true;
        };
        return false;
    };
    var monoidList = function () {
        return new Data_Monoid.Monoid(semigroupList, Nil.value);
    };
    var mapMaybe = function (_542) {
        return function (_543) {
            if (_543 instanceof Nil) {
                return Nil.value;
            };
            if (_543 instanceof Cons) {
                var _1660 = _542(_543.value0);
                if (_1660 instanceof Data_Maybe.Nothing) {
                    return mapMaybe(_542)(_543.value1);
                };
                if (_1660 instanceof Data_Maybe.Just) {
                    return new Cons(_1660.value0, mapMaybe(_542)(_543.value1));
                };
                throw new Error("Failed pattern match");
            };
            throw new Error("Failed pattern match");
        };
    };
    var length = function (_539) {
        if (_539 instanceof Nil) {
            return 0;
        };
        if (_539 instanceof Cons) {
            return 1 + length(_539.value1);
        };
        throw new Error("Failed pattern match");
    };
    var last = function (__copy__546) {
        var _546 = __copy__546;
        tco: while (true) {
            if (_546 instanceof Cons && _546.value1 instanceof Nil) {
                return new Data_Maybe.Just(_546.value0);
            };
            if (_546 instanceof Cons) {
                var __tco__546 = _546.value1;
                _546 = __tco__546;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var insertBy = function (_556) {
        return function (_557) {
            return function (_558) {
                if (_558 instanceof Nil) {
                    return new Cons(_557, Nil.value);
                };
                if (_558 instanceof Cons) {
                    var _1675 = _556(_557)(_558.value0);
                    if (_1675 instanceof Prelude.GT) {
                        return new Cons(_558.value0, insertBy(_556)(_557)(_558.value1));
                    };
                    return new Cons(_557, _558);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var insertAt = function (_559) {
        return function (_560) {
            return function (_561) {
                if (_559 === 0) {
                    return new Data_Maybe.Just(new Cons(_560, _561));
                };
                if (_561 instanceof Cons) {
                    return Prelude["<$>"](Data_Maybe.functorMaybe())(Cons.create(_561.value0))(insertAt(_559 - 1)(_560)(_561.value1));
                };
                return Data_Maybe.Nothing.value;
            };
        };
    };
    var insert = function (__dict_Ord_587) {
        return insertBy(Prelude.compare(__dict_Ord_587));
    };
    var init = function (_547) {
        if (_547 instanceof Cons && _547.value1 instanceof Nil) {
            return new Data_Maybe.Just(Nil.value);
        };
        if (_547 instanceof Cons) {
            return Prelude["<$>"](Data_Maybe.functorMaybe())(Cons.create(_547.value0))(init(_547.value1));
        };
        return Data_Maybe.Nothing.value;
    };
    var head = function (_544) {
        if (_544 instanceof Nil) {
            return Data_Maybe.Nothing.value;
        };
        if (_544 instanceof Cons) {
            return new Data_Maybe.Just(_544.value0);
        };
        throw new Error("Failed pattern match");
    };
    var groupBy = function (_554) {
        return function (_555) {
            if (_555 instanceof Nil) {
                return Nil.value;
            };
            if (_555 instanceof Cons) {
                var _1693 = span(_554(_555.value0))(_555.value1);
                return new Cons(new Cons(_555.value0, _1693.value0), groupBy(_554)(_1693.value1));
            };
            throw new Error("Failed pattern match");
        };
    };
    var group = function (__dict_Eq_588) {
        return groupBy(Prelude["=="](__dict_Eq_588));
    };
    var functorList = function () {
        return new Prelude.Functor(function (_582) {
            return function (_583) {
                if (_583 instanceof Nil) {
                    return Nil.value;
                };
                if (_583 instanceof Cons) {
                    return new Cons(_582(_583.value0), Prelude["<$>"](functorList())(_582)(_583.value1));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var fromArray = Data_Foldable.foldr(Data_Foldable.foldableArray())(Cons.create)(Nil.value);
    var foldableList = function () {
        return new Data_Foldable.Foldable(function (__dict_Monoid_589) {
            return function (_590) {
                return function (_591) {
                    if (_591 instanceof Nil) {
                        return Data_Monoid.mempty(__dict_Monoid_589);
                    };
                    if (_591 instanceof Cons) {
                        return Prelude["<>"](__dict_Monoid_589["__superclass_Prelude.Semigroup_0"]())(_590(_591.value0))(Data_Foldable.foldMap(foldableList())(__dict_Monoid_589)(_590)(_591.value1));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_587) {
            return function (_588) {
                return function (_589) {
                    if (_589 instanceof Nil) {
                        return _588;
                    };
                    if (_589 instanceof Cons) {
                        return Data_Foldable.foldl(foldableList())(_587)(_587(_588)(_589.value0))(_589.value1);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        }, function (_584) {
            return function (_585) {
                return function (_586) {
                    if (_586 instanceof Nil) {
                        return _585;
                    };
                    if (_586 instanceof Cons) {
                        return _584(_586.value0)(Data_Foldable.foldr(foldableList())(_584)(_585)(_586.value1));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var traversableList = function () {
        return new Data_Traversable.Traversable(foldableList, functorList, function (__dict_Applicative_584) {
            return function (_595) {
                if (_595 instanceof Nil) {
                    return Prelude.pure(__dict_Applicative_584)(Nil.value);
                };
                if (_595 instanceof Cons) {
                    return Prelude["<*>"](__dict_Applicative_584["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_584["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(_595.value0))(Data_Traversable.sequence(traversableList())(__dict_Applicative_584)(_595.value1));
                };
                throw new Error("Failed pattern match");
            };
        }, function (__dict_Applicative_583) {
            return function (_593) {
                return function (_594) {
                    if (_594 instanceof Nil) {
                        return Prelude.pure(__dict_Applicative_583)(Nil.value);
                    };
                    if (_594 instanceof Cons) {
                        return Prelude["<*>"](__dict_Applicative_583["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_583["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(_593(_594.value0)))(Data_Traversable.traverse(traversableList())(__dict_Applicative_583)(_593)(_594.value1));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        });
    };
    var filter = function (_540) {
        return function (_541) {
            if (_541 instanceof Nil) {
                return Nil.value;
            };
            if (_541 instanceof Cons && _540(_541.value0)) {
                return new Cons(_541.value0, filter(_540)(_541.value1));
            };
            if (_541 instanceof Cons) {
                return filter(_540)(_541.value1);
            };
            throw new Error("Failed pattern match");
        };
    };
    var intersectBy = function (_572) {
        return function (_573) {
            return function (_574) {
                if (_573 instanceof Nil) {
                    return Nil.value;
                };
                if (_574 instanceof Nil) {
                    return Nil.value;
                };
                return filter(function (x) {
                    return Data_Foldable.any(foldableList())(_572(x))(_574);
                })(_573);
            };
        };
    };
    var intersect = function (__dict_Eq_590) {
        return intersectBy(Prelude["=="](__dict_Eq_590));
    };
    var nubBy = function (_570) {
        return function (_571) {
            if (_571 instanceof Nil) {
                return Nil.value;
            };
            if (_571 instanceof Cons) {
                return new Cons(_571.value0, nubBy(_570)(filter(function (y) {
                    return !_570(_571.value0)(y);
                })(_571.value1)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_591) {
        return nubBy(Prelude["=="](__dict_Eq_591));
    };
    var eqList = function (__dict_Eq_592) {
        return new Prelude.Eq(function (xs) {
            return function (ys) {
                return !Prelude["=="](eqList(__dict_Eq_592))(xs)(ys);
            };
        }, function (_576) {
            return function (_577) {
                if (_576 instanceof Nil && _577 instanceof Nil) {
                    return true;
                };
                if (_576 instanceof Cons && _577 instanceof Cons) {
                    return Prelude["=="](__dict_Eq_592)(_576.value0)(_577.value0) && Prelude["=="](eqList(__dict_Eq_592))(_576.value1)(_577.value1);
                };
                return false;
            };
        });
    };
    var ordList = function (__dict_Ord_586) {
        return new Prelude.Ord(function () {
            return eqList(__dict_Ord_586["__superclass_Prelude.Eq_0"]());
        }, function (_578) {
            return function (_579) {
                if (_578 instanceof Nil && _579 instanceof Nil) {
                    return Prelude.EQ.value;
                };
                if (_578 instanceof Nil) {
                    return Prelude.LT.value;
                };
                if (_579 instanceof Nil) {
                    return Prelude.GT.value;
                };
                if (_578 instanceof Cons && _579 instanceof Cons) {
                    var _1744 = Prelude.compare(__dict_Ord_586)(_578.value0)(_579.value0);
                    if (_1744 instanceof Prelude.EQ) {
                        return Prelude.compare(ordList(__dict_Ord_586))(_578.value1)(_579.value1);
                    };
                    return _1744;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var drop = function (__copy__535) {
        return function (__copy__536) {
            var _535 = __copy__535;
            var _536 = __copy__536;
            tco: while (true) {
                if (_535 === 0) {
                    return _536;
                };
                if (_536 instanceof Nil) {
                    return Nil.value;
                };
                if (_536 instanceof Cons) {
                    var __tco__535 = _535 - 1;
                    var __tco__536 = _536.value1;
                    _535 = __tco__535;
                    _536 = __tco__536;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var deleteBy = function (_562) {
        return function (_563) {
            return function (_564) {
                if (_564 instanceof Nil) {
                    return Nil.value;
                };
                if (_564 instanceof Cons && _562(_563)(_564.value0)) {
                    return _564.value1;
                };
                if (_564 instanceof Cons) {
                    return new Cons(_564.value0, deleteBy(_562)(_563)(_564.value1));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unionBy = function (eq) {
        return function (xs) {
            return function (ys) {
                return Prelude["<>"](semigroupList())(xs)(Data_Foldable.foldl(foldableList())(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
            };
        };
    };
    var union = function (__dict_Eq_593) {
        return unionBy(Prelude["=="](__dict_Eq_593));
    };
    var deleteAt = function (_565) {
        return function (_566) {
            if (_565 === 0 && _566 instanceof Cons) {
                return new Data_Maybe.Just(_566.value1);
            };
            if (_566 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe())(Cons.create(_566.value0))(deleteAt(_565 - 1)(_566.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var $$delete = function (__dict_Eq_594) {
        return deleteBy(Prelude["=="](__dict_Eq_594));
    };
    var $bslash$bslash = function (__dict_Eq_595) {
        return Data_Foldable.foldl(foldableList())(Prelude.flip($$delete(__dict_Eq_595)));
    };
    var catMaybes = mapMaybe(Prelude.id(Prelude.categoryArr()));
    var arbitraryList = function (__dict_Arbitrary_596) {
        return new Test_QuickCheck.Arbitrary(Prelude["<$>"](Test_QuickCheck_LCG.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy())))(fromArray)(Test_QuickCheck.arbitrary(Test_QuickCheck.arbArray(__dict_Arbitrary_596))));
    };
    var applyList = function () {
        return new Prelude.Apply(function (_596) {
            return function (_597) {
                if (_596 instanceof Nil) {
                    return Nil.value;
                };
                if (_596 instanceof Cons) {
                    return Prelude["<>"](semigroupList())(Prelude["<$>"](functorList())(_596.value0)(_597))(Prelude["<*>"](applyList())(_596.value1)(_597));
                };
                throw new Error("Failed pattern match");
            };
        }, functorList);
    };
    var bindList = function () {
        return new Prelude.Bind(function (_598) {
            return function (_599) {
                if (_598 instanceof Nil) {
                    return Nil.value;
                };
                if (_598 instanceof Cons) {
                    return Prelude["<>"](semigroupList())(_599(_598.value0))(Prelude[">>="](bindList())(_598.value1)(_599));
                };
                throw new Error("Failed pattern match");
            };
        }, applyList);
    };
    var applicativeList = function () {
        return new Prelude.Applicative(applyList, function (a) {
            return new Cons(a, Nil.value);
        });
    };
    var monadList = function () {
        return new Prelude.Monad(applicativeList, bindList);
    };
    var alterAt = function (_567) {
        return function (_568) {
            return function (_569) {
                if (_567 === 0 && _569 instanceof Cons) {
                    return Data_Maybe.Just.create((function () {
                        var _1777 = _568(_569.value0);
                        if (_1777 instanceof Data_Maybe.Nothing) {
                            return _569.value1;
                        };
                        if (_1777 instanceof Data_Maybe.Just) {
                            return new Cons(_1777.value0, _569.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                };
                if (_569 instanceof Cons) {
                    return Prelude["<$>"](Data_Maybe.functorMaybe())(Cons.create(_569.value0))(alterAt(_567 - 1)(_568)(_569.value1));
                };
                return Data_Maybe.Nothing.value;
            };
        };
    };
    var altList = function () {
        return new Control_Alt.Alt(Prelude["<>"](semigroupList()), functorList);
    };
    var plusList = function () {
        return new Control_Plus.Plus(altList, Nil.value);
    };
    var alternativeList = function () {
        return new Control_Alternative.Alternative(plusList, applicativeList);
    };
    var monadPlusList = function () {
        return new Control_MonadPlus.MonadPlus(alternativeList, monadList);
    };
    return {
        Nil: Nil, 
        Cons: Cons, 
        unionBy: unionBy, 
        union: union, 
        intersectBy: intersectBy, 
        intersect: intersect, 
        nubBy: nubBy, 
        nub: nub, 
        reverse: reverse, 
        alterAt: alterAt, 
        deleteAt: deleteAt, 
        deleteBy: deleteBy, 
        "delete": $$delete, 
        insertAt: insertAt, 
        insertBy: insertBy, 
        insert: insert, 
        "\\\\": $bslash$bslash, 
        groupBy: groupBy, 
        group: group, 
        span: span, 
        "null": $$null, 
        zipWith: zipWith, 
        init: init, 
        last: last, 
        tail: tail, 
        head: head, 
        catMaybes: catMaybes, 
        mapMaybe: mapMaybe, 
        filter: filter, 
        length: length, 
        take: take, 
        drop: drop, 
        "!": $bang, 
        toArray: toArray, 
        fromArray: fromArray, 
        showList: showList, 
        eqList: eqList, 
        ordList: ordList, 
        semigroupList: semigroupList, 
        monoidList: monoidList, 
        functorList: functorList, 
        foldableList: foldableList, 
        unfoldableList: unfoldableList, 
        traversableList: traversableList, 
        applyList: applyList, 
        applicativeList: applicativeList, 
        bindList: bindList, 
        monadList: monadList, 
        altList: altList, 
        plusList: plusList, 
        alternativeList: alternativeList, 
        monadPlusList: monadPlusList, 
        arbitraryList: arbitraryList
    };
})();
var PS = PS || {};
PS.Data_List_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_List = PS.Data_List;
    var tail = function (_604) {
        if (_604 instanceof Data_List.Cons) {
            return _604.value1;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (__copy__605) {
        var _605 = __copy__605;
        tco: while (true) {
            if (_605 instanceof Data_List.Cons && _605.value1 instanceof Data_List.Nil) {
                return _605.value0;
            };
            if (_605 instanceof Data_List.Cons) {
                var __tco__605 = _605.value1;
                _605 = __tco__605;
                continue tco;
            };
            throw new Error("Failed pattern match");
        };
    };
    var init = function (_606) {
        if (_606 instanceof Data_List.Cons && _606.value1 instanceof Data_List.Nil) {
            return Data_List.Nil.value;
        };
        if (_606 instanceof Data_List.Cons) {
            return new Data_List.Cons(_606.value0, init(_606.value1));
        };
        throw new Error("Failed pattern match");
    };
    var head = function (_603) {
        if (_603 instanceof Data_List.Cons) {
            return _603.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        init: init, 
        last: last, 
        tail: tail, 
        head: head
    };
})();
